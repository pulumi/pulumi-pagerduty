// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty
{
    /// <summary>
    /// An Automation Actions [runner](https://developer.pagerduty.com/api-reference/d78999fb7e863-create-an-automation-action-runner) is the method for how actions are executed. This can be done locally using an installed runner agent or as a connection to a PD Runbook Automation instance.
    /// 
    /// &gt; Only Runbook Automation (runbook) runners can be created.
    /// 
    /// ## Import
    /// 
    /// -&gt; In the example below the `runbook_api_key` attribute has been omitted to avoid resource replacement after the import. Runners can be imported using the `id`, e.g. resource "pagerduty_automation_actions_runner" "example" {
    /// 
    ///  name = "Runner created via TF"
    /// 
    ///  description = "Description of the Runner created via TF"
    /// 
    ///  runner_type = "runbook"
    /// 
    ///  runbook_base_uri = "rdcat.stg" }
    /// 
    /// ```sh
    ///  $ pulumi import pagerduty:index/automationActionsRunner:AutomationActionsRunner example 01DER7CUUBF7TH4116K0M4WKPU
    /// ```
    /// </summary>
    [PagerdutyResourceType("pagerduty:index/automationActionsRunner:AutomationActionsRunner")]
    public partial class AutomationActionsRunner : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The time runner was created. Represented as an ISO 8601 timestamp.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// The description of the runner. Max length is 1024 characters.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// (Optional) The last time runner has been seen. Represented as an ISO 8601 timestamp.
        /// </summary>
        [Output("lastSeen")]
        public Output<string> LastSeen { get; private set; } = null!;

        /// <summary>
        /// The name of the runner. Max length is 255 characters.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The unique User API Token created in Runbook Automation.
        /// </summary>
        [Output("runbookApiKey")]
        public Output<string?> RunbookApiKey { get; private set; } = null!;

        /// <summary>
        /// The subdomain for your Runbook Automation Instance.
        /// </summary>
        [Output("runbookBaseUri")]
        public Output<string?> RunbookBaseUri { get; private set; } = null!;

        /// <summary>
        /// The type of runner. The only allowed values is `runbook`.
        /// </summary>
        [Output("runnerType")]
        public Output<string> RunnerType { get; private set; } = null!;

        /// <summary>
        /// The type of object. The value returned will be `runner`.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a AutomationActionsRunner resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AutomationActionsRunner(string name, AutomationActionsRunnerArgs args, CustomResourceOptions? options = null)
            : base("pagerduty:index/automationActionsRunner:AutomationActionsRunner", name, args ?? new AutomationActionsRunnerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AutomationActionsRunner(string name, Input<string> id, AutomationActionsRunnerState? state = null, CustomResourceOptions? options = null)
            : base("pagerduty:index/automationActionsRunner:AutomationActionsRunner", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "runbookApiKey",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AutomationActionsRunner resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AutomationActionsRunner Get(string name, Input<string> id, AutomationActionsRunnerState? state = null, CustomResourceOptions? options = null)
        {
            return new AutomationActionsRunner(name, id, state, options);
        }
    }

    public sealed class AutomationActionsRunnerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the runner. Max length is 1024 characters.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Optional) The last time runner has been seen. Represented as an ISO 8601 timestamp.
        /// </summary>
        [Input("lastSeen")]
        public Input<string>? LastSeen { get; set; }

        /// <summary>
        /// The name of the runner. Max length is 255 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("runbookApiKey")]
        private Input<string>? _runbookApiKey;

        /// <summary>
        /// The unique User API Token created in Runbook Automation.
        /// </summary>
        public Input<string>? RunbookApiKey
        {
            get => _runbookApiKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _runbookApiKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The subdomain for your Runbook Automation Instance.
        /// </summary>
        [Input("runbookBaseUri")]
        public Input<string>? RunbookBaseUri { get; set; }

        /// <summary>
        /// The type of runner. The only allowed values is `runbook`.
        /// </summary>
        [Input("runnerType", required: true)]
        public Input<string> RunnerType { get; set; } = null!;

        public AutomationActionsRunnerArgs()
        {
        }
        public static new AutomationActionsRunnerArgs Empty => new AutomationActionsRunnerArgs();
    }

    public sealed class AutomationActionsRunnerState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The time runner was created. Represented as an ISO 8601 timestamp.
        /// </summary>
        [Input("creationTime")]
        public Input<string>? CreationTime { get; set; }

        /// <summary>
        /// The description of the runner. Max length is 1024 characters.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// (Optional) The last time runner has been seen. Represented as an ISO 8601 timestamp.
        /// </summary>
        [Input("lastSeen")]
        public Input<string>? LastSeen { get; set; }

        /// <summary>
        /// The name of the runner. Max length is 255 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("runbookApiKey")]
        private Input<string>? _runbookApiKey;

        /// <summary>
        /// The unique User API Token created in Runbook Automation.
        /// </summary>
        public Input<string>? RunbookApiKey
        {
            get => _runbookApiKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _runbookApiKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The subdomain for your Runbook Automation Instance.
        /// </summary>
        [Input("runbookBaseUri")]
        public Input<string>? RunbookBaseUri { get; set; }

        /// <summary>
        /// The type of runner. The only allowed values is `runbook`.
        /// </summary>
        [Input("runnerType")]
        public Input<string>? RunnerType { get; set; }

        /// <summary>
        /// The type of object. The value returned will be `runner`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public AutomationActionsRunnerState()
        {
        }
        public static new AutomationActionsRunnerState Empty => new AutomationActionsRunnerState();
    }
}
