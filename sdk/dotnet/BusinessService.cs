// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty
{
    /// <summary>
    /// A [business service](https://developer.pagerduty.com/api-reference/reference/REST/openapiv3.json/paths/~1business_services/get) allows you to model capabilities that span multiple technical services and that may be owned by several different teams.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Pagerduty = Pulumi.Pagerduty;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Pagerduty.BusinessService("example", new Pagerduty.BusinessServiceArgs
    ///         {
    ///             Description = "A very descriptive description of this business service",
    ///             PointOfContact = "PagerDuty Admin",
    ///             Team = "P37RSRS",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Services can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import pagerduty:index/businessService:BusinessService main PLBP09X
    /// ```
    /// </summary>
    [PagerdutyResourceType("pagerduty:index/businessService:BusinessService")]
    public partial class BusinessService : Pulumi.CustomResource
    {
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        [Output("htmlUrl")]
        public Output<string> HtmlUrl { get; private set; } = null!;

        /// <summary>
        /// The name of the business service.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The owner of the business service.
        /// </summary>
        [Output("pointOfContact")]
        public Output<string?> PointOfContact { get; private set; } = null!;

        [Output("self")]
        public Output<string> Self { get; private set; } = null!;

        [Output("summary")]
        public Output<string> Summary { get; private set; } = null!;

        /// <summary>
        /// ID of the team that owns the business service.
        /// </summary>
        [Output("team")]
        public Output<string?> Team { get; private set; } = null!;

        /// <summary>
        /// **Deprecated** (Optional) Default (and only supported) value is `business_service`.
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;


        /// <summary>
        /// Create a BusinessService resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BusinessService(string name, BusinessServiceArgs? args = null, CustomResourceOptions? options = null)
            : base("pagerduty:index/businessService:BusinessService", name, args ?? new BusinessServiceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BusinessService(string name, Input<string> id, BusinessServiceState? state = null, CustomResourceOptions? options = null)
            : base("pagerduty:index/businessService:BusinessService", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BusinessService resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BusinessService Get(string name, Input<string> id, BusinessServiceState? state = null, CustomResourceOptions? options = null)
        {
            return new BusinessService(name, id, state, options);
        }
    }

    public sealed class BusinessServiceArgs : Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the business service.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The owner of the business service.
        /// </summary>
        [Input("pointOfContact")]
        public Input<string>? PointOfContact { get; set; }

        /// <summary>
        /// ID of the team that owns the business service.
        /// </summary>
        [Input("team")]
        public Input<string>? Team { get; set; }

        /// <summary>
        /// **Deprecated** (Optional) Default (and only supported) value is `business_service`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public BusinessServiceArgs()
        {
            Description = "Managed by Pulumi";
        }
    }

    public sealed class BusinessServiceState : Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("htmlUrl")]
        public Input<string>? HtmlUrl { get; set; }

        /// <summary>
        /// The name of the business service.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The owner of the business service.
        /// </summary>
        [Input("pointOfContact")]
        public Input<string>? PointOfContact { get; set; }

        [Input("self")]
        public Input<string>? Self { get; set; }

        [Input("summary")]
        public Input<string>? Summary { get; set; }

        /// <summary>
        /// ID of the team that owns the business service.
        /// </summary>
        [Input("team")]
        public Input<string>? Team { get; set; }

        /// <summary>
        /// **Deprecated** (Optional) Default (and only supported) value is `business_service`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public BusinessServiceState()
        {
            Description = "Managed by Pulumi";
        }
    }
}
