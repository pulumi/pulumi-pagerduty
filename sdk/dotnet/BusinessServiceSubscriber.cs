// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty
{
    /// <summary>
    /// A [business service subscriber](https://developer.pagerduty.com/api-reference/b3A6NDUwNDgxOQ-list-business-service-subscribers) allows you to subscribe users or teams to automatically receive updates about key business services.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Pagerduty = Pulumi.Pagerduty;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleBusinessService = new Pagerduty.BusinessService("exampleBusinessService", new()
    ///     {
    ///         Description = "A very descriptive description of this business service",
    ///         PointOfContact = "PagerDuty Admin",
    ///         Team = "P37RSRS",
    ///     });
    /// 
    ///     var engteam = new Pagerduty.Team("engteam");
    /// 
    ///     var exampleUser = new Pagerduty.User("exampleUser", new()
    ///     {
    ///         Email = "125.greenholt.earline@graham.name",
    ///     });
    /// 
    ///     var teamExample = new Pagerduty.BusinessServiceSubscriber("teamExample", new()
    ///     {
    ///         SubscriberId = engteam.Id,
    ///         SubscriberType = "team",
    ///         BusinessServiceId = exampleBusinessService.Id,
    ///     });
    /// 
    ///     var userExample = new Pagerduty.BusinessServiceSubscriber("userExample", new()
    ///     {
    ///         SubscriberId = exampleUser.Id,
    ///         SubscriberType = "user",
    ///         BusinessServiceId = exampleBusinessService.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Services can be imported using the `id` using the related business service ID, the subscriber type and the subscriber ID separated by a dot, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import pagerduty:index/businessServiceSubscriber:BusinessServiceSubscriber main PLBP09X.team.PLBP09X
    /// ```
    /// </summary>
    [PagerdutyResourceType("pagerduty:index/businessServiceSubscriber:BusinessServiceSubscriber")]
    public partial class BusinessServiceSubscriber : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the business service to subscribe to.
        /// </summary>
        [Output("businessServiceId")]
        public Output<string> BusinessServiceId { get; private set; } = null!;

        /// <summary>
        /// The ID of the subscriber entity.
        /// </summary>
        [Output("subscriberId")]
        public Output<string> SubscriberId { get; private set; } = null!;

        /// <summary>
        /// Type of subscriber entity in the subscriber assignment. Possible values can be `user` and `team`.
        /// </summary>
        [Output("subscriberType")]
        public Output<string> SubscriberType { get; private set; } = null!;


        /// <summary>
        /// Create a BusinessServiceSubscriber resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BusinessServiceSubscriber(string name, BusinessServiceSubscriberArgs args, CustomResourceOptions? options = null)
            : base("pagerduty:index/businessServiceSubscriber:BusinessServiceSubscriber", name, args ?? new BusinessServiceSubscriberArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BusinessServiceSubscriber(string name, Input<string> id, BusinessServiceSubscriberState? state = null, CustomResourceOptions? options = null)
            : base("pagerduty:index/businessServiceSubscriber:BusinessServiceSubscriber", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BusinessServiceSubscriber resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BusinessServiceSubscriber Get(string name, Input<string> id, BusinessServiceSubscriberState? state = null, CustomResourceOptions? options = null)
        {
            return new BusinessServiceSubscriber(name, id, state, options);
        }
    }

    public sealed class BusinessServiceSubscriberArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the business service to subscribe to.
        /// </summary>
        [Input("businessServiceId", required: true)]
        public Input<string> BusinessServiceId { get; set; } = null!;

        /// <summary>
        /// The ID of the subscriber entity.
        /// </summary>
        [Input("subscriberId", required: true)]
        public Input<string> SubscriberId { get; set; } = null!;

        /// <summary>
        /// Type of subscriber entity in the subscriber assignment. Possible values can be `user` and `team`.
        /// </summary>
        [Input("subscriberType", required: true)]
        public Input<string> SubscriberType { get; set; } = null!;

        public BusinessServiceSubscriberArgs()
        {
        }
        public static new BusinessServiceSubscriberArgs Empty => new BusinessServiceSubscriberArgs();
    }

    public sealed class BusinessServiceSubscriberState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the business service to subscribe to.
        /// </summary>
        [Input("businessServiceId")]
        public Input<string>? BusinessServiceId { get; set; }

        /// <summary>
        /// The ID of the subscriber entity.
        /// </summary>
        [Input("subscriberId")]
        public Input<string>? SubscriberId { get; set; }

        /// <summary>
        /// Type of subscriber entity in the subscriber assignment. Possible values can be `user` and `team`.
        /// </summary>
        [Input("subscriberType")]
        public Input<string>? SubscriberType { get; set; }

        public BusinessServiceSubscriberState()
        {
        }
        public static new BusinessServiceSubscriberState Empty => new BusinessServiceSubscriberState();
    }
}
