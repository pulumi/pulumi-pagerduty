// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty
{
    /// <summary>
    /// A [Custom Field](https://support.pagerduty.com/docs/custom-fields) is a resuable element which can be added to Custom Field Schemas.
    /// 
    /// &gt; The Custom Fields feature is currently available in Early Access.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Pagerduty = Pulumi.Pagerduty;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var csImpact = new Pagerduty.CustomField("csImpact", new()
    ///     {
    ///         Datatype = "string",
    ///     });
    /// 
    ///     var sreEnvironment = new Pagerduty.CustomField("sreEnvironment", new()
    ///     {
    ///         Datatype = "string",
    ///         FixedOptions = true,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Fields can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import pagerduty:index/customField:CustomField sre_environment PLBP09X
    /// ```
    /// </summary>
    [PagerdutyResourceType("pagerduty:index/customField:CustomField")]
    public partial class CustomField : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The datatype of the field. Must be one of `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
        /// </summary>
        [Output("datatype")]
        public Output<string> Datatype { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// True if the field can only accept values from a set of options.
        /// </summary>
        [Output("fixedOptions")]
        public Output<bool?> FixedOptions { get; private set; } = null!;

        /// <summary>
        /// True if the field can accept multiple values.
        /// </summary>
        [Output("multiValue")]
        public Output<bool?> MultiValue { get; private set; } = null!;

        /// <summary>
        /// The name of the field.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a CustomField resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomField(string name, CustomFieldArgs args, CustomResourceOptions? options = null)
            : base("pagerduty:index/customField:CustomField", name, args ?? new CustomFieldArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomField(string name, Input<string> id, CustomFieldState? state = null, CustomResourceOptions? options = null)
            : base("pagerduty:index/customField:CustomField", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomField resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomField Get(string name, Input<string> id, CustomFieldState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomField(name, id, state, options);
        }
    }

    public sealed class CustomFieldArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The datatype of the field. Must be one of `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
        /// </summary>
        [Input("datatype", required: true)]
        public Input<string> Datatype { get; set; } = null!;

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// True if the field can only accept values from a set of options.
        /// </summary>
        [Input("fixedOptions")]
        public Input<bool>? FixedOptions { get; set; }

        /// <summary>
        /// True if the field can accept multiple values.
        /// </summary>
        [Input("multiValue")]
        public Input<bool>? MultiValue { get; set; }

        /// <summary>
        /// The name of the field.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public CustomFieldArgs()
        {
        }
        public static new CustomFieldArgs Empty => new CustomFieldArgs();
    }

    public sealed class CustomFieldState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The datatype of the field. Must be one of `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
        /// </summary>
        [Input("datatype")]
        public Input<string>? Datatype { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// True if the field can only accept values from a set of options.
        /// </summary>
        [Input("fixedOptions")]
        public Input<bool>? FixedOptions { get; set; }

        /// <summary>
        /// True if the field can accept multiple values.
        /// </summary>
        [Input("multiValue")]
        public Input<bool>? MultiValue { get; set; }

        /// <summary>
        /// The name of the field.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public CustomFieldState()
        {
        }
        public static new CustomFieldState Empty => new CustomFieldState();
    }
}
