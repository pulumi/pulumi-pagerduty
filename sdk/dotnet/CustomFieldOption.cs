// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty
{
    /// <summary>
    /// A Custom Field Option is a specific value that can be used for [Custom Fields](https://support.pagerduty.com/docs/custom-fields) that only allow values from a set of fixed option.
    /// 
    /// &gt; The Custom Fields feature is currently available in Early Access.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Pagerduty = Pulumi.Pagerduty;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var sreEnvironment = new Pagerduty.CustomField("sreEnvironment", new()
    ///     {
    ///         Datatype = "string",
    ///         FixedOptions = true,
    ///     });
    /// 
    ///     var devEnvironment = new Pagerduty.CustomFieldOption("devEnvironment", new()
    ///     {
    ///         Field = sreEnvironment.Id,
    ///         Datatype = "string",
    ///         Value = "dev",
    ///     });
    /// 
    ///     var stageEnvironment = new Pagerduty.CustomFieldOption("stageEnvironment", new()
    ///     {
    ///         Field = sreEnvironment.Id,
    ///         Datatype = "string",
    ///         Value = "stage",
    ///     });
    /// 
    ///     var prodEnvironment = new Pagerduty.CustomFieldOption("prodEnvironment", new()
    ///     {
    ///         Field = sreEnvironment.Id,
    ///         Datatype = "string",
    ///         Value = "prod",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [PagerdutyResourceType("pagerduty:index/customFieldOption:CustomFieldOption")]
    public partial class CustomFieldOption : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The datatype of the field option. Must be one of `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
        /// </summary>
        [Output("datatype")]
        public Output<string> Datatype { get; private set; } = null!;

        /// <summary>
        /// The ID of the field.
        /// </summary>
        [Output("field")]
        public Output<string> Field { get; private set; } = null!;

        /// <summary>
        /// The allowed value.
        /// </summary>
        [Output("value")]
        public Output<string> Value { get; private set; } = null!;


        /// <summary>
        /// Create a CustomFieldOption resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomFieldOption(string name, CustomFieldOptionArgs args, CustomResourceOptions? options = null)
            : base("pagerduty:index/customFieldOption:CustomFieldOption", name, args ?? new CustomFieldOptionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomFieldOption(string name, Input<string> id, CustomFieldOptionState? state = null, CustomResourceOptions? options = null)
            : base("pagerduty:index/customFieldOption:CustomFieldOption", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomFieldOption resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomFieldOption Get(string name, Input<string> id, CustomFieldOptionState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomFieldOption(name, id, state, options);
        }
    }

    public sealed class CustomFieldOptionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The datatype of the field option. Must be one of `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
        /// </summary>
        [Input("datatype", required: true)]
        public Input<string> Datatype { get; set; } = null!;

        /// <summary>
        /// The ID of the field.
        /// </summary>
        [Input("field", required: true)]
        public Input<string> Field { get; set; } = null!;

        /// <summary>
        /// The allowed value.
        /// </summary>
        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public CustomFieldOptionArgs()
        {
        }
        public static new CustomFieldOptionArgs Empty => new CustomFieldOptionArgs();
    }

    public sealed class CustomFieldOptionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The datatype of the field option. Must be one of `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
        /// </summary>
        [Input("datatype")]
        public Input<string>? Datatype { get; set; }

        /// <summary>
        /// The ID of the field.
        /// </summary>
        [Input("field")]
        public Input<string>? Field { get; set; }

        /// <summary>
        /// The allowed value.
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        public CustomFieldOptionState()
        {
        }
        public static new CustomFieldOptionState Empty => new CustomFieldOptionState();
    }
}
