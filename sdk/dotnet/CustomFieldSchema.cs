// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty
{
    /// <summary>
    /// !&gt; This Resource is no longer functional. Documentation is left here for the purpose of documenting migration steps.
    /// 
    /// A [Custom Field Schema](https://support.pagerduty.com/docs/custom-fields#schemas) is a set of Custom Fields which can be set on an incident.
    /// 
    /// ## Migration
    /// 
    /// This resource has no currently functional counterpart. Custom Fields on Incidents are now applied globally
    /// to incidents within an account and have no notion of a Field Schema.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Pagerduty = Pulumi.Pagerduty;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var csImpact = new Pagerduty.CustomField("csImpact", new()
    ///     {
    ///         Datatype = "string",
    ///     });
    /// 
    ///     var mySchema = new Pagerduty.CustomFieldSchema("mySchema", new()
    ///     {
    ///         Description = "Fields used on incidents",
    ///         Title = "My Schema",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Fields schemas can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import pagerduty:index/customFieldSchema:CustomFieldSchema my_schema PLBP09X
    /// ```
    /// </summary>
    [PagerdutyResourceType("pagerduty:index/customFieldSchema:CustomFieldSchema")]
    public partial class CustomFieldSchema : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the field schema.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The title of the field schema.
        /// </summary>
        [Output("title")]
        public Output<string> Title { get; private set; } = null!;


        /// <summary>
        /// Create a CustomFieldSchema resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomFieldSchema(string name, CustomFieldSchemaArgs args, CustomResourceOptions? options = null)
            : base("pagerduty:index/customFieldSchema:CustomFieldSchema", name, args ?? new CustomFieldSchemaArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomFieldSchema(string name, Input<string> id, CustomFieldSchemaState? state = null, CustomResourceOptions? options = null)
            : base("pagerduty:index/customFieldSchema:CustomFieldSchema", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomFieldSchema resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomFieldSchema Get(string name, Input<string> id, CustomFieldSchemaState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomFieldSchema(name, id, state, options);
        }
    }

    public sealed class CustomFieldSchemaArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the field schema.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The title of the field schema.
        /// </summary>
        [Input("title", required: true)]
        public Input<string> Title { get; set; } = null!;

        public CustomFieldSchemaArgs()
        {
        }
        public static new CustomFieldSchemaArgs Empty => new CustomFieldSchemaArgs();
    }

    public sealed class CustomFieldSchemaState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the field schema.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The title of the field schema.
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        public CustomFieldSchemaState()
        {
        }
        public static new CustomFieldSchemaState Empty => new CustomFieldSchemaState();
    }
}
