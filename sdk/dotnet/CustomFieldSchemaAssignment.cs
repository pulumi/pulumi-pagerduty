// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty
{
    /// <summary>
    /// A [Custom Field Schema Assignment](https://support.pagerduty.com/docs/custom-fields#associate-schemas-with-services) is a relationship between a Custom Field Schema and a Service.
    /// 
    /// &gt; The Custom Fields feature is currently available in Early Access.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Pagerduty = Pulumi.Pagerduty;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var csImpact = new Pagerduty.CustomField("csImpact", new()
    ///     {
    ///         Datatype = "string",
    ///     });
    /// 
    ///     var mySchema = new Pagerduty.CustomFieldSchema("mySchema", new()
    ///     {
    ///         Title = "My Schema",
    ///         Description = "Fields used on incidents",
    ///     });
    /// 
    ///     var firstService = Pagerduty.GetService.Invoke(new()
    ///     {
    ///         Name = "My First Service",
    ///     });
    /// 
    ///     var assignment = new Pagerduty.CustomFieldSchemaAssignment("assignment", new()
    ///     {
    ///         Schema = mySchema.Id,
    ///         Service = firstService.Apply(getServiceResult =&gt; getServiceResult.Id),
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [PagerdutyResourceType("pagerduty:index/customFieldSchemaAssignment:CustomFieldSchemaAssignment")]
    public partial class CustomFieldSchemaAssignment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The id of the field schema.
        /// </summary>
        [Output("schema")]
        public Output<string> Schema { get; private set; } = null!;

        /// <summary>
        /// The id of the service.
        /// </summary>
        [Output("service")]
        public Output<string> Service { get; private set; } = null!;


        /// <summary>
        /// Create a CustomFieldSchemaAssignment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomFieldSchemaAssignment(string name, CustomFieldSchemaAssignmentArgs args, CustomResourceOptions? options = null)
            : base("pagerduty:index/customFieldSchemaAssignment:CustomFieldSchemaAssignment", name, args ?? new CustomFieldSchemaAssignmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomFieldSchemaAssignment(string name, Input<string> id, CustomFieldSchemaAssignmentState? state = null, CustomResourceOptions? options = null)
            : base("pagerduty:index/customFieldSchemaAssignment:CustomFieldSchemaAssignment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomFieldSchemaAssignment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomFieldSchemaAssignment Get(string name, Input<string> id, CustomFieldSchemaAssignmentState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomFieldSchemaAssignment(name, id, state, options);
        }
    }

    public sealed class CustomFieldSchemaAssignmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The id of the field schema.
        /// </summary>
        [Input("schema", required: true)]
        public Input<string> Schema { get; set; } = null!;

        /// <summary>
        /// The id of the service.
        /// </summary>
        [Input("service", required: true)]
        public Input<string> Service { get; set; } = null!;

        public CustomFieldSchemaAssignmentArgs()
        {
        }
        public static new CustomFieldSchemaAssignmentArgs Empty => new CustomFieldSchemaAssignmentArgs();
    }

    public sealed class CustomFieldSchemaAssignmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The id of the field schema.
        /// </summary>
        [Input("schema")]
        public Input<string>? Schema { get; set; }

        /// <summary>
        /// The id of the service.
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        public CustomFieldSchemaAssignmentState()
        {
        }
        public static new CustomFieldSchemaAssignmentState Empty => new CustomFieldSchemaAssignmentState();
    }
}
