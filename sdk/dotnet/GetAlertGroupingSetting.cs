// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty
{
    public static class GetAlertGroupingSetting
    {
        /// <summary>
        /// Use this data source to get information about a specific [alert grouping setting](https://developer.pagerduty.com/api-reference/9b5a6c8d7379b-get-an-alert-grouping-setting).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Pagerduty = Pulumi.Pagerduty;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Pagerduty.GetAlertGroupingSetting.Invoke(new()
        ///     {
        ///         Name = "My example setting",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAlertGroupingSettingResult> InvokeAsync(GetAlertGroupingSettingArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAlertGroupingSettingResult>("pagerduty:index/getAlertGroupingSetting:getAlertGroupingSetting", args ?? new GetAlertGroupingSettingArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information about a specific [alert grouping setting](https://developer.pagerduty.com/api-reference/9b5a6c8d7379b-get-an-alert-grouping-setting).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Pagerduty = Pulumi.Pagerduty;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Pagerduty.GetAlertGroupingSetting.Invoke(new()
        ///     {
        ///         Name = "My example setting",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAlertGroupingSettingResult> Invoke(GetAlertGroupingSettingInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAlertGroupingSettingResult>("pagerduty:index/getAlertGroupingSetting:getAlertGroupingSetting", args ?? new GetAlertGroupingSettingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAlertGroupingSettingArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The values for the configuration setup for this setting.
        /// </summary>
        [Input("config")]
        public Inputs.GetAlertGroupingSettingConfigArgs? Config { get; set; }

        /// <summary>
        /// The name to use to find an alert grouping setting in the PagerDuty API.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetAlertGroupingSettingArgs()
        {
        }
        public static new GetAlertGroupingSettingArgs Empty => new GetAlertGroupingSettingArgs();
    }

    public sealed class GetAlertGroupingSettingInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The values for the configuration setup for this setting.
        /// </summary>
        [Input("config")]
        public Input<Inputs.GetAlertGroupingSettingConfigInputArgs>? Config { get; set; }

        /// <summary>
        /// The name to use to find an alert grouping setting in the PagerDuty API.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetAlertGroupingSettingInvokeArgs()
        {
        }
        public static new GetAlertGroupingSettingInvokeArgs Empty => new GetAlertGroupingSettingInvokeArgs();
    }


    [OutputType]
    public sealed class GetAlertGroupingSettingResult
    {
        /// <summary>
        /// The values for the configuration setup for this setting.
        /// </summary>
        public readonly Outputs.GetAlertGroupingSettingConfigResult? Config;
        /// <summary>
        /// A description of this alert grouping setting.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ID of the found alert grouping setting.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The short name of the found alert grouping setting.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A list of string containing the IDs of services associated with this setting.
        /// </summary>
        public readonly ImmutableArray<string> Services;
        /// <summary>
        /// The type of object. The value returned will be one of `content_based`, `content_based_intelligent`, `intelligent` or `time`.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAlertGroupingSettingResult(
            Outputs.GetAlertGroupingSettingConfigResult? config,

            string description,

            string id,

            string name,

            ImmutableArray<string> services,

            string type)
        {
            Config = config;
            Description = description;
            Id = id;
            Name = name;
            Services = services;
            Type = type;
        }
    }
}
