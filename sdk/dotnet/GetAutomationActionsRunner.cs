// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty
{
    public static class GetAutomationActionsRunner
    {
        /// <summary>
        /// Use this data source to get information about a specific [automation actions runner](https://developer.pagerduty.com/api-reference/aace61f84cbd0-get-an-automation-action-runner).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Pagerduty = Pulumi.Pagerduty;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Pagerduty.GetAutomationActionsRunner.Invoke(new()
        ///     {
        ///         Id = "01DBJLIGED17S1DQKQC2AV8XYZ",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAutomationActionsRunnerResult> InvokeAsync(GetAutomationActionsRunnerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAutomationActionsRunnerResult>("pagerduty:index/getAutomationActionsRunner:getAutomationActionsRunner", args ?? new GetAutomationActionsRunnerArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information about a specific [automation actions runner](https://developer.pagerduty.com/api-reference/aace61f84cbd0-get-an-automation-action-runner).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Pagerduty = Pulumi.Pagerduty;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Pagerduty.GetAutomationActionsRunner.Invoke(new()
        ///     {
        ///         Id = "01DBJLIGED17S1DQKQC2AV8XYZ",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAutomationActionsRunnerResult> Invoke(GetAutomationActionsRunnerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAutomationActionsRunnerResult>("pagerduty:index/getAutomationActionsRunner:getAutomationActionsRunner", args ?? new GetAutomationActionsRunnerInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information about a specific [automation actions runner](https://developer.pagerduty.com/api-reference/aace61f84cbd0-get-an-automation-action-runner).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Pagerduty = Pulumi.Pagerduty;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Pagerduty.GetAutomationActionsRunner.Invoke(new()
        ///     {
        ///         Id = "01DBJLIGED17S1DQKQC2AV8XYZ",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAutomationActionsRunnerResult> Invoke(GetAutomationActionsRunnerInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAutomationActionsRunnerResult>("pagerduty:index/getAutomationActionsRunner:getAutomationActionsRunner", args ?? new GetAutomationActionsRunnerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAutomationActionsRunnerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (Optional) The description of the runner.
        /// </summary>
        [Input("description")]
        public string? Description { get; set; }

        /// <summary>
        /// The id of the automation actions runner in the PagerDuty API.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// (Optional) The last time runner has been seen. Represented as an ISO 8601 timestamp.
        /// </summary>
        [Input("lastSeen")]
        public string? LastSeen { get; set; }

        /// <summary>
        /// (Optional) The base URI of the Runbook server to connect to. Applicable to `Runbook` type runners only.
        /// </summary>
        [Input("runbookBaseUri")]
        public string? RunbookBaseUri { get; set; }

        public GetAutomationActionsRunnerArgs()
        {
        }
        public static new GetAutomationActionsRunnerArgs Empty => new GetAutomationActionsRunnerArgs();
    }

    public sealed class GetAutomationActionsRunnerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (Optional) The description of the runner.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The id of the automation actions runner in the PagerDuty API.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// (Optional) The last time runner has been seen. Represented as an ISO 8601 timestamp.
        /// </summary>
        [Input("lastSeen")]
        public Input<string>? LastSeen { get; set; }

        /// <summary>
        /// (Optional) The base URI of the Runbook server to connect to. Applicable to `Runbook` type runners only.
        /// </summary>
        [Input("runbookBaseUri")]
        public Input<string>? RunbookBaseUri { get; set; }

        public GetAutomationActionsRunnerInvokeArgs()
        {
        }
        public static new GetAutomationActionsRunnerInvokeArgs Empty => new GetAutomationActionsRunnerInvokeArgs();
    }


    [OutputType]
    public sealed class GetAutomationActionsRunnerResult
    {
        /// <summary>
        /// The time runner was created. Represented as an ISO 8601 timestamp.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// (Optional) The description of the runner.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ID of the found runner.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Optional) The last time runner has been seen. Represented as an ISO 8601 timestamp.
        /// </summary>
        public readonly string LastSeen;
        /// <summary>
        /// The name of the found runner.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// (Optional) The base URI of the Runbook server to connect to. Applicable to `Runbook` type runners only.
        /// </summary>
        public readonly string RunbookBaseUri;
        /// <summary>
        /// The type of runner. Allowed values are `Sidecar` and `Runbook`.
        /// </summary>
        public readonly string RunnerType;
        /// <summary>
        /// The type of object. The value returned will be `Runner`.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAutomationActionsRunnerResult(
            string creationTime,

            string description,

            string id,

            string lastSeen,

            string name,

            string runbookBaseUri,

            string runnerType,

            string type)
        {
            CreationTime = creationTime;
            Description = description;
            Id = id;
            LastSeen = lastSeen;
            Name = name;
            RunbookBaseUri = runbookBaseUri;
            RunnerType = runnerType;
            Type = type;
        }
    }
}
