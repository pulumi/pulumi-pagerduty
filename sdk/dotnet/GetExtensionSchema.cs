// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty
{
    public static class GetExtensionSchema
    {
        /// <summary>
        /// Use this data source to get information about a specific [extension](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODEzMA-list-extension-schemas) vendor that you can use for a service (e.g: Slack, Generic Webhook, ServiceNow).
        /// </summary>
        public static Task<GetExtensionSchemaResult> InvokeAsync(GetExtensionSchemaArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetExtensionSchemaResult>("pagerduty:index/getExtensionSchema:getExtensionSchema", args ?? new GetExtensionSchemaArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information about a specific [extension](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODEzMA-list-extension-schemas) vendor that you can use for a service (e.g: Slack, Generic Webhook, ServiceNow).
        /// </summary>
        public static Output<GetExtensionSchemaResult> Invoke(GetExtensionSchemaInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetExtensionSchemaResult>("pagerduty:index/getExtensionSchema:getExtensionSchema", args ?? new GetExtensionSchemaInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExtensionSchemaArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The extension name to use to find an extension vendor in the PagerDuty API.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetExtensionSchemaArgs()
        {
        }
        public static new GetExtensionSchemaArgs Empty => new GetExtensionSchemaArgs();
    }

    public sealed class GetExtensionSchemaInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The extension name to use to find an extension vendor in the PagerDuty API.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetExtensionSchemaInvokeArgs()
        {
        }
        public static new GetExtensionSchemaInvokeArgs Empty => new GetExtensionSchemaInvokeArgs();
    }


    [OutputType]
    public sealed class GetExtensionSchemaResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The short name of the found extension vendor.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The generic service type for this extension vendor.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetExtensionSchemaResult(
            string id,

            string name,

            string type)
        {
            Id = id;
            Name = name;
            Type = type;
        }
    }
}
