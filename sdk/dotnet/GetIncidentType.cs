// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty
{
    public static class GetIncidentType
    {
        public static Task<GetIncidentTypeResult> InvokeAsync(GetIncidentTypeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIncidentTypeResult>("pagerduty:index/getIncidentType:getIncidentType", args ?? new GetIncidentTypeArgs(), options.WithDefaults());

        public static Output<GetIncidentTypeResult> Invoke(GetIncidentTypeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIncidentTypeResult>("pagerduty:index/getIncidentType:getIncidentType", args ?? new GetIncidentTypeInvokeArgs(), options.WithDefaults());

        public static Output<GetIncidentTypeResult> Invoke(GetIncidentTypeInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetIncidentTypeResult>("pagerduty:index/getIncidentType:getIncidentType", args ?? new GetIncidentTypeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIncidentTypeArgs : global::Pulumi.InvokeArgs
    {
        [Input("displayName", required: true)]
        public string DisplayName { get; set; } = null!;

        public GetIncidentTypeArgs()
        {
        }
        public static new GetIncidentTypeArgs Empty => new GetIncidentTypeArgs();
    }

    public sealed class GetIncidentTypeInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        public GetIncidentTypeInvokeArgs()
        {
        }
        public static new GetIncidentTypeInvokeArgs Empty => new GetIncidentTypeInvokeArgs();
    }


    [OutputType]
    public sealed class GetIncidentTypeResult
    {
        public readonly string Description;
        public readonly string DisplayName;
        public readonly bool Enabled;
        public readonly string Id;
        public readonly string Name;
        public readonly string ParentType;
        public readonly string Type;

        [OutputConstructor]
        private GetIncidentTypeResult(
            string description,

            string displayName,

            bool enabled,

            string id,

            string name,

            string parentType,

            string type)
        {
            Description = description;
            DisplayName = displayName;
            Enabled = enabled;
            Id = id;
            Name = name;
            ParentType = parentType;
            Type = type;
        }
    }
}
