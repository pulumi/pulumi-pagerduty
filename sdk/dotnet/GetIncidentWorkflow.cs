// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty
{
    public static class GetIncidentWorkflow
    {
        /// <summary>
        /// Use this data source to get information about a specific [Incident Workflow](https://support.pagerduty.com/docs/incident-workflows) so that you can create a trigger for it.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Pagerduty = Pulumi.Pagerduty;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myWorkflow = Pagerduty.GetIncidentWorkflow.Invoke(new()
        ///     {
        ///         Name = "Some Workflow Name",
        ///     });
        /// 
        ///     var firstService = Pagerduty.GetService.Invoke(new()
        ///     {
        ///         Name = "My First Service",
        ///     });
        /// 
        ///     var automaticTrigger = new Pagerduty.IncidentWorkflowTrigger("automatic_trigger", new()
        ///     {
        ///         Type = "conditional",
        ///         Workflow = myWorkflow.Apply(getIncidentWorkflowResult =&gt; getIncidentWorkflowResult.Id),
        ///         Services = new[]
        ///         {
        ///             firstService.Apply(getServiceResult =&gt; getServiceResult.Id),
        ///         },
        ///         Condition = "incident.priority matches 'P1'",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetIncidentWorkflowResult> InvokeAsync(GetIncidentWorkflowArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIncidentWorkflowResult>("pagerduty:index/getIncidentWorkflow:getIncidentWorkflow", args ?? new GetIncidentWorkflowArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information about a specific [Incident Workflow](https://support.pagerduty.com/docs/incident-workflows) so that you can create a trigger for it.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Pagerduty = Pulumi.Pagerduty;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myWorkflow = Pagerduty.GetIncidentWorkflow.Invoke(new()
        ///     {
        ///         Name = "Some Workflow Name",
        ///     });
        /// 
        ///     var firstService = Pagerduty.GetService.Invoke(new()
        ///     {
        ///         Name = "My First Service",
        ///     });
        /// 
        ///     var automaticTrigger = new Pagerduty.IncidentWorkflowTrigger("automatic_trigger", new()
        ///     {
        ///         Type = "conditional",
        ///         Workflow = myWorkflow.Apply(getIncidentWorkflowResult =&gt; getIncidentWorkflowResult.Id),
        ///         Services = new[]
        ///         {
        ///             firstService.Apply(getServiceResult =&gt; getServiceResult.Id),
        ///         },
        ///         Condition = "incident.priority matches 'P1'",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetIncidentWorkflowResult> Invoke(GetIncidentWorkflowInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIncidentWorkflowResult>("pagerduty:index/getIncidentWorkflow:getIncidentWorkflow", args ?? new GetIncidentWorkflowInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIncidentWorkflowArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the workflow.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetIncidentWorkflowArgs()
        {
        }
        public static new GetIncidentWorkflowArgs Empty => new GetIncidentWorkflowArgs();
    }

    public sealed class GetIncidentWorkflowInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the workflow.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetIncidentWorkflowInvokeArgs()
        {
        }
        public static new GetIncidentWorkflowInvokeArgs Empty => new GetIncidentWorkflowInvokeArgs();
    }


    [OutputType]
    public sealed class GetIncidentWorkflowResult
    {
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;

        [OutputConstructor]
        private GetIncidentWorkflowResult(
            string description,

            string id,

            string name)
        {
            Description = description;
            Id = id;
            Name = name;
        }
    }
}
