// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty
{
    public static class GetPriority
    {
        /// <summary>
        /// Use this data source to get information about a specific [priority](https://developer.pagerduty.com/api-reference/reference/REST/openapiv3.json/paths/~1priorities/get) that you can use for other PagerDuty resources.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Pagerduty = Pulumi.Pagerduty;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var p1 = Output.Create(Pagerduty.GetPriority.InvokeAsync(new Pagerduty.GetPriorityArgs
        ///         {
        ///             Name = "P1",
        ///         }));
        ///         var fooRuleset = new Pagerduty.Ruleset("fooRuleset", new Pagerduty.RulesetArgs
        ///         {
        ///         });
        ///         var fooRulesetRule = new Pagerduty.RulesetRule("fooRulesetRule", new Pagerduty.RulesetRuleArgs
        ///         {
        ///             Ruleset = fooRuleset.Id,
        ///             Position = 0,
        ///             Disabled = false,
        ///             Conditions = new Pagerduty.Inputs.RulesetRuleConditionsArgs
        ///             {
        ///                 Operator = "and",
        ///                 Subconditions = 
        ///                 {
        ///                     new Pagerduty.Inputs.RulesetRuleConditionsSubconditionArgs
        ///                     {
        ///                         Operator = "contains",
        ///                         Parameters = 
        ///                         {
        ///                             new Pagerduty.Inputs.RulesetRuleConditionsSubconditionParameterArgs
        ///                             {
        ///                                 Value = "disk space",
        ///                                 Path = "payload.summary",
        ///                             },
        ///                         },
        ///                     },
        ///                     new Pagerduty.Inputs.RulesetRuleConditionsSubconditionArgs
        ///                     {
        ///                         Operator = "contains",
        ///                         Parameters = 
        ///                         {
        ///                             new Pagerduty.Inputs.RulesetRuleConditionsSubconditionParameterArgs
        ///                             {
        ///                                 Value = "db",
        ///                                 Path = "payload.source",
        ///                             },
        ///                         },
        ///                     },
        ///                 },
        ///             },
        ///             Actions = new Pagerduty.Inputs.RulesetRuleActionsArgs
        ///             {
        ///                 Routes = 
        ///                 {
        ///                     new Pagerduty.Inputs.RulesetRuleActionsRouteArgs
        ///                     {
        ///                         Value = "P5DTL0K",
        ///                     },
        ///                 },
        ///                 Priorities = 
        ///                 {
        ///                     new Pagerduty.Inputs.RulesetRuleActionsPriorityArgs
        ///                     {
        ///                         Value = pagerduty_priority.P1.Id,
        ///                     },
        ///                 },
        ///             },
        ///         });
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetPriorityResult> InvokeAsync(GetPriorityArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPriorityResult>("pagerduty:index/getPriority:getPriority", args ?? new GetPriorityArgs(), options.WithVersion());
    }


    public sealed class GetPriorityArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the priority to find in the PagerDuty API.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetPriorityArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetPriorityResult
    {
        /// <summary>
        /// A description of the found priority.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the found priority.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetPriorityResult(
            string description,

            string id,

            string name)
        {
            Description = description;
            Id = id;
            Name = name;
        }
    }
}
