// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty
{
    public static class GetRuleset
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Pagerduty = Pulumi.Pagerduty;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Pagerduty.GetRuleset.Invoke(new()
        ///     {
        ///         Name = "My Ruleset",
        ///     });
        /// 
        ///     var foo = new Pagerduty.RulesetRule("foo", new()
        ///     {
        ///         Ruleset = example.Apply(getRulesetResult =&gt; getRulesetResult.Id),
        ///         Position = 0,
        ///         Disabled = false,
        ///         Conditions = new Pagerduty.Inputs.RulesetRuleConditionsArgs
        ///         {
        ///             Operator = "and",
        ///             Subconditions = new[]
        ///             {
        ///                 new Pagerduty.Inputs.RulesetRuleConditionsSubconditionArgs
        ///                 {
        ///                     Operator = "contains",
        ///                     Parameters = new[]
        ///                     {
        ///                         new Pagerduty.Inputs.RulesetRuleConditionsSubconditionParameterArgs
        ///                         {
        ///                             Value = "disk space",
        ///                             Path = "payload.summary",
        ///                         },
        ///                     },
        ///                 },
        ///                 new Pagerduty.Inputs.RulesetRuleConditionsSubconditionArgs
        ///                 {
        ///                     Operator = "contains",
        ///                     Parameters = new[]
        ///                     {
        ///                         new Pagerduty.Inputs.RulesetRuleConditionsSubconditionParameterArgs
        ///                         {
        ///                             Value = "db",
        ///                             Path = "payload.source",
        ///                         },
        ///                     },
        ///                 },
        ///             },
        ///         },
        ///         Actions = new Pagerduty.Inputs.RulesetRuleActionsArgs
        ///         {
        ///             Routes = new[]
        ///             {
        ///                 new Pagerduty.Inputs.RulesetRuleActionsRouteArgs
        ///                 {
        ///                     Value = "P5DTL0K",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% example %}}
        /// ### Default Global Ruleset
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Pagerduty = Pulumi.Pagerduty;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var defaultGlobal = Pagerduty.GetRuleset.Invoke(new()
        ///     {
        ///         Name = "Default Global",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetRulesetResult> InvokeAsync(GetRulesetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRulesetResult>("pagerduty:index/getRuleset:getRuleset", args ?? new GetRulesetArgs(), options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Pagerduty = Pulumi.Pagerduty;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Pagerduty.GetRuleset.Invoke(new()
        ///     {
        ///         Name = "My Ruleset",
        ///     });
        /// 
        ///     var foo = new Pagerduty.RulesetRule("foo", new()
        ///     {
        ///         Ruleset = example.Apply(getRulesetResult =&gt; getRulesetResult.Id),
        ///         Position = 0,
        ///         Disabled = false,
        ///         Conditions = new Pagerduty.Inputs.RulesetRuleConditionsArgs
        ///         {
        ///             Operator = "and",
        ///             Subconditions = new[]
        ///             {
        ///                 new Pagerduty.Inputs.RulesetRuleConditionsSubconditionArgs
        ///                 {
        ///                     Operator = "contains",
        ///                     Parameters = new[]
        ///                     {
        ///                         new Pagerduty.Inputs.RulesetRuleConditionsSubconditionParameterArgs
        ///                         {
        ///                             Value = "disk space",
        ///                             Path = "payload.summary",
        ///                         },
        ///                     },
        ///                 },
        ///                 new Pagerduty.Inputs.RulesetRuleConditionsSubconditionArgs
        ///                 {
        ///                     Operator = "contains",
        ///                     Parameters = new[]
        ///                     {
        ///                         new Pagerduty.Inputs.RulesetRuleConditionsSubconditionParameterArgs
        ///                         {
        ///                             Value = "db",
        ///                             Path = "payload.source",
        ///                         },
        ///                     },
        ///                 },
        ///             },
        ///         },
        ///         Actions = new Pagerduty.Inputs.RulesetRuleActionsArgs
        ///         {
        ///             Routes = new[]
        ///             {
        ///                 new Pagerduty.Inputs.RulesetRuleActionsRouteArgs
        ///                 {
        ///                     Value = "P5DTL0K",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% example %}}
        /// ### Default Global Ruleset
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Pagerduty = Pulumi.Pagerduty;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var defaultGlobal = Pagerduty.GetRuleset.Invoke(new()
        ///     {
        ///         Name = "Default Global",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetRulesetResult> Invoke(GetRulesetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRulesetResult>("pagerduty:index/getRuleset:getRuleset", args ?? new GetRulesetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRulesetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the ruleset to find in the PagerDuty API.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetRulesetArgs()
        {
        }
        public static new GetRulesetArgs Empty => new GetRulesetArgs();
    }

    public sealed class GetRulesetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the ruleset to find in the PagerDuty API.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetRulesetInvokeArgs()
        {
        }
        public static new GetRulesetInvokeArgs Empty => new GetRulesetInvokeArgs();
    }


    [OutputType]
    public sealed class GetRulesetResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the found ruleset.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Routing keys routed to this ruleset.
        /// </summary>
        public readonly ImmutableArray<string> RoutingKeys;

        [OutputConstructor]
        private GetRulesetResult(
            string id,

            string name,

            ImmutableArray<string> routingKeys)
        {
            Id = id;
            Name = name;
            RoutingKeys = routingKeys;
        }
    }
}
