// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty
{
    public static class GetSchedule
    {
        /// <summary>
        /// Use this data source to get information about a specific [schedule](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODE4MQ-list-schedules) that you can use for other PagerDuty resources.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Pagerduty = Pulumi.Pagerduty;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Pagerduty.GetSchedule.Invoke(new()
        ///     {
        ///         Name = "Daily Engineering Rotation",
        ///     });
        /// 
        ///     var foo = new Pagerduty.EscalationPolicy("foo", new()
        ///     {
        ///         Name = "Engineering Escalation Policy",
        ///         NumLoops = 2,
        ///         Rules = new[]
        ///         {
        ///             new Pagerduty.Inputs.EscalationPolicyRuleArgs
        ///             {
        ///                 EscalationDelayInMinutes = 10,
        ///                 Targets = new[]
        ///                 {
        ///                     new Pagerduty.Inputs.EscalationPolicyRuleTargetArgs
        ///                     {
        ///                         Type = "schedule",
        ///                         Id = test.Apply(getScheduleResult =&gt; getScheduleResult.Id),
        ///                     },
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetScheduleResult> InvokeAsync(GetScheduleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetScheduleResult>("pagerduty:index/getSchedule:getSchedule", args ?? new GetScheduleArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information about a specific [schedule](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODE4MQ-list-schedules) that you can use for other PagerDuty resources.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Pagerduty = Pulumi.Pagerduty;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Pagerduty.GetSchedule.Invoke(new()
        ///     {
        ///         Name = "Daily Engineering Rotation",
        ///     });
        /// 
        ///     var foo = new Pagerduty.EscalationPolicy("foo", new()
        ///     {
        ///         Name = "Engineering Escalation Policy",
        ///         NumLoops = 2,
        ///         Rules = new[]
        ///         {
        ///             new Pagerduty.Inputs.EscalationPolicyRuleArgs
        ///             {
        ///                 EscalationDelayInMinutes = 10,
        ///                 Targets = new[]
        ///                 {
        ///                     new Pagerduty.Inputs.EscalationPolicyRuleTargetArgs
        ///                     {
        ///                         Type = "schedule",
        ///                         Id = test.Apply(getScheduleResult =&gt; getScheduleResult.Id),
        ///                     },
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetScheduleResult> Invoke(GetScheduleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetScheduleResult>("pagerduty:index/getSchedule:getSchedule", args ?? new GetScheduleInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information about a specific [schedule](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODE4MQ-list-schedules) that you can use for other PagerDuty resources.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Pagerduty = Pulumi.Pagerduty;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Pagerduty.GetSchedule.Invoke(new()
        ///     {
        ///         Name = "Daily Engineering Rotation",
        ///     });
        /// 
        ///     var foo = new Pagerduty.EscalationPolicy("foo", new()
        ///     {
        ///         Name = "Engineering Escalation Policy",
        ///         NumLoops = 2,
        ///         Rules = new[]
        ///         {
        ///             new Pagerduty.Inputs.EscalationPolicyRuleArgs
        ///             {
        ///                 EscalationDelayInMinutes = 10,
        ///                 Targets = new[]
        ///                 {
        ///                     new Pagerduty.Inputs.EscalationPolicyRuleTargetArgs
        ///                     {
        ///                         Type = "schedule",
        ///                         Id = test.Apply(getScheduleResult =&gt; getScheduleResult.Id),
        ///                     },
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetScheduleResult> Invoke(GetScheduleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetScheduleResult>("pagerduty:index/getSchedule:getSchedule", args ?? new GetScheduleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetScheduleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name to use to find a schedule in the PagerDuty API.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetScheduleArgs()
        {
        }
        public static new GetScheduleArgs Empty => new GetScheduleArgs();
    }

    public sealed class GetScheduleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name to use to find a schedule in the PagerDuty API.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetScheduleInvokeArgs()
        {
        }
        public static new GetScheduleInvokeArgs Empty => new GetScheduleInvokeArgs();
    }


    [OutputType]
    public sealed class GetScheduleResult
    {
        /// <summary>
        /// The ID of the found schedule.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The short name of the found schedule.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetScheduleResult(
            string id,

            string name)
        {
            Id = id;
            Name = name;
        }
    }
}
