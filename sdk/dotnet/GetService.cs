// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty
{
    public static class GetService
    {
        /// <summary>
        /// Use this data source to get information about a specific [service](https://api-reference.pagerduty.com/#!/Services/get_services).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Pagerduty = Pulumi.Pagerduty;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleService = Pagerduty.GetService.Invoke(new()
        ///     {
        ///         Name = "My Service",
        ///     });
        /// 
        ///     var datadog = Pagerduty.GetVendor.Invoke(new()
        ///     {
        ///         Name = "Datadog",
        ///     });
        /// 
        ///     var exampleServiceIntegration = new Pagerduty.ServiceIntegration("exampleServiceIntegration", new()
        ///     {
        ///         Vendor = datadog.Apply(getVendorResult =&gt; getVendorResult.Id),
        ///         Service = exampleService.Apply(getServiceResult =&gt; getServiceResult.Id),
        ///         Type = "generic_events_api_inbound_integration",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetServiceResult> InvokeAsync(GetServiceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServiceResult>("pagerduty:index/getService:getService", args ?? new GetServiceArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information about a specific [service](https://api-reference.pagerduty.com/#!/Services/get_services).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Pagerduty = Pulumi.Pagerduty;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleService = Pagerduty.GetService.Invoke(new()
        ///     {
        ///         Name = "My Service",
        ///     });
        /// 
        ///     var datadog = Pagerduty.GetVendor.Invoke(new()
        ///     {
        ///         Name = "Datadog",
        ///     });
        /// 
        ///     var exampleServiceIntegration = new Pagerduty.ServiceIntegration("exampleServiceIntegration", new()
        ///     {
        ///         Vendor = datadog.Apply(getVendorResult =&gt; getVendorResult.Id),
        ///         Service = exampleService.Apply(getServiceResult =&gt; getServiceResult.Id),
        ///         Type = "generic_events_api_inbound_integration",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetServiceResult> Invoke(GetServiceInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetServiceResult>("pagerduty:index/getService:getService", args ?? new GetServiceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The service name to use to find a service in the PagerDuty API.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetServiceArgs()
        {
        }
        public static new GetServiceArgs Empty => new GetServiceArgs();
    }

    public sealed class GetServiceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The service name to use to find a service in the PagerDuty API.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetServiceInvokeArgs()
        {
        }
        public static new GetServiceInvokeArgs Empty => new GetServiceInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The short name of the found service.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The type of object. The value returned will be `service`. Can be used for passing to a service dependency.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetServiceResult(
            string id,

            string name,

            string type)
        {
            Id = id;
            Name = name;
            Type = type;
        }
    }
}
