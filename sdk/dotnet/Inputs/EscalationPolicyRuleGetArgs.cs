// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty.Inputs
{

    public sealed class EscalationPolicyRuleGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of minutes before an unacknowledged incident escalates away from this rule.
        /// </summary>
        [Input("escalationDelayInMinutes", required: true)]
        public Input<int> EscalationDelayInMinutes { get; set; } = null!;

        /// <summary>
        /// The strategy used to assign the escalation rule to an incident. Documented below.
        /// </summary>
        [Input("escalationRuleAssignmentStrategy")]
        public Input<Inputs.EscalationPolicyRuleEscalationRuleAssignmentStrategyGetArgs>? EscalationRuleAssignmentStrategy { get; set; }

        /// <summary>
        /// The ID of the escalation policy.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("targets", required: true)]
        private InputList<Inputs.EscalationPolicyRuleTargetGetArgs>? _targets;
        public InputList<Inputs.EscalationPolicyRuleTargetGetArgs> Targets
        {
            get => _targets ?? (_targets = new InputList<Inputs.EscalationPolicyRuleTargetGetArgs>());
            set => _targets = value;
        }

        public EscalationPolicyRuleGetArgs()
        {
        }
        public static new EscalationPolicyRuleGetArgs Empty => new EscalationPolicyRuleGetArgs();
    }
}
