// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty.Inputs
{

    public sealed class ServiceIntegrationEmailParserMatchPredicatePredicateGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Predicate value or valid regex.
        /// </summary>
        [Input("matcher")]
        public Input<string>? Matcher { get; set; }

        /// <summary>
        /// Can be `subject`, `body` or `from_addresses`.
        /// </summary>
        [Input("part")]
        public Input<string>? Part { get; set; }

        [Input("predicates")]
        private InputList<Inputs.ServiceIntegrationEmailParserMatchPredicatePredicatePredicateGetArgs>? _predicates;
        public InputList<Inputs.ServiceIntegrationEmailParserMatchPredicatePredicatePredicateGetArgs> Predicates
        {
            get => _predicates ?? (_predicates = new InputList<Inputs.ServiceIntegrationEmailParserMatchPredicatePredicatePredicateGetArgs>());
            set => _predicates = value;
        }

        /// <summary>
        /// Can be `contains`, `exactly`, `regex` or `not`. If type is `not` predicate should contain child predicate with all parameters.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public ServiceIntegrationEmailParserMatchPredicatePredicateGetArgs()
        {
        }
        public static new ServiceIntegrationEmailParserMatchPredicatePredicateGetArgs Empty => new ServiceIntegrationEmailParserMatchPredicatePredicateGetArgs();
    }
}
