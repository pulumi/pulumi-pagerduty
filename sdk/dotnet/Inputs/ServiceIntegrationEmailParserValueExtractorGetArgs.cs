// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty.Inputs
{

    public sealed class ServiceIntegrationEmailParserValueExtractorGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("endsBefore")]
        public Input<string>? EndsBefore { get; set; }

        /// <summary>
        /// Can be `Subject` or `Body`.
        /// </summary>
        [Input("part", required: true)]
        public Input<string> Part { get; set; } = null!;

        /// <summary>
        /// If `Type` has value `Regex` this value should contain valid regex.
        /// 
        /// **Note:** You can use the `pagerduty.getVendor` data source to locate the appropriate vendor ID.
        /// </summary>
        [Input("regex")]
        public Input<string>? Regex { get; set; }

        [Input("startsAfter")]
        public Input<string>? StartsAfter { get; set; }

        /// <summary>
        /// Can be `Between`, `Entire` or `Regex`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// First value extractor should have name `IncidentKey` other value extractors should contain custom names.
        /// </summary>
        [Input("valueName", required: true)]
        public Input<string> ValueName { get; set; } = null!;

        public ServiceIntegrationEmailParserValueExtractorGetArgs()
        {
        }
        public static new ServiceIntegrationEmailParserValueExtractorGetArgs Empty => new ServiceIntegrationEmailParserValueExtractorGetArgs();
    }
}
