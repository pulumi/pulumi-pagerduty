// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty
{
    /// <summary>
    /// An Jira Cloud's account mapping [rule](https://developer.pagerduty.com/api-reference/85dc30ba966a6-create-a-rule)
    /// configures the bidirectional synchronization between Jira issues and PagerDuty
    /// incidents.
    /// 
    /// ## Import
    /// 
    /// Jira Cloud account mapping rules can be imported using the `account_mapping_id` and `rule_id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import pagerduty:index/jiraCloudAccountMappingRule:JiraCloudAccountMappingRule main PLBP09X:PLB09Z
    /// ```
    /// </summary>
    [PagerdutyResourceType("pagerduty:index/jiraCloudAccountMappingRule:JiraCloudAccountMappingRule")]
    public partial class JiraCloudAccountMappingRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// [Updating can cause a resource replacement] The account mapping this rule belongs to.
        /// </summary>
        [Output("accountMapping")]
        public Output<string> AccountMapping { get; private set; } = null!;

        /// <summary>
        /// If auto-creation using JQL is disabled, this field provides the reason for the disablement.
        /// </summary>
        [Output("autocreateJqlDisabledReason")]
        public Output<string> AutocreateJqlDisabledReason { get; private set; } = null!;

        /// <summary>
        /// The timestamp until which the auto-creation using JQL feature is disabled.
        /// </summary>
        [Output("autocreateJqlDisabledUntil")]
        public Output<string> AutocreateJqlDisabledUntil { get; private set; } = null!;

        /// <summary>
        /// Configuration for bidirectional synchronization between Jira issues and PagerDuty incidents.
        /// </summary>
        [Output("config")]
        public Output<Outputs.JiraCloudAccountMappingRuleConfig?> Config { get; private set; } = null!;

        /// <summary>
        /// Indicates if the rule is enabled. Defaults to `true`.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// The name of the rule.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a JiraCloudAccountMappingRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public JiraCloudAccountMappingRule(string name, JiraCloudAccountMappingRuleArgs args, CustomResourceOptions? options = null)
            : base("pagerduty:index/jiraCloudAccountMappingRule:JiraCloudAccountMappingRule", name, args ?? new JiraCloudAccountMappingRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private JiraCloudAccountMappingRule(string name, Input<string> id, JiraCloudAccountMappingRuleState? state = null, CustomResourceOptions? options = null)
            : base("pagerduty:index/jiraCloudAccountMappingRule:JiraCloudAccountMappingRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing JiraCloudAccountMappingRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static JiraCloudAccountMappingRule Get(string name, Input<string> id, JiraCloudAccountMappingRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new JiraCloudAccountMappingRule(name, id, state, options);
        }
    }

    public sealed class JiraCloudAccountMappingRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// [Updating can cause a resource replacement] The account mapping this rule belongs to.
        /// </summary>
        [Input("accountMapping", required: true)]
        public Input<string> AccountMapping { get; set; } = null!;

        /// <summary>
        /// Configuration for bidirectional synchronization between Jira issues and PagerDuty incidents.
        /// </summary>
        [Input("config")]
        public Input<Inputs.JiraCloudAccountMappingRuleConfigArgs>? Config { get; set; }

        /// <summary>
        /// Indicates if the rule is enabled. Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The name of the rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public JiraCloudAccountMappingRuleArgs()
        {
        }
        public static new JiraCloudAccountMappingRuleArgs Empty => new JiraCloudAccountMappingRuleArgs();
    }

    public sealed class JiraCloudAccountMappingRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// [Updating can cause a resource replacement] The account mapping this rule belongs to.
        /// </summary>
        [Input("accountMapping")]
        public Input<string>? AccountMapping { get; set; }

        /// <summary>
        /// If auto-creation using JQL is disabled, this field provides the reason for the disablement.
        /// </summary>
        [Input("autocreateJqlDisabledReason")]
        public Input<string>? AutocreateJqlDisabledReason { get; set; }

        /// <summary>
        /// The timestamp until which the auto-creation using JQL feature is disabled.
        /// </summary>
        [Input("autocreateJqlDisabledUntil")]
        public Input<string>? AutocreateJqlDisabledUntil { get; set; }

        /// <summary>
        /// Configuration for bidirectional synchronization between Jira issues and PagerDuty incidents.
        /// </summary>
        [Input("config")]
        public Input<Inputs.JiraCloudAccountMappingRuleConfigGetArgs>? Config { get; set; }

        /// <summary>
        /// Indicates if the rule is enabled. Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The name of the rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public JiraCloudAccountMappingRuleState()
        {
        }
        public static new JiraCloudAccountMappingRuleState Empty => new JiraCloudAccountMappingRuleState();
    }
}
