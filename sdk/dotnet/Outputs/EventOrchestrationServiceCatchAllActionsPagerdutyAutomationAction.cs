// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty.Outputs
{

    [OutputType]
    public sealed class EventOrchestrationServiceCatchAllActionsPagerdutyAutomationAction
    {
        /// <summary>
        /// Id of the Process Automation action to be triggered.
        /// </summary>
        public readonly string ActionId;
        /// <summary>
        /// The Automation Action will be triggered whenever an alert reaches the specified state. Allowed values are: `["alert_triggered"]`, `["alert_suspended"]`, `["alert_suppressed"]`
        /// </summary>
        public readonly string? TriggerTypes;

        [OutputConstructor]
        private EventOrchestrationServiceCatchAllActionsPagerdutyAutomationAction(
            string actionId,

            string? triggerTypes)
        {
            ActionId = actionId;
            TriggerTypes = triggerTypes;
        }
    }
}
