// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty.Outputs
{

    [OutputType]
    public sealed class EventOrchestrationServiceSetRule
    {
        /// <summary>
        /// These are the actions that will be taken to change the resulting alert and incident. `catch_all` supports all actions described above for `rule` _except_ `route_to` action.
        /// </summary>
        public readonly Outputs.EventOrchestrationServiceSetRuleActions Actions;
        /// <summary>
        /// Each of these conditions is evaluated to check if an event matches this rule. The rule is considered a match if any of these conditions match. If none are provided, the event will `always` match against the rule.
        /// </summary>
        public readonly ImmutableArray<Outputs.EventOrchestrationServiceSetRuleCondition> Conditions;
        /// <summary>
        /// Indicates whether the rule is disabled and would therefore not be evaluated.
        /// </summary>
        public readonly bool? Disabled;
        /// <summary>
        /// The ID of this set of rules. Rules in other sets can route events into this set using the rule's `route_to` property.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// A description of this rule's purpose.
        /// </summary>
        public readonly string? Label;

        [OutputConstructor]
        private EventOrchestrationServiceSetRule(
            Outputs.EventOrchestrationServiceSetRuleActions actions,

            ImmutableArray<Outputs.EventOrchestrationServiceSetRuleCondition> conditions,

            bool? disabled,

            string? id,

            string? label)
        {
            Actions = actions;
            Conditions = conditions;
            Disabled = disabled;
            Id = id;
            Label = label;
        }
    }
}
