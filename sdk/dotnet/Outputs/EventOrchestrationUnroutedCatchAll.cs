// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty.Outputs
{

    [OutputType]
    public sealed class EventOrchestrationUnroutedCatchAll
    {
        /// <summary>
        /// These are the actions that will be taken to change the resulting alert and incident. `CatchAll` supports all actions described above for `Rule` _except_ `RouteTo` action.
        /// </summary>
        public readonly Outputs.EventOrchestrationUnroutedCatchAllActions Actions;

        [OutputConstructor]
        private EventOrchestrationUnroutedCatchAll(Outputs.EventOrchestrationUnroutedCatchAllActions actions)
        {
            Actions = actions;
        }
    }
}
