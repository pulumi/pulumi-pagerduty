// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty.Outputs
{

    [OutputType]
    public sealed class EventOrchestrationUnroutedCatchAllActions
    {
        /// <summary>
        /// sets whether the resulting alert status is trigger or resolve. Allowed values are: `trigger`, `resolve`
        /// </summary>
        public readonly string? EventAction;
        /// <summary>
        /// Replace any CEF field or Custom Details object field using custom variables.
        /// </summary>
        public readonly ImmutableArray<Outputs.EventOrchestrationUnroutedCatchAllActionsExtraction> Extractions;
        /// <summary>
        /// sets Severity of the resulting alert. Allowed values are: `info`, `error`, `warning`, `critical`
        /// </summary>
        public readonly string? Severity;
        public readonly bool? Suppress;
        /// <summary>
        /// Populate variables from event payloads and use those variables in other event actions.
        /// </summary>
        public readonly ImmutableArray<Outputs.EventOrchestrationUnroutedCatchAllActionsVariable> Variables;

        [OutputConstructor]
        private EventOrchestrationUnroutedCatchAllActions(
            string? eventAction,

            ImmutableArray<Outputs.EventOrchestrationUnroutedCatchAllActionsExtraction> extractions,

            string? severity,

            bool? suppress,

            ImmutableArray<Outputs.EventOrchestrationUnroutedCatchAllActionsVariable> variables)
        {
            EventAction = eventAction;
            Extractions = extractions;
            Severity = severity;
            Suppress = suppress;
            Variables = variables;
        }
    }
}
