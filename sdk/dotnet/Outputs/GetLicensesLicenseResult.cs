// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty.Outputs
{

    [OutputType]
    public sealed class GetLicensesLicenseResult
    {
        /// <summary>
        /// Available allocations to assign to users
        /// </summary>
        public readonly int AllocationsAvailable;
        /// <summary>
        /// The number of allocations already assigned to users
        /// </summary>
        public readonly int CurrentValue;
        /// <summary>
        /// Description of the license
        /// </summary>
        public readonly string Description;
        public readonly string HtmlUrl;
        /// <summary>
        /// Allows to override the default behavior for setting the `id` attribute that is required for data sources.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the license
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The role group for the license that determines the available `valid_roles`
        /// </summary>
        public readonly string RoleGroup;
        public readonly string Self;
        /// <summary>
        /// Summary of the license
        /// </summary>
        public readonly string Summary;
        public readonly string Type;
        /// <summary>
        /// List of allowed roles that may be assigned to a user with this license
        /// </summary>
        public readonly ImmutableArray<string> ValidRoles;

        [OutputConstructor]
        private GetLicensesLicenseResult(
            int allocationsAvailable,

            int currentValue,

            string description,

            string htmlUrl,

            string id,

            string name,

            string roleGroup,

            string self,

            string summary,

            string type,

            ImmutableArray<string> validRoles)
        {
            AllocationsAvailable = allocationsAvailable;
            CurrentValue = currentValue;
            Description = description;
            HtmlUrl = htmlUrl;
            Id = id;
            Name = name;
            RoleGroup = roleGroup;
            Self = self;
            Summary = summary;
            Type = type;
            ValidRoles = validRoles;
        }
    }
}
