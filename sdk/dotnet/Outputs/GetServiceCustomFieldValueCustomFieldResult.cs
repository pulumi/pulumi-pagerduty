// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty.Outputs
{

    [OutputType]
    public sealed class GetServiceCustomFieldValueCustomFieldResult
    {
        /// <summary>
        /// The kind of data the custom field is allowed to contain. Can be one of: `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
        /// </summary>
        public readonly string DataType;
        /// <summary>
        /// A description of the data this field contains.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The human-readable name of the custom field.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The type of field. Can be one of: `single_value`, `single_value_fixed`, `multi_value`, or `multi_value_fixed`.
        /// </summary>
        public readonly string FieldType;
        /// <summary>
        /// The ID of the custom field.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the custom field.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The type of the reference, typically "field_value".
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The value of the custom field. This is a JSON-encoded string matching the field's data type.
        /// </summary>
        public readonly string Value;

        [OutputConstructor]
        private GetServiceCustomFieldValueCustomFieldResult(
            string dataType,

            string description,

            string displayName,

            string fieldType,

            string id,

            string name,

            string type,

            string value)
        {
            DataType = dataType;
            Description = description;
            DisplayName = displayName;
            FieldType = fieldType;
            Id = id;
            Name = name;
            Type = type;
            Value = value;
        }
    }
}
