// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty.Outputs
{

    [OutputType]
    public sealed class GetStandardsStandardResult
    {
        /// <summary>
        /// Indicates whether the standard is currently active and applicable to the resource.
        /// </summary>
        public readonly bool Active;
        /// <summary>
        /// Provides a textual description of the standard.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A list of exceptions for the application of this standard.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetStandardsStandardExclusionResult> Exclusions;
        /// <summary>
        /// The unique identifier for the resource being included.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of explict instances this standard applies to.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetStandardsStandardInclusionResult> Inclusions;
        /// <summary>
        /// The human-readable name of the standard.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Filter by `resource_type` the received standards. Allowed values are `technical_service`.
        /// </summary>
        public readonly string ResourceType;
        /// <summary>
        /// Specifies the type of resource this inclusion applies to.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetStandardsStandardResult(
            bool active,

            string description,

            ImmutableArray<Outputs.GetStandardsStandardExclusionResult> exclusions,

            string id,

            ImmutableArray<Outputs.GetStandardsStandardInclusionResult> inclusions,

            string name,

            string resourceType,

            string type)
        {
            Active = active;
            Description = description;
            Exclusions = exclusions;
            Id = id;
            Inclusions = inclusions;
            Name = name;
            ResourceType = resourceType;
            Type = type;
        }
    }
}
