// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty.Outputs
{

    [OutputType]
    public sealed class RulesetRuleActions
    {
        /// <summary>
        /// Note added to the event.
        /// </summary>
        public readonly ImmutableArray<Outputs.RulesetRuleActionsAnnotate> Annotates;
        public readonly ImmutableArray<Outputs.RulesetRuleActionsEventAction> EventActions;
        /// <summary>
        /// Allows you to copy important data from one event field to another. Extraction rules must use valid [RE2 regular expression syntax](https://github.com/google/re2/wiki/Syntax). Extraction objects consist of the following fields:
        /// </summary>
        public readonly ImmutableArray<Outputs.RulesetRuleActionsExtraction> Extractions;
        /// <summary>
        /// The ID of the priority applied to the event.
        /// </summary>
        public readonly ImmutableArray<Outputs.RulesetRuleActionsPriority> Priorities;
        /// <summary>
        /// The ID of the service where the event will be routed.
        /// </summary>
        public readonly ImmutableArray<Outputs.RulesetRuleActionsRoute> Routes;
        /// <summary>
        /// The [severity level](https://support.pagerduty.com/docs/rulesets#section-set-severity-with-event-rules) of the event. Can be either `info`,`error`,`warning`, or `critical`.
        /// </summary>
        public readonly ImmutableArray<Outputs.RulesetRuleActionsSeverity> Severities;
        /// <summary>
        /// Controls whether an alert is [suppressed](https://support.pagerduty.com/docs/rulesets#section-suppress-but-create-triggering-thresholds-with-event-rules) (does not create an incident).
        /// </summary>
        public readonly ImmutableArray<Outputs.RulesetRuleActionsSuppress> Suppresses;

        [OutputConstructor]
        private RulesetRuleActions(
            ImmutableArray<Outputs.RulesetRuleActionsAnnotate> annotates,

            ImmutableArray<Outputs.RulesetRuleActionsEventAction> eventActions,

            ImmutableArray<Outputs.RulesetRuleActionsExtraction> extractions,

            ImmutableArray<Outputs.RulesetRuleActionsPriority> priorities,

            ImmutableArray<Outputs.RulesetRuleActionsRoute> routes,

            ImmutableArray<Outputs.RulesetRuleActionsSeverity> severities,

            ImmutableArray<Outputs.RulesetRuleActionsSuppress> suppresses)
        {
            Annotates = annotates;
            EventActions = eventActions;
            Extractions = extractions;
            Priorities = priorities;
            Routes = routes;
            Severities = severities;
            Suppresses = suppresses;
        }
    }
}
