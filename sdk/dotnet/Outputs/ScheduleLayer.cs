// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty.Outputs
{

    [OutputType]
    public sealed class ScheduleLayer
    {
        /// <summary>
        /// The end time of the schedule layer. If not specified, the layer does not end.
        /// </summary>
        public readonly string? End;
        /// <summary>
        /// The ID of the schedule.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The name of the schedule layer.
        /// </summary>
        public readonly string? Name;
        public readonly string? RenderedCoveragePercentage;
        /// <summary>
        /// A schedule layer restriction block. Restriction blocks documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.ScheduleLayerRestriction> Restrictions;
        /// <summary>
        /// The duration of each on-call shift in `seconds`.
        /// </summary>
        public readonly int RotationTurnLengthSeconds;
        /// <summary>
        /// The effective start time of the schedule layer. This can be before the start time of the schedule.
        /// </summary>
        public readonly string RotationVirtualStart;
        /// <summary>
        /// The start time of the schedule layer.
        /// </summary>
        public readonly string Start;
        /// <summary>
        /// The ordered list of users on this layer. The position of the user on the list determines their order in the layer.
        /// </summary>
        public readonly ImmutableArray<string> Users;

        [OutputConstructor]
        private ScheduleLayer(
            string? end,

            string? id,

            string? name,

            string? renderedCoveragePercentage,

            ImmutableArray<Outputs.ScheduleLayerRestriction> restrictions,

            int rotationTurnLengthSeconds,

            string rotationVirtualStart,

            string start,

            ImmutableArray<string> users)
        {
            End = end;
            Id = id;
            Name = name;
            RenderedCoveragePercentage = renderedCoveragePercentage;
            Restrictions = restrictions;
            RotationTurnLengthSeconds = rotationTurnLengthSeconds;
            RotationVirtualStart = rotationVirtualStart;
            Start = start;
            Users = users;
        }
    }
}
