// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty.Outputs
{

    [OutputType]
    public sealed class ServiceIncidentUrgencyRule
    {
        /// <summary>
        /// Incidents' urgency during support hours.
        /// </summary>
        public readonly Outputs.ServiceIncidentUrgencyRuleDuringSupportHours? DuringSupportHours;
        /// <summary>
        /// Incidents' urgency outside support hours.
        /// </summary>
        public readonly Outputs.ServiceIncidentUrgencyRuleOutsideSupportHours? OutsideSupportHours;
        /// <summary>
        /// The type of incident urgency: `Constant` or `UseSupportHours` (when depending on specific support hours; see `SupportHours`).
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The urgency: `Low` Notify responders (does not escalate), `High` (follows escalation rules) or `SeverityBased` Set's the urgency of the incident based on the severity set by the triggering monitoring tool.
        /// </summary>
        public readonly string? Urgency;

        [OutputConstructor]
        private ServiceIncidentUrgencyRule(
            Outputs.ServiceIncidentUrgencyRuleDuringSupportHours? duringSupportHours,

            Outputs.ServiceIncidentUrgencyRuleOutsideSupportHours? outsideSupportHours,

            string type,

            string? urgency)
        {
            DuringSupportHours = duringSupportHours;
            OutsideSupportHours = outsideSupportHours;
            Type = type;
            Urgency = urgency;
        }
    }
}
