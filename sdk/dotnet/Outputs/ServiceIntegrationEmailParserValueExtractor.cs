// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty.Outputs
{

    [OutputType]
    public sealed class ServiceIntegrationEmailParserValueExtractor
    {
        public readonly string? EndsBefore;
        /// <summary>
        /// Can be `Subject` or `Body`.
        /// </summary>
        public readonly string Part;
        /// <summary>
        /// If `Type` has value `Regex` this value should contain valid regex.
        /// 
        /// **Note:** You can use the `pagerduty.getVendor` data source to locate the appropriate vendor ID.
        /// </summary>
        public readonly string? Regex;
        public readonly string? StartsAfter;
        /// <summary>
        /// Can be `Between`, `Entire` or `Regex`.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// First value extractor should have name `IncidentKey` other value extractors should contain custom names.
        /// </summary>
        public readonly string ValueName;

        [OutputConstructor]
        private ServiceIntegrationEmailParserValueExtractor(
            string? endsBefore,

            string part,

            string? regex,

            string? startsAfter,

            string type,

            string valueName)
        {
            EndsBefore = endsBefore;
            Part = part;
            Regex = regex;
            StartsAfter = startsAfter;
            Type = type;
            ValueName = valueName;
        }
    }
}
