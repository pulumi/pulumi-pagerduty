// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty
{
    /// <summary>
    /// A [service custom field](https://developer.pagerduty.com/api-reference/6075929031f7d-create-a-field)
    /// allows you to extend PagerDuty Services with custom data fields to provide
    /// additional context and support features such as customized filtering, search,
    /// and analytics.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Pagerduty = Pulumi.Pagerduty;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Simple string field
    ///     var environment = new Pagerduty.ServiceCustomField("environment", new()
    ///     {
    ///         Name = "environment",
    ///         DisplayName = "Environment",
    ///         DataType = "string",
    ///         FieldType = "single_value",
    ///         Description = "The environment this service runs in",
    ///     });
    /// 
    ///     // Field with fixed options
    ///     var deploymentTier = new Pagerduty.ServiceCustomField("deployment_tier", new()
    ///     {
    ///         Name = "deployment_tier",
    ///         DisplayName = "Deployment Tier",
    ///         DataType = "string",
    ///         FieldType = "single_value_fixed",
    ///         Description = "The deployment tier of the service",
    ///         DefaultValue = JsonSerializer.Serialize("production"),
    ///         FieldOptions = new[]
    ///         {
    ///             new Pagerduty.Inputs.ServiceCustomFieldFieldOptionArgs
    ///             {
    ///                 Value = "production",
    ///                 DataType = "string",
    ///             },
    ///             new Pagerduty.Inputs.ServiceCustomFieldFieldOptionArgs
    ///             {
    ///                 Value = "staging",
    ///                 DataType = "string",
    ///             },
    ///             new Pagerduty.Inputs.ServiceCustomFieldFieldOptionArgs
    ///             {
    ///                 Value = "development",
    ///                 DataType = "string",
    ///             },
    ///         },
    ///     });
    /// 
    ///     // Multi-value field with fixed options
    ///     var regions = new Pagerduty.ServiceCustomField("regions", new()
    ///     {
    ///         Name = "regions",
    ///         DisplayName = "AWS Regions",
    ///         DataType = "string",
    ///         FieldType = "multi_value_fixed",
    ///         Description = "AWS regions where this service is deployed",
    ///         FieldOptions = new[]
    ///         {
    ///             new Pagerduty.Inputs.ServiceCustomFieldFieldOptionArgs
    ///             {
    ///                 Value = "us-east-1",
    ///                 DataType = "string",
    ///             },
    ///             new Pagerduty.Inputs.ServiceCustomFieldFieldOptionArgs
    ///             {
    ///                 Value = "us-west-1",
    ///                 DataType = "string",
    ///             },
    ///         },
    ///     });
    /// 
    ///     // Boolean field
    ///     var critical = new Pagerduty.ServiceCustomField("critical", new()
    ///     {
    ///         Name = "is_critical",
    ///         DisplayName = "Is Critical",
    ///         DataType = "boolean",
    ///         FieldType = "single_value",
    ///         Description = "Whether this is a critical service",
    ///         DefaultValue = JsonSerializer.Serialize(true),
    ///     });
    /// 
    ///     // Integer field
    ///     var priority = new Pagerduty.ServiceCustomField("priority", new()
    ///     {
    ///         Name = "priority_level",
    ///         DisplayName = "Priority Level",
    ///         DataType = "integer",
    ///         FieldType = "single_value",
    ///         Description = "Service priority level",
    ///         DefaultValue = JsonSerializer.Serialize(1),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Service custom fields can be imported using the field ID, e.g.
    /// 
    /// ```sh
    /// $ pulumi import pagerduty:index/serviceCustomField:ServiceCustomField example P123456
    /// ```
    /// </summary>
    [PagerdutyResourceType("pagerduty:index/serviceCustomField:ServiceCustomField")]
    public partial class ServiceCustomField : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The kind of data the custom field is allowed to contain. Can be one of: `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
        /// </summary>
        [Output("dataType")]
        public Output<string> DataType { get; private set; } = null!;

        /// <summary>
        /// The default value for the field. Must be provided as a JSON-encoded string matching the field's data type.
        /// </summary>
        [Output("defaultValue")]
        public Output<string?> DefaultValue { get; private set; } = null!;

        /// <summary>
        /// A description of the data this field contains.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The human-readable name of the field. Must be unique across an account.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Whether the field is enabled. Defaults to `true`.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// Configuration block for defining options for `single_value_fixed` or `multi_value_fixed` field types. Can be specified multiple times for multiple options.
        /// </summary>
        [Output("fieldOptions")]
        public Output<ImmutableArray<Outputs.ServiceCustomFieldFieldOption>> FieldOptions { get; private set; } = null!;

        /// <summary>
        /// The type of field. Must be one of: `single_value`, `single_value_fixed`, `multi_value`, or `multi_value_fixed`.
        /// </summary>
        [Output("fieldType")]
        public Output<string> FieldType { get; private set; } = null!;

        /// <summary>
        /// The name of the field. May include ASCII characters, specifically lowercase letters, digits, and underscores. Must be unique and cannot be changed once created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The API show URL at which the object is accessible
        /// </summary>
        [Output("self")]
        public Output<string> Self { get; private set; } = null!;

        /// <summary>
        /// A short-form, server-generated string that provides succinct, important information about an object suitable for primary
        /// labeling of an entity in a client. In many cases, this will be identical to display_name
        /// </summary>
        [Output("summary")]
        public Output<string> Summary { get; private set; } = null!;

        /// <summary>
        /// API object type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceCustomField resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceCustomField(string name, ServiceCustomFieldArgs args, CustomResourceOptions? options = null)
            : base("pagerduty:index/serviceCustomField:ServiceCustomField", name, args ?? new ServiceCustomFieldArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceCustomField(string name, Input<string> id, ServiceCustomFieldState? state = null, CustomResourceOptions? options = null)
            : base("pagerduty:index/serviceCustomField:ServiceCustomField", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceCustomField resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceCustomField Get(string name, Input<string> id, ServiceCustomFieldState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceCustomField(name, id, state, options);
        }
    }

    public sealed class ServiceCustomFieldArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The kind of data the custom field is allowed to contain. Can be one of: `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
        /// </summary>
        [Input("dataType", required: true)]
        public Input<string> DataType { get; set; } = null!;

        /// <summary>
        /// The default value for the field. Must be provided as a JSON-encoded string matching the field's data type.
        /// </summary>
        [Input("defaultValue")]
        public Input<string>? DefaultValue { get; set; }

        /// <summary>
        /// A description of the data this field contains.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The human-readable name of the field. Must be unique across an account.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// Whether the field is enabled. Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("fieldOptions")]
        private InputList<Inputs.ServiceCustomFieldFieldOptionArgs>? _fieldOptions;

        /// <summary>
        /// Configuration block for defining options for `single_value_fixed` or `multi_value_fixed` field types. Can be specified multiple times for multiple options.
        /// </summary>
        public InputList<Inputs.ServiceCustomFieldFieldOptionArgs> FieldOptions
        {
            get => _fieldOptions ?? (_fieldOptions = new InputList<Inputs.ServiceCustomFieldFieldOptionArgs>());
            set => _fieldOptions = value;
        }

        /// <summary>
        /// The type of field. Must be one of: `single_value`, `single_value_fixed`, `multi_value`, or `multi_value_fixed`.
        /// </summary>
        [Input("fieldType", required: true)]
        public Input<string> FieldType { get; set; } = null!;

        /// <summary>
        /// The name of the field. May include ASCII characters, specifically lowercase letters, digits, and underscores. Must be unique and cannot be changed once created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ServiceCustomFieldArgs()
        {
        }
        public static new ServiceCustomFieldArgs Empty => new ServiceCustomFieldArgs();
    }

    public sealed class ServiceCustomFieldState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The kind of data the custom field is allowed to contain. Can be one of: `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
        /// </summary>
        [Input("dataType")]
        public Input<string>? DataType { get; set; }

        /// <summary>
        /// The default value for the field. Must be provided as a JSON-encoded string matching the field's data type.
        /// </summary>
        [Input("defaultValue")]
        public Input<string>? DefaultValue { get; set; }

        /// <summary>
        /// A description of the data this field contains.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The human-readable name of the field. Must be unique across an account.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Whether the field is enabled. Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("fieldOptions")]
        private InputList<Inputs.ServiceCustomFieldFieldOptionGetArgs>? _fieldOptions;

        /// <summary>
        /// Configuration block for defining options for `single_value_fixed` or `multi_value_fixed` field types. Can be specified multiple times for multiple options.
        /// </summary>
        public InputList<Inputs.ServiceCustomFieldFieldOptionGetArgs> FieldOptions
        {
            get => _fieldOptions ?? (_fieldOptions = new InputList<Inputs.ServiceCustomFieldFieldOptionGetArgs>());
            set => _fieldOptions = value;
        }

        /// <summary>
        /// The type of field. Must be one of: `single_value`, `single_value_fixed`, `multi_value`, or `multi_value_fixed`.
        /// </summary>
        [Input("fieldType")]
        public Input<string>? FieldType { get; set; }

        /// <summary>
        /// The name of the field. May include ASCII characters, specifically lowercase letters, digits, and underscores. Must be unique and cannot be changed once created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The API show URL at which the object is accessible
        /// </summary>
        [Input("self")]
        public Input<string>? Self { get; set; }

        /// <summary>
        /// A short-form, server-generated string that provides succinct, important information about an object suitable for primary
        /// labeling of an entity in a client. In many cases, this will be identical to display_name
        /// </summary>
        [Input("summary")]
        public Input<string>? Summary { get; set; }

        /// <summary>
        /// API object type
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public ServiceCustomFieldState()
        {
        }
        public static new ServiceCustomFieldState Empty => new ServiceCustomFieldState();
    }
}
