// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty
{
    /// <summary>
    /// A [service dependency](https://developer.pagerduty.com/api-reference/reference/REST/openapiv3.json/paths/~1service_dependencies~1associate/post) is a relationship between a business service and technical and business services that this service uses, or that are used by this service, and are critical for successful operation.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Pagerduty = Pulumi.Pagerduty;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var foo = new Pagerduty.ServiceDependency("foo", new Pagerduty.ServiceDependencyArgs
    ///         {
    ///             Dependencies = 
    ///             {
    ///                 new Pagerduty.Inputs.ServiceDependencyDependencyArgs
    ///                 {
    ///                     DependentServices = 
    ///                     {
    ///                         new Pagerduty.Inputs.ServiceDependencyDependencyDependentServiceArgs
    ///                         {
    ///                             Id = pagerduty_business_service.Foo.Id,
    ///                             Type = "business_service",
    ///                         },
    ///                     },
    ///                     SupportingServices = 
    ///                     {
    ///                         new Pagerduty.Inputs.ServiceDependencyDependencySupportingServiceArgs
    ///                         {
    ///                             Id = pagerduty_service.Foo.Id,
    ///                             Type = "service",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         });
    ///         var bar = new Pagerduty.ServiceDependency("bar", new Pagerduty.ServiceDependencyArgs
    ///         {
    ///             Dependencies = 
    ///             {
    ///                 new Pagerduty.Inputs.ServiceDependencyDependencyArgs
    ///                 {
    ///                     DependentServices = 
    ///                     {
    ///                         new Pagerduty.Inputs.ServiceDependencyDependencyDependentServiceArgs
    ///                         {
    ///                             Id = pagerduty_business_service.Foo.Id,
    ///                             Type = "business_service",
    ///                         },
    ///                     },
    ///                     SupportingServices = 
    ///                     {
    ///                         new Pagerduty.Inputs.ServiceDependencyDependencySupportingServiceArgs
    ///                         {
    ///                             Id = pagerduty_service.Two.Id,
    ///                             Type = "service",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    public partial class ServiceDependency : Pulumi.CustomResource
    {
        /// <summary>
        /// The relationship between the `supporting_service` and `dependent_service`.
        /// </summary>
        [Output("dependencies")]
        public Output<ImmutableArray<Outputs.ServiceDependencyDependency>> Dependencies { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceDependency resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceDependency(string name, ServiceDependencyArgs args, CustomResourceOptions? options = null)
            : base("pagerduty:index/serviceDependency:ServiceDependency", name, args ?? new ServiceDependencyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceDependency(string name, Input<string> id, ServiceDependencyState? state = null, CustomResourceOptions? options = null)
            : base("pagerduty:index/serviceDependency:ServiceDependency", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceDependency resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceDependency Get(string name, Input<string> id, ServiceDependencyState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceDependency(name, id, state, options);
        }
    }

    public sealed class ServiceDependencyArgs : Pulumi.ResourceArgs
    {
        [Input("dependencies", required: true)]
        private InputList<Inputs.ServiceDependencyDependencyArgs>? _dependencies;

        /// <summary>
        /// The relationship between the `supporting_service` and `dependent_service`.
        /// </summary>
        public InputList<Inputs.ServiceDependencyDependencyArgs> Dependencies
        {
            get => _dependencies ?? (_dependencies = new InputList<Inputs.ServiceDependencyDependencyArgs>());
            set => _dependencies = value;
        }

        public ServiceDependencyArgs()
        {
        }
    }

    public sealed class ServiceDependencyState : Pulumi.ResourceArgs
    {
        [Input("dependencies")]
        private InputList<Inputs.ServiceDependencyDependencyGetArgs>? _dependencies;

        /// <summary>
        /// The relationship between the `supporting_service` and `dependent_service`.
        /// </summary>
        public InputList<Inputs.ServiceDependencyDependencyGetArgs> Dependencies
        {
            get => _dependencies ?? (_dependencies = new InputList<Inputs.ServiceDependencyDependencyGetArgs>());
            set => _dependencies = value;
        }

        public ServiceDependencyState()
        {
        }
    }
}
