// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pagerduty
{
    /// <summary>
    /// A [service dependency](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODE5Mg-associate-service-dependencies) is a relationship between two services that this service uses, or that are used by this service, and are critical for successful operation.
    /// 
    /// ## Import
    /// 
    /// Service dependencies can be imported using the related supporting service id, supporting service type (`business_service` or `service`) and the dependency id separated by a dot, e.g.
    /// 
    /// ```sh
    /// $ pulumi import pagerduty:index/serviceDependency:ServiceDependency main P4B2Z7G.business_service.D5RTHKRNGU4PYE90PJ
    /// ```
    /// </summary>
    [PagerdutyResourceType("pagerduty:index/serviceDependency:ServiceDependency")]
    public partial class ServiceDependency : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The relationship between the `supporting_service` and `dependent_service`. One and only one dependency block must be defined.
        /// </summary>
        [Output("dependency")]
        public Output<Outputs.ServiceDependencyDependency?> Dependency { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceDependency resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceDependency(string name, ServiceDependencyArgs? args = null, CustomResourceOptions? options = null)
            : base("pagerduty:index/serviceDependency:ServiceDependency", name, args ?? new ServiceDependencyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceDependency(string name, Input<string> id, ServiceDependencyState? state = null, CustomResourceOptions? options = null)
            : base("pagerduty:index/serviceDependency:ServiceDependency", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceDependency resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceDependency Get(string name, Input<string> id, ServiceDependencyState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceDependency(name, id, state, options);
        }
    }

    public sealed class ServiceDependencyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The relationship between the `supporting_service` and `dependent_service`. One and only one dependency block must be defined.
        /// </summary>
        [Input("dependency")]
        public Input<Inputs.ServiceDependencyDependencyArgs>? Dependency { get; set; }

        public ServiceDependencyArgs()
        {
        }
        public static new ServiceDependencyArgs Empty => new ServiceDependencyArgs();
    }

    public sealed class ServiceDependencyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The relationship between the `supporting_service` and `dependent_service`. One and only one dependency block must be defined.
        /// </summary>
        [Input("dependency")]
        public Input<Inputs.ServiceDependencyDependencyGetArgs>? Dependency { get; set; }

        public ServiceDependencyState()
        {
        }
        public static new ServiceDependencyState Empty => new ServiceDependencyState();
    }
}
