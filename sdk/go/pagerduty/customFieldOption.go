// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pagerduty

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// !> This Resource is no longer functional. Documentation is left here for the purpose of documenting migration steps.
//
// A Custom Field Option is a specific value that can be used for [Custom Fields](https://support.pagerduty.com/docs/custom-fields) that only allow values from a set of fixed option.
//
// ## Migration
//
// The `incidentCustomFieldOption` resource provides similar functionality
// with largely the same arguments and attributes. The only significant change is that the `datatype` argument has been renamed `dataType`
// to match the Public API for the Custom Fields on Incidents feature.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-pagerduty/sdk/v3/go/pagerduty"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			sreEnvironment, err := pagerduty.NewCustomField(ctx, "sreEnvironment", &pagerduty.CustomFieldArgs{
//				Datatype:     pulumi.String("string"),
//				FixedOptions: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = pagerduty.NewCustomFieldOption(ctx, "devEnvironment", &pagerduty.CustomFieldOptionArgs{
//				Field:    sreEnvironment.ID(),
//				Datatype: pulumi.String("string"),
//				Value:    pulumi.String("dev"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = pagerduty.NewCustomFieldOption(ctx, "stageEnvironment", &pagerduty.CustomFieldOptionArgs{
//				Field:    sreEnvironment.ID(),
//				Datatype: pulumi.String("string"),
//				Value:    pulumi.String("stage"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = pagerduty.NewCustomFieldOption(ctx, "prodEnvironment", &pagerduty.CustomFieldOptionArgs{
//				Field:    sreEnvironment.ID(),
//				Datatype: pulumi.String("string"),
//				Value:    pulumi.String("prod"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type CustomFieldOption struct {
	pulumi.CustomResourceState

	// The datatype of the field option. Must be one of `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
	Datatype pulumi.StringOutput `pulumi:"datatype"`
	// The ID of the field.
	Field pulumi.StringOutput `pulumi:"field"`
	// The allowed value.
	Value pulumi.StringOutput `pulumi:"value"`
}

// NewCustomFieldOption registers a new resource with the given unique name, arguments, and options.
func NewCustomFieldOption(ctx *pulumi.Context,
	name string, args *CustomFieldOptionArgs, opts ...pulumi.ResourceOption) (*CustomFieldOption, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Datatype == nil {
		return nil, errors.New("invalid value for required argument 'Datatype'")
	}
	if args.Field == nil {
		return nil, errors.New("invalid value for required argument 'Field'")
	}
	if args.Value == nil {
		return nil, errors.New("invalid value for required argument 'Value'")
	}
	var resource CustomFieldOption
	err := ctx.RegisterResource("pagerduty:index/customFieldOption:CustomFieldOption", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomFieldOption gets an existing CustomFieldOption resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomFieldOption(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomFieldOptionState, opts ...pulumi.ResourceOption) (*CustomFieldOption, error) {
	var resource CustomFieldOption
	err := ctx.ReadResource("pagerduty:index/customFieldOption:CustomFieldOption", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomFieldOption resources.
type customFieldOptionState struct {
	// The datatype of the field option. Must be one of `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
	Datatype *string `pulumi:"datatype"`
	// The ID of the field.
	Field *string `pulumi:"field"`
	// The allowed value.
	Value *string `pulumi:"value"`
}

type CustomFieldOptionState struct {
	// The datatype of the field option. Must be one of `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
	Datatype pulumi.StringPtrInput
	// The ID of the field.
	Field pulumi.StringPtrInput
	// The allowed value.
	Value pulumi.StringPtrInput
}

func (CustomFieldOptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*customFieldOptionState)(nil)).Elem()
}

type customFieldOptionArgs struct {
	// The datatype of the field option. Must be one of `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
	Datatype string `pulumi:"datatype"`
	// The ID of the field.
	Field string `pulumi:"field"`
	// The allowed value.
	Value string `pulumi:"value"`
}

// The set of arguments for constructing a CustomFieldOption resource.
type CustomFieldOptionArgs struct {
	// The datatype of the field option. Must be one of `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
	Datatype pulumi.StringInput
	// The ID of the field.
	Field pulumi.StringInput
	// The allowed value.
	Value pulumi.StringInput
}

func (CustomFieldOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customFieldOptionArgs)(nil)).Elem()
}

type CustomFieldOptionInput interface {
	pulumi.Input

	ToCustomFieldOptionOutput() CustomFieldOptionOutput
	ToCustomFieldOptionOutputWithContext(ctx context.Context) CustomFieldOptionOutput
}

func (*CustomFieldOption) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomFieldOption)(nil)).Elem()
}

func (i *CustomFieldOption) ToCustomFieldOptionOutput() CustomFieldOptionOutput {
	return i.ToCustomFieldOptionOutputWithContext(context.Background())
}

func (i *CustomFieldOption) ToCustomFieldOptionOutputWithContext(ctx context.Context) CustomFieldOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomFieldOptionOutput)
}

// CustomFieldOptionArrayInput is an input type that accepts CustomFieldOptionArray and CustomFieldOptionArrayOutput values.
// You can construct a concrete instance of `CustomFieldOptionArrayInput` via:
//
//	CustomFieldOptionArray{ CustomFieldOptionArgs{...} }
type CustomFieldOptionArrayInput interface {
	pulumi.Input

	ToCustomFieldOptionArrayOutput() CustomFieldOptionArrayOutput
	ToCustomFieldOptionArrayOutputWithContext(context.Context) CustomFieldOptionArrayOutput
}

type CustomFieldOptionArray []CustomFieldOptionInput

func (CustomFieldOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomFieldOption)(nil)).Elem()
}

func (i CustomFieldOptionArray) ToCustomFieldOptionArrayOutput() CustomFieldOptionArrayOutput {
	return i.ToCustomFieldOptionArrayOutputWithContext(context.Background())
}

func (i CustomFieldOptionArray) ToCustomFieldOptionArrayOutputWithContext(ctx context.Context) CustomFieldOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomFieldOptionArrayOutput)
}

// CustomFieldOptionMapInput is an input type that accepts CustomFieldOptionMap and CustomFieldOptionMapOutput values.
// You can construct a concrete instance of `CustomFieldOptionMapInput` via:
//
//	CustomFieldOptionMap{ "key": CustomFieldOptionArgs{...} }
type CustomFieldOptionMapInput interface {
	pulumi.Input

	ToCustomFieldOptionMapOutput() CustomFieldOptionMapOutput
	ToCustomFieldOptionMapOutputWithContext(context.Context) CustomFieldOptionMapOutput
}

type CustomFieldOptionMap map[string]CustomFieldOptionInput

func (CustomFieldOptionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomFieldOption)(nil)).Elem()
}

func (i CustomFieldOptionMap) ToCustomFieldOptionMapOutput() CustomFieldOptionMapOutput {
	return i.ToCustomFieldOptionMapOutputWithContext(context.Background())
}

func (i CustomFieldOptionMap) ToCustomFieldOptionMapOutputWithContext(ctx context.Context) CustomFieldOptionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomFieldOptionMapOutput)
}

type CustomFieldOptionOutput struct{ *pulumi.OutputState }

func (CustomFieldOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomFieldOption)(nil)).Elem()
}

func (o CustomFieldOptionOutput) ToCustomFieldOptionOutput() CustomFieldOptionOutput {
	return o
}

func (o CustomFieldOptionOutput) ToCustomFieldOptionOutputWithContext(ctx context.Context) CustomFieldOptionOutput {
	return o
}

// The datatype of the field option. Must be one of `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
func (o CustomFieldOptionOutput) Datatype() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomFieldOption) pulumi.StringOutput { return v.Datatype }).(pulumi.StringOutput)
}

// The ID of the field.
func (o CustomFieldOptionOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomFieldOption) pulumi.StringOutput { return v.Field }).(pulumi.StringOutput)
}

// The allowed value.
func (o CustomFieldOptionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomFieldOption) pulumi.StringOutput { return v.Value }).(pulumi.StringOutput)
}

type CustomFieldOptionArrayOutput struct{ *pulumi.OutputState }

func (CustomFieldOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomFieldOption)(nil)).Elem()
}

func (o CustomFieldOptionArrayOutput) ToCustomFieldOptionArrayOutput() CustomFieldOptionArrayOutput {
	return o
}

func (o CustomFieldOptionArrayOutput) ToCustomFieldOptionArrayOutputWithContext(ctx context.Context) CustomFieldOptionArrayOutput {
	return o
}

func (o CustomFieldOptionArrayOutput) Index(i pulumi.IntInput) CustomFieldOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomFieldOption {
		return vs[0].([]*CustomFieldOption)[vs[1].(int)]
	}).(CustomFieldOptionOutput)
}

type CustomFieldOptionMapOutput struct{ *pulumi.OutputState }

func (CustomFieldOptionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomFieldOption)(nil)).Elem()
}

func (o CustomFieldOptionMapOutput) ToCustomFieldOptionMapOutput() CustomFieldOptionMapOutput {
	return o
}

func (o CustomFieldOptionMapOutput) ToCustomFieldOptionMapOutputWithContext(ctx context.Context) CustomFieldOptionMapOutput {
	return o
}

func (o CustomFieldOptionMapOutput) MapIndex(k pulumi.StringInput) CustomFieldOptionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomFieldOption {
		return vs[0].(map[string]*CustomFieldOption)[vs[1].(string)]
	}).(CustomFieldOptionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomFieldOptionInput)(nil)).Elem(), &CustomFieldOption{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomFieldOptionArrayInput)(nil)).Elem(), CustomFieldOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomFieldOptionMapInput)(nil)).Elem(), CustomFieldOptionMap{})
	pulumi.RegisterOutputType(CustomFieldOptionOutput{})
	pulumi.RegisterOutputType(CustomFieldOptionArrayOutput{})
	pulumi.RegisterOutputType(CustomFieldOptionMapOutput{})
}
