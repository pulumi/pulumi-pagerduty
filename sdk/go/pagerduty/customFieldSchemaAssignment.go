// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pagerduty

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// !> This Resource is no longer functional. Documentation is left here for the purpose of documenting migration steps.
//
// A [Custom Field Schema Assignment](https://support.pagerduty.com/docs/custom-fields#associate-schemas-with-services) is a relationship between a Custom Field Schema and a Service.
//
// ## Migration
//
// This resource has no currently functional counterpart. Custom Fields on Incidents are now applied globally
// to incidents within an account and have no notion of a Field Schema.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-pagerduty/sdk/v3/go/pagerduty"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := pagerduty.NewCustomField(ctx, "csImpact", &pagerduty.CustomFieldArgs{
//				Datatype: pulumi.String("string"),
//			})
//			if err != nil {
//				return err
//			}
//			mySchema, err := pagerduty.NewCustomFieldSchema(ctx, "mySchema", &pagerduty.CustomFieldSchemaArgs{
//				Title:       pulumi.String("My Schema"),
//				Description: pulumi.String("Fields used on incidents"),
//			})
//			if err != nil {
//				return err
//			}
//			firstService, err := pagerduty.LookupService(ctx, &pagerduty.LookupServiceArgs{
//				Name: "My First Service",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = pagerduty.NewCustomFieldSchemaAssignment(ctx, "assignment", &pagerduty.CustomFieldSchemaAssignmentArgs{
//				Schema:  mySchema.ID(),
//				Service: *pulumi.String(firstService.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type CustomFieldSchemaAssignment struct {
	pulumi.CustomResourceState

	// The id of the field schema.
	Schema pulumi.StringOutput `pulumi:"schema"`
	// The id of the service.
	Service pulumi.StringOutput `pulumi:"service"`
}

// NewCustomFieldSchemaAssignment registers a new resource with the given unique name, arguments, and options.
func NewCustomFieldSchemaAssignment(ctx *pulumi.Context,
	name string, args *CustomFieldSchemaAssignmentArgs, opts ...pulumi.ResourceOption) (*CustomFieldSchemaAssignment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Schema == nil {
		return nil, errors.New("invalid value for required argument 'Schema'")
	}
	if args.Service == nil {
		return nil, errors.New("invalid value for required argument 'Service'")
	}
	var resource CustomFieldSchemaAssignment
	err := ctx.RegisterResource("pagerduty:index/customFieldSchemaAssignment:CustomFieldSchemaAssignment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomFieldSchemaAssignment gets an existing CustomFieldSchemaAssignment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomFieldSchemaAssignment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomFieldSchemaAssignmentState, opts ...pulumi.ResourceOption) (*CustomFieldSchemaAssignment, error) {
	var resource CustomFieldSchemaAssignment
	err := ctx.ReadResource("pagerduty:index/customFieldSchemaAssignment:CustomFieldSchemaAssignment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomFieldSchemaAssignment resources.
type customFieldSchemaAssignmentState struct {
	// The id of the field schema.
	Schema *string `pulumi:"schema"`
	// The id of the service.
	Service *string `pulumi:"service"`
}

type CustomFieldSchemaAssignmentState struct {
	// The id of the field schema.
	Schema pulumi.StringPtrInput
	// The id of the service.
	Service pulumi.StringPtrInput
}

func (CustomFieldSchemaAssignmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*customFieldSchemaAssignmentState)(nil)).Elem()
}

type customFieldSchemaAssignmentArgs struct {
	// The id of the field schema.
	Schema string `pulumi:"schema"`
	// The id of the service.
	Service string `pulumi:"service"`
}

// The set of arguments for constructing a CustomFieldSchemaAssignment resource.
type CustomFieldSchemaAssignmentArgs struct {
	// The id of the field schema.
	Schema pulumi.StringInput
	// The id of the service.
	Service pulumi.StringInput
}

func (CustomFieldSchemaAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customFieldSchemaAssignmentArgs)(nil)).Elem()
}

type CustomFieldSchemaAssignmentInput interface {
	pulumi.Input

	ToCustomFieldSchemaAssignmentOutput() CustomFieldSchemaAssignmentOutput
	ToCustomFieldSchemaAssignmentOutputWithContext(ctx context.Context) CustomFieldSchemaAssignmentOutput
}

func (*CustomFieldSchemaAssignment) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomFieldSchemaAssignment)(nil)).Elem()
}

func (i *CustomFieldSchemaAssignment) ToCustomFieldSchemaAssignmentOutput() CustomFieldSchemaAssignmentOutput {
	return i.ToCustomFieldSchemaAssignmentOutputWithContext(context.Background())
}

func (i *CustomFieldSchemaAssignment) ToCustomFieldSchemaAssignmentOutputWithContext(ctx context.Context) CustomFieldSchemaAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomFieldSchemaAssignmentOutput)
}

// CustomFieldSchemaAssignmentArrayInput is an input type that accepts CustomFieldSchemaAssignmentArray and CustomFieldSchemaAssignmentArrayOutput values.
// You can construct a concrete instance of `CustomFieldSchemaAssignmentArrayInput` via:
//
//	CustomFieldSchemaAssignmentArray{ CustomFieldSchemaAssignmentArgs{...} }
type CustomFieldSchemaAssignmentArrayInput interface {
	pulumi.Input

	ToCustomFieldSchemaAssignmentArrayOutput() CustomFieldSchemaAssignmentArrayOutput
	ToCustomFieldSchemaAssignmentArrayOutputWithContext(context.Context) CustomFieldSchemaAssignmentArrayOutput
}

type CustomFieldSchemaAssignmentArray []CustomFieldSchemaAssignmentInput

func (CustomFieldSchemaAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomFieldSchemaAssignment)(nil)).Elem()
}

func (i CustomFieldSchemaAssignmentArray) ToCustomFieldSchemaAssignmentArrayOutput() CustomFieldSchemaAssignmentArrayOutput {
	return i.ToCustomFieldSchemaAssignmentArrayOutputWithContext(context.Background())
}

func (i CustomFieldSchemaAssignmentArray) ToCustomFieldSchemaAssignmentArrayOutputWithContext(ctx context.Context) CustomFieldSchemaAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomFieldSchemaAssignmentArrayOutput)
}

// CustomFieldSchemaAssignmentMapInput is an input type that accepts CustomFieldSchemaAssignmentMap and CustomFieldSchemaAssignmentMapOutput values.
// You can construct a concrete instance of `CustomFieldSchemaAssignmentMapInput` via:
//
//	CustomFieldSchemaAssignmentMap{ "key": CustomFieldSchemaAssignmentArgs{...} }
type CustomFieldSchemaAssignmentMapInput interface {
	pulumi.Input

	ToCustomFieldSchemaAssignmentMapOutput() CustomFieldSchemaAssignmentMapOutput
	ToCustomFieldSchemaAssignmentMapOutputWithContext(context.Context) CustomFieldSchemaAssignmentMapOutput
}

type CustomFieldSchemaAssignmentMap map[string]CustomFieldSchemaAssignmentInput

func (CustomFieldSchemaAssignmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomFieldSchemaAssignment)(nil)).Elem()
}

func (i CustomFieldSchemaAssignmentMap) ToCustomFieldSchemaAssignmentMapOutput() CustomFieldSchemaAssignmentMapOutput {
	return i.ToCustomFieldSchemaAssignmentMapOutputWithContext(context.Background())
}

func (i CustomFieldSchemaAssignmentMap) ToCustomFieldSchemaAssignmentMapOutputWithContext(ctx context.Context) CustomFieldSchemaAssignmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomFieldSchemaAssignmentMapOutput)
}

type CustomFieldSchemaAssignmentOutput struct{ *pulumi.OutputState }

func (CustomFieldSchemaAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomFieldSchemaAssignment)(nil)).Elem()
}

func (o CustomFieldSchemaAssignmentOutput) ToCustomFieldSchemaAssignmentOutput() CustomFieldSchemaAssignmentOutput {
	return o
}

func (o CustomFieldSchemaAssignmentOutput) ToCustomFieldSchemaAssignmentOutputWithContext(ctx context.Context) CustomFieldSchemaAssignmentOutput {
	return o
}

// The id of the field schema.
func (o CustomFieldSchemaAssignmentOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomFieldSchemaAssignment) pulumi.StringOutput { return v.Schema }).(pulumi.StringOutput)
}

// The id of the service.
func (o CustomFieldSchemaAssignmentOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomFieldSchemaAssignment) pulumi.StringOutput { return v.Service }).(pulumi.StringOutput)
}

type CustomFieldSchemaAssignmentArrayOutput struct{ *pulumi.OutputState }

func (CustomFieldSchemaAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomFieldSchemaAssignment)(nil)).Elem()
}

func (o CustomFieldSchemaAssignmentArrayOutput) ToCustomFieldSchemaAssignmentArrayOutput() CustomFieldSchemaAssignmentArrayOutput {
	return o
}

func (o CustomFieldSchemaAssignmentArrayOutput) ToCustomFieldSchemaAssignmentArrayOutputWithContext(ctx context.Context) CustomFieldSchemaAssignmentArrayOutput {
	return o
}

func (o CustomFieldSchemaAssignmentArrayOutput) Index(i pulumi.IntInput) CustomFieldSchemaAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomFieldSchemaAssignment {
		return vs[0].([]*CustomFieldSchemaAssignment)[vs[1].(int)]
	}).(CustomFieldSchemaAssignmentOutput)
}

type CustomFieldSchemaAssignmentMapOutput struct{ *pulumi.OutputState }

func (CustomFieldSchemaAssignmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomFieldSchemaAssignment)(nil)).Elem()
}

func (o CustomFieldSchemaAssignmentMapOutput) ToCustomFieldSchemaAssignmentMapOutput() CustomFieldSchemaAssignmentMapOutput {
	return o
}

func (o CustomFieldSchemaAssignmentMapOutput) ToCustomFieldSchemaAssignmentMapOutputWithContext(ctx context.Context) CustomFieldSchemaAssignmentMapOutput {
	return o
}

func (o CustomFieldSchemaAssignmentMapOutput) MapIndex(k pulumi.StringInput) CustomFieldSchemaAssignmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomFieldSchemaAssignment {
		return vs[0].(map[string]*CustomFieldSchemaAssignment)[vs[1].(string)]
	}).(CustomFieldSchemaAssignmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomFieldSchemaAssignmentInput)(nil)).Elem(), &CustomFieldSchemaAssignment{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomFieldSchemaAssignmentArrayInput)(nil)).Elem(), CustomFieldSchemaAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomFieldSchemaAssignmentMapInput)(nil)).Elem(), CustomFieldSchemaAssignmentMap{})
	pulumi.RegisterOutputType(CustomFieldSchemaAssignmentOutput{})
	pulumi.RegisterOutputType(CustomFieldSchemaAssignmentArrayOutput{})
	pulumi.RegisterOutputType(CustomFieldSchemaAssignmentMapOutput{})
}
