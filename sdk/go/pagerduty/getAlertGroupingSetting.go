// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pagerduty

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-pagerduty/sdk/v4/go/pagerduty/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information about a specific [alert grouping setting](https://developer.pagerduty.com/api-reference/9b5a6c8d7379b-get-an-alert-grouping-setting).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-pagerduty/sdk/v4/go/pagerduty"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := pagerduty.LookupAlertGroupingSetting(ctx, &pagerduty.LookupAlertGroupingSettingArgs{
//				Name: "My example setting",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAlertGroupingSetting(ctx *pulumi.Context, args *LookupAlertGroupingSettingArgs, opts ...pulumi.InvokeOption) (*LookupAlertGroupingSettingResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAlertGroupingSettingResult
	err := ctx.Invoke("pagerduty:index/getAlertGroupingSetting:getAlertGroupingSetting", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAlertGroupingSetting.
type LookupAlertGroupingSettingArgs struct {
	// The values for the configuration setup for this setting.
	Config *GetAlertGroupingSettingConfig `pulumi:"config"`
	// The name to use to find an alert grouping setting in the PagerDuty API.
	Name string `pulumi:"name"`
}

// A collection of values returned by getAlertGroupingSetting.
type LookupAlertGroupingSettingResult struct {
	// The values for the configuration setup for this setting.
	Config *GetAlertGroupingSettingConfig `pulumi:"config"`
	// A description of this alert grouping setting.
	Description string `pulumi:"description"`
	// The ID of the found alert grouping setting.
	Id string `pulumi:"id"`
	// The short name of the found alert grouping setting.
	Name string `pulumi:"name"`
	// A list of string containing the IDs of services associated with this setting.
	Services []string `pulumi:"services"`
	// The type of object. The value returned will be one of `contentBased`, `contentBasedIntelligent`, `intelligent` or `time`.
	Type string `pulumi:"type"`
}

func LookupAlertGroupingSettingOutput(ctx *pulumi.Context, args LookupAlertGroupingSettingOutputArgs, opts ...pulumi.InvokeOption) LookupAlertGroupingSettingResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAlertGroupingSettingResultOutput, error) {
			args := v.(LookupAlertGroupingSettingArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("pagerduty:index/getAlertGroupingSetting:getAlertGroupingSetting", args, LookupAlertGroupingSettingResultOutput{}, options).(LookupAlertGroupingSettingResultOutput), nil
		}).(LookupAlertGroupingSettingResultOutput)
}

// A collection of arguments for invoking getAlertGroupingSetting.
type LookupAlertGroupingSettingOutputArgs struct {
	// The values for the configuration setup for this setting.
	Config GetAlertGroupingSettingConfigPtrInput `pulumi:"config"`
	// The name to use to find an alert grouping setting in the PagerDuty API.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupAlertGroupingSettingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAlertGroupingSettingArgs)(nil)).Elem()
}

// A collection of values returned by getAlertGroupingSetting.
type LookupAlertGroupingSettingResultOutput struct{ *pulumi.OutputState }

func (LookupAlertGroupingSettingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAlertGroupingSettingResult)(nil)).Elem()
}

func (o LookupAlertGroupingSettingResultOutput) ToLookupAlertGroupingSettingResultOutput() LookupAlertGroupingSettingResultOutput {
	return o
}

func (o LookupAlertGroupingSettingResultOutput) ToLookupAlertGroupingSettingResultOutputWithContext(ctx context.Context) LookupAlertGroupingSettingResultOutput {
	return o
}

// The values for the configuration setup for this setting.
func (o LookupAlertGroupingSettingResultOutput) Config() GetAlertGroupingSettingConfigPtrOutput {
	return o.ApplyT(func(v LookupAlertGroupingSettingResult) *GetAlertGroupingSettingConfig { return v.Config }).(GetAlertGroupingSettingConfigPtrOutput)
}

// A description of this alert grouping setting.
func (o LookupAlertGroupingSettingResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAlertGroupingSettingResult) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the found alert grouping setting.
func (o LookupAlertGroupingSettingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAlertGroupingSettingResult) string { return v.Id }).(pulumi.StringOutput)
}

// The short name of the found alert grouping setting.
func (o LookupAlertGroupingSettingResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAlertGroupingSettingResult) string { return v.Name }).(pulumi.StringOutput)
}

// A list of string containing the IDs of services associated with this setting.
func (o LookupAlertGroupingSettingResultOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAlertGroupingSettingResult) []string { return v.Services }).(pulumi.StringArrayOutput)
}

// The type of object. The value returned will be one of `contentBased`, `contentBasedIntelligent`, `intelligent` or `time`.
func (o LookupAlertGroupingSettingResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAlertGroupingSettingResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAlertGroupingSettingResultOutput{})
}
