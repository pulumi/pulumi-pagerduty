// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pagerduty

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-pagerduty/sdk/v4/go/pagerduty/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to get information about a specific [automation actions action](https://developer.pagerduty.com/api-reference/357ed15419f64-get-an-automation-action).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-pagerduty/sdk/v4/go/pagerduty"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := pagerduty.LookupAutomationActionsAction(ctx, &pagerduty.LookupAutomationActionsActionArgs{
//				Id: "01CS1685B2UDM4I3XUUOXPPORM",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAutomationActionsAction(ctx *pulumi.Context, args *LookupAutomationActionsActionArgs, opts ...pulumi.InvokeOption) (*LookupAutomationActionsActionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAutomationActionsActionResult
	err := ctx.Invoke("pagerduty:index/getAutomationActionsAction:getAutomationActionsAction", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAutomationActionsAction.
type LookupAutomationActionsActionArgs struct {
	// (Optional) The category of the action. The only allowed values are `diagnostic` and `remediation`.
	ActionClassification *string `pulumi:"actionClassification"`
	// The time action was created. Represented as an ISO 8601 timestamp.
	CreationTime *string `pulumi:"creationTime"`
	// (Optional) The description of the action.
	Description *string `pulumi:"description"`
	// The id of the automation actions action in the PagerDuty API.
	Id string `pulumi:"id"`
	// (Optional) The last time action has been modified. Represented as an ISO 8601 timestamp.
	ModifyTime *string `pulumi:"modifyTime"`
	// (Optional) The Process Automation Actions runner to associate the action with.
	RunnerId *string `pulumi:"runnerId"`
	// (Optional) The type of the runner associated with the action.
	RunnerType *string `pulumi:"runnerType"`
	// The type of object. The value returned will be `action`.
	Type *string `pulumi:"type"`
}

// A collection of values returned by getAutomationActionsAction.
type LookupAutomationActionsActionResult struct {
	// (Optional) The category of the action. The only allowed values are `diagnostic` and `remediation`.
	ActionClassification string `pulumi:"actionClassification"`
	// Action Data block. Action Data is documented below.
	ActionDataReferences []GetAutomationActionsActionActionDataReference `pulumi:"actionDataReferences"`
	// The type of the action. The only allowed values are `processAutomation` and `script`.
	ActionType string `pulumi:"actionType"`
	// The time action was created. Represented as an ISO 8601 timestamp.
	CreationTime string `pulumi:"creationTime"`
	// (Optional) The description of the action.
	Description string `pulumi:"description"`
	// The ID of the action.
	Id string `pulumi:"id"`
	// (Optional) The last time action has been modified. Represented as an ISO 8601 timestamp.
	ModifyTime string `pulumi:"modifyTime"`
	// The name of the action.
	Name string `pulumi:"name"`
	// (Optional) The Process Automation Actions runner to associate the action with.
	RunnerId string `pulumi:"runnerId"`
	// (Optional) The type of the runner associated with the action.
	RunnerType string `pulumi:"runnerType"`
	// The type of object. The value returned will be `action`.
	Type string `pulumi:"type"`
}

func LookupAutomationActionsActionOutput(ctx *pulumi.Context, args LookupAutomationActionsActionOutputArgs, opts ...pulumi.InvokeOption) LookupAutomationActionsActionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAutomationActionsActionResult, error) {
			args := v.(LookupAutomationActionsActionArgs)
			r, err := LookupAutomationActionsAction(ctx, &args, opts...)
			var s LookupAutomationActionsActionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAutomationActionsActionResultOutput)
}

// A collection of arguments for invoking getAutomationActionsAction.
type LookupAutomationActionsActionOutputArgs struct {
	// (Optional) The category of the action. The only allowed values are `diagnostic` and `remediation`.
	ActionClassification pulumi.StringPtrInput `pulumi:"actionClassification"`
	// The time action was created. Represented as an ISO 8601 timestamp.
	CreationTime pulumi.StringPtrInput `pulumi:"creationTime"`
	// (Optional) The description of the action.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The id of the automation actions action in the PagerDuty API.
	Id pulumi.StringInput `pulumi:"id"`
	// (Optional) The last time action has been modified. Represented as an ISO 8601 timestamp.
	ModifyTime pulumi.StringPtrInput `pulumi:"modifyTime"`
	// (Optional) The Process Automation Actions runner to associate the action with.
	RunnerId pulumi.StringPtrInput `pulumi:"runnerId"`
	// (Optional) The type of the runner associated with the action.
	RunnerType pulumi.StringPtrInput `pulumi:"runnerType"`
	// The type of object. The value returned will be `action`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (LookupAutomationActionsActionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAutomationActionsActionArgs)(nil)).Elem()
}

// A collection of values returned by getAutomationActionsAction.
type LookupAutomationActionsActionResultOutput struct{ *pulumi.OutputState }

func (LookupAutomationActionsActionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAutomationActionsActionResult)(nil)).Elem()
}

func (o LookupAutomationActionsActionResultOutput) ToLookupAutomationActionsActionResultOutput() LookupAutomationActionsActionResultOutput {
	return o
}

func (o LookupAutomationActionsActionResultOutput) ToLookupAutomationActionsActionResultOutputWithContext(ctx context.Context) LookupAutomationActionsActionResultOutput {
	return o
}

func (o LookupAutomationActionsActionResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupAutomationActionsActionResult] {
	return pulumix.Output[LookupAutomationActionsActionResult]{
		OutputState: o.OutputState,
	}
}

// (Optional) The category of the action. The only allowed values are `diagnostic` and `remediation`.
func (o LookupAutomationActionsActionResultOutput) ActionClassification() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutomationActionsActionResult) string { return v.ActionClassification }).(pulumi.StringOutput)
}

// Action Data block. Action Data is documented below.
func (o LookupAutomationActionsActionResultOutput) ActionDataReferences() GetAutomationActionsActionActionDataReferenceArrayOutput {
	return o.ApplyT(func(v LookupAutomationActionsActionResult) []GetAutomationActionsActionActionDataReference {
		return v.ActionDataReferences
	}).(GetAutomationActionsActionActionDataReferenceArrayOutput)
}

// The type of the action. The only allowed values are `processAutomation` and `script`.
func (o LookupAutomationActionsActionResultOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutomationActionsActionResult) string { return v.ActionType }).(pulumi.StringOutput)
}

// The time action was created. Represented as an ISO 8601 timestamp.
func (o LookupAutomationActionsActionResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutomationActionsActionResult) string { return v.CreationTime }).(pulumi.StringOutput)
}

// (Optional) The description of the action.
func (o LookupAutomationActionsActionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutomationActionsActionResult) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the action.
func (o LookupAutomationActionsActionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutomationActionsActionResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Optional) The last time action has been modified. Represented as an ISO 8601 timestamp.
func (o LookupAutomationActionsActionResultOutput) ModifyTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutomationActionsActionResult) string { return v.ModifyTime }).(pulumi.StringOutput)
}

// The name of the action.
func (o LookupAutomationActionsActionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutomationActionsActionResult) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional) The Process Automation Actions runner to associate the action with.
func (o LookupAutomationActionsActionResultOutput) RunnerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutomationActionsActionResult) string { return v.RunnerId }).(pulumi.StringOutput)
}

// (Optional) The type of the runner associated with the action.
func (o LookupAutomationActionsActionResultOutput) RunnerType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutomationActionsActionResult) string { return v.RunnerType }).(pulumi.StringOutput)
}

// The type of object. The value returned will be `action`.
func (o LookupAutomationActionsActionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutomationActionsActionResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAutomationActionsActionResultOutput{})
}
