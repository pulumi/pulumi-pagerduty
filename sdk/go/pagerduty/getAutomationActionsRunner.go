// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pagerduty

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-pagerduty/sdk/v3/go/pagerduty/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information about a specific [automation actions runner](https://developer.pagerduty.com/api-reference/aace61f84cbd0-get-an-automation-action-runner).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-pagerduty/sdk/v3/go/pagerduty"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := pagerduty.LookupAutomationActionsRunner(ctx, &pagerduty.LookupAutomationActionsRunnerArgs{
//				Id: "01DBJLIGED17S1DQKQC2AV8XYZ",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAutomationActionsRunner(ctx *pulumi.Context, args *LookupAutomationActionsRunnerArgs, opts ...pulumi.InvokeOption) (*LookupAutomationActionsRunnerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAutomationActionsRunnerResult
	err := ctx.Invoke("pagerduty:index/getAutomationActionsRunner:getAutomationActionsRunner", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAutomationActionsRunner.
type LookupAutomationActionsRunnerArgs struct {
	// (Optional) The description of the runner.
	Description *string `pulumi:"description"`
	// The id of the automation actions runner in the PagerDuty API.
	Id string `pulumi:"id"`
	// (Optional) The last time runner has been seen. Represented as an ISO 8601 timestamp.
	LastSeen *string `pulumi:"lastSeen"`
	// (Optional) The base URI of the Runbook server to connect to. Applicable to `runbook` type runners only.
	RunbookBaseUri *string `pulumi:"runbookBaseUri"`
}

// A collection of values returned by getAutomationActionsRunner.
type LookupAutomationActionsRunnerResult struct {
	// The time runner was created. Represented as an ISO 8601 timestamp.
	CreationTime string `pulumi:"creationTime"`
	// (Optional) The description of the runner.
	Description string `pulumi:"description"`
	// The ID of the found runner.
	Id string `pulumi:"id"`
	// (Optional) The last time runner has been seen. Represented as an ISO 8601 timestamp.
	LastSeen string `pulumi:"lastSeen"`
	// The name of the found runner.
	Name string `pulumi:"name"`
	// (Optional) The base URI of the Runbook server to connect to. Applicable to `runbook` type runners only.
	RunbookBaseUri string `pulumi:"runbookBaseUri"`
	// The type of runner. Allowed values are `sidecar` and `runbook`.
	RunnerType string `pulumi:"runnerType"`
	// The type of object. The value returned will be `runner`.
	Type string `pulumi:"type"`
}

func LookupAutomationActionsRunnerOutput(ctx *pulumi.Context, args LookupAutomationActionsRunnerOutputArgs, opts ...pulumi.InvokeOption) LookupAutomationActionsRunnerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAutomationActionsRunnerResult, error) {
			args := v.(LookupAutomationActionsRunnerArgs)
			r, err := LookupAutomationActionsRunner(ctx, &args, opts...)
			var s LookupAutomationActionsRunnerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAutomationActionsRunnerResultOutput)
}

// A collection of arguments for invoking getAutomationActionsRunner.
type LookupAutomationActionsRunnerOutputArgs struct {
	// (Optional) The description of the runner.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The id of the automation actions runner in the PagerDuty API.
	Id pulumi.StringInput `pulumi:"id"`
	// (Optional) The last time runner has been seen. Represented as an ISO 8601 timestamp.
	LastSeen pulumi.StringPtrInput `pulumi:"lastSeen"`
	// (Optional) The base URI of the Runbook server to connect to. Applicable to `runbook` type runners only.
	RunbookBaseUri pulumi.StringPtrInput `pulumi:"runbookBaseUri"`
}

func (LookupAutomationActionsRunnerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAutomationActionsRunnerArgs)(nil)).Elem()
}

// A collection of values returned by getAutomationActionsRunner.
type LookupAutomationActionsRunnerResultOutput struct{ *pulumi.OutputState }

func (LookupAutomationActionsRunnerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAutomationActionsRunnerResult)(nil)).Elem()
}

func (o LookupAutomationActionsRunnerResultOutput) ToLookupAutomationActionsRunnerResultOutput() LookupAutomationActionsRunnerResultOutput {
	return o
}

func (o LookupAutomationActionsRunnerResultOutput) ToLookupAutomationActionsRunnerResultOutputWithContext(ctx context.Context) LookupAutomationActionsRunnerResultOutput {
	return o
}

// The time runner was created. Represented as an ISO 8601 timestamp.
func (o LookupAutomationActionsRunnerResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutomationActionsRunnerResult) string { return v.CreationTime }).(pulumi.StringOutput)
}

// (Optional) The description of the runner.
func (o LookupAutomationActionsRunnerResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutomationActionsRunnerResult) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the found runner.
func (o LookupAutomationActionsRunnerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutomationActionsRunnerResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Optional) The last time runner has been seen. Represented as an ISO 8601 timestamp.
func (o LookupAutomationActionsRunnerResultOutput) LastSeen() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutomationActionsRunnerResult) string { return v.LastSeen }).(pulumi.StringOutput)
}

// The name of the found runner.
func (o LookupAutomationActionsRunnerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutomationActionsRunnerResult) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional) The base URI of the Runbook server to connect to. Applicable to `runbook` type runners only.
func (o LookupAutomationActionsRunnerResultOutput) RunbookBaseUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutomationActionsRunnerResult) string { return v.RunbookBaseUri }).(pulumi.StringOutput)
}

// The type of runner. Allowed values are `sidecar` and `runbook`.
func (o LookupAutomationActionsRunnerResultOutput) RunnerType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutomationActionsRunnerResult) string { return v.RunnerType }).(pulumi.StringOutput)
}

// The type of object. The value returned will be `runner`.
func (o LookupAutomationActionsRunnerResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutomationActionsRunnerResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAutomationActionsRunnerResultOutput{})
}
