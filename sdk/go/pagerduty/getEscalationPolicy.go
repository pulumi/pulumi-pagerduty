// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pagerduty

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-pagerduty/sdk/v4/go/pagerduty/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information about a specific [escalation policy](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODEyNA-list-escalation-policies) that you can use for other PagerDuty resources.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-pagerduty/sdk/v4/go/pagerduty"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			test, err := pagerduty.LookupEscalationPolicy(ctx, &pagerduty.LookupEscalationPolicyArgs{
//				Name: "Engineering Escalation Policy",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = pagerduty.NewService(ctx, "test", &pagerduty.ServiceArgs{
//				Name:                   pulumi.String("My Web App"),
//				AutoResolveTimeout:     pulumi.String("14400"),
//				AcknowledgementTimeout: pulumi.String("600"),
//				EscalationPolicy:       pulumi.String(test.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupEscalationPolicy(ctx *pulumi.Context, args *LookupEscalationPolicyArgs, opts ...pulumi.InvokeOption) (*LookupEscalationPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEscalationPolicyResult
	err := ctx.Invoke("pagerduty:index/getEscalationPolicy:getEscalationPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEscalationPolicy.
type LookupEscalationPolicyArgs struct {
	// The name to use to find an escalation policy in the PagerDuty API.
	Name string `pulumi:"name"`
}

// A collection of values returned by getEscalationPolicy.
type LookupEscalationPolicyResult struct {
	// The description of the found escalation policy.
	Description string `pulumi:"description"`
	// The ID of the found escalation policy.
	Id string `pulumi:"id"`
	// The short name of the found escalation policy.
	Name string `pulumi:"name"`
	// The IDs of the teams associated with the found escalation policy.
	Teams []string `pulumi:"teams"`
}

func LookupEscalationPolicyOutput(ctx *pulumi.Context, args LookupEscalationPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupEscalationPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupEscalationPolicyResultOutput, error) {
			args := v.(LookupEscalationPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("pagerduty:index/getEscalationPolicy:getEscalationPolicy", args, LookupEscalationPolicyResultOutput{}, options).(LookupEscalationPolicyResultOutput), nil
		}).(LookupEscalationPolicyResultOutput)
}

// A collection of arguments for invoking getEscalationPolicy.
type LookupEscalationPolicyOutputArgs struct {
	// The name to use to find an escalation policy in the PagerDuty API.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupEscalationPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEscalationPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getEscalationPolicy.
type LookupEscalationPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupEscalationPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEscalationPolicyResult)(nil)).Elem()
}

func (o LookupEscalationPolicyResultOutput) ToLookupEscalationPolicyResultOutput() LookupEscalationPolicyResultOutput {
	return o
}

func (o LookupEscalationPolicyResultOutput) ToLookupEscalationPolicyResultOutputWithContext(ctx context.Context) LookupEscalationPolicyResultOutput {
	return o
}

// The description of the found escalation policy.
func (o LookupEscalationPolicyResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEscalationPolicyResult) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the found escalation policy.
func (o LookupEscalationPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEscalationPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// The short name of the found escalation policy.
func (o LookupEscalationPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEscalationPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

// The IDs of the teams associated with the found escalation policy.
func (o LookupEscalationPolicyResultOutput) Teams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupEscalationPolicyResult) []string { return v.Teams }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEscalationPolicyResultOutput{})
}
