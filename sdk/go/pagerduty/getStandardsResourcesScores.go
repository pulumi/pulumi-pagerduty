// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pagerduty

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-pagerduty/sdk/v4/go/pagerduty/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information about the [scores for the standards for
// many resources][1].
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-pagerduty/sdk/v4/go/pagerduty"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// foo, err := pagerduty.LookupService(ctx, &pagerduty.LookupServiceArgs{
// Name: "foo",
// }, nil);
// if err != nil {
// return err
// }
// bar, err := pagerduty.LookupService(ctx, &pagerduty.LookupServiceArgs{
// Name: "bar",
// }, nil);
// if err != nil {
// return err
// }
// baz, err := pagerduty.LookupService(ctx, &pagerduty.LookupServiceArgs{
// Name: "baz",
// }, nil);
// if err != nil {
// return err
// }
// _, err = pagerduty.GetStandardsResourcesScores(ctx, &pagerduty.GetStandardsResourcesScoresArgs{
// ResourceType: "technical_services",
// Ids: interface{}{
// foo.Id,
// bar.Id,
// baz.Id,
// },
// }, nil);
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
func GetStandardsResourcesScores(ctx *pulumi.Context, args *GetStandardsResourcesScoresArgs, opts ...pulumi.InvokeOption) (*GetStandardsResourcesScoresResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetStandardsResourcesScoresResult
	err := ctx.Invoke("pagerduty:index/getStandardsResourcesScores:getStandardsResourcesScores", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStandardsResourcesScores.
type GetStandardsResourcesScoresArgs struct {
	// List of identifiers of the resources to query.
	Ids []string `pulumi:"ids"`
	// Type of the object the standards are associated to. Allowed values are `technicalServices`.
	ResourceType string `pulumi:"resourceType"`
}

// A collection of values returned by getStandardsResourcesScores.
type GetStandardsResourcesScoresResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id  string   `pulumi:"id"`
	Ids []string `pulumi:"ids"`
	// Specifies the type of resource to which the standard applies.
	ResourceType string `pulumi:"resourceType"`
	// List of score results for each queried resource.
	Resources []GetStandardsResourcesScoresResource `pulumi:"resources"`
}

func GetStandardsResourcesScoresOutput(ctx *pulumi.Context, args GetStandardsResourcesScoresOutputArgs, opts ...pulumi.InvokeOption) GetStandardsResourcesScoresResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetStandardsResourcesScoresResultOutput, error) {
			args := v.(GetStandardsResourcesScoresArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("pagerduty:index/getStandardsResourcesScores:getStandardsResourcesScores", args, GetStandardsResourcesScoresResultOutput{}, options).(GetStandardsResourcesScoresResultOutput), nil
		}).(GetStandardsResourcesScoresResultOutput)
}

// A collection of arguments for invoking getStandardsResourcesScores.
type GetStandardsResourcesScoresOutputArgs struct {
	// List of identifiers of the resources to query.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// Type of the object the standards are associated to. Allowed values are `technicalServices`.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (GetStandardsResourcesScoresOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStandardsResourcesScoresArgs)(nil)).Elem()
}

// A collection of values returned by getStandardsResourcesScores.
type GetStandardsResourcesScoresResultOutput struct{ *pulumi.OutputState }

func (GetStandardsResourcesScoresResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStandardsResourcesScoresResult)(nil)).Elem()
}

func (o GetStandardsResourcesScoresResultOutput) ToGetStandardsResourcesScoresResultOutput() GetStandardsResourcesScoresResultOutput {
	return o
}

func (o GetStandardsResourcesScoresResultOutput) ToGetStandardsResourcesScoresResultOutputWithContext(ctx context.Context) GetStandardsResourcesScoresResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetStandardsResourcesScoresResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStandardsResourcesScoresResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetStandardsResourcesScoresResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStandardsResourcesScoresResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// Specifies the type of resource to which the standard applies.
func (o GetStandardsResourcesScoresResultOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetStandardsResourcesScoresResult) string { return v.ResourceType }).(pulumi.StringOutput)
}

// List of score results for each queried resource.
func (o GetStandardsResourcesScoresResultOutput) Resources() GetStandardsResourcesScoresResourceArrayOutput {
	return o.ApplyT(func(v GetStandardsResourcesScoresResult) []GetStandardsResourcesScoresResource { return v.Resources }).(GetStandardsResourcesScoresResourceArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetStandardsResourcesScoresResultOutput{})
}
