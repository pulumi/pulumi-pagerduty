// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pagerduty

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-pagerduty/sdk/v4/go/pagerduty/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An [incident type custom fields](https://developer.pagerduty.com/api-reference/423b6701f3f1b-create-a-custom-field-for-an-incident-type)
// are a feature which will allow customers to extend Incidents with their own
// custom data, to provide additional context and support features such as
// customized filtering, search and analytics. Custom Fields can be applied to
// different incident types. Child types will inherit custom fields from their
// parent types.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-pagerduty/sdk/v4/go/pagerduty"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			tmpJSON0, err := json.Marshal(5)
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			_, err = pagerduty.NewIncidentTypeCustomField(ctx, "alarm_time", &pagerduty.IncidentTypeCustomFieldArgs{
//				Name:         pulumi.String("alarm_time_minutes"),
//				DisplayName:  pulumi.String("Alarm Time"),
//				DataType:     pulumi.String("integer"),
//				FieldType:    pulumi.String("single_value"),
//				DefaultValue: pulumi.String(json0),
//				IncidentType: pulumi.String("incident_default"),
//			})
//			if err != nil {
//				return err
//			}
//			foo, err := pagerduty.LookupIncidentType(ctx, &pagerduty.LookupIncidentTypeArgs{
//				DisplayName: "Foo",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = pagerduty.NewIncidentTypeCustomField(ctx, "level", &pagerduty.IncidentTypeCustomFieldArgs{
//				Name:         pulumi.String("level"),
//				IncidentType: pulumi.String(foo.Id),
//				DisplayName:  pulumi.String("Level"),
//				DataType:     pulumi.String("string"),
//				FieldType:    pulumi.String("single_value_fixed"),
//				FieldOptions: pulumi.StringArray{
//					pulumi.String("Trace"),
//					pulumi.String("Debug"),
//					pulumi.String("Info"),
//					pulumi.String("Warn"),
//					pulumi.String("Error"),
//					pulumi.String("Fatal"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = pagerduty.NewIncidentTypeCustomField(ctx, "cs_impact", &pagerduty.IncidentTypeCustomFieldArgs{
//				Name:         pulumi.String("impact"),
//				IncidentType: pulumi.String(foo.Id),
//				DisplayName:  pulumi.String("Customer Impact"),
//				DataType:     pulumi.String("string"),
//				FieldType:    pulumi.String("multi_value"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Fields can be imported using the combination of `incident_type_id` and `field_id`, e.g.
//
// ```sh
// $ pulumi import pagerduty:index/incidentTypeCustomField:IncidentTypeCustomField cs_impact PT1234:PF1234
// ```
type IncidentTypeCustomField struct {
	pulumi.CustomResourceState

	// [Updating causes resource replacement] The type of the data of this custom field. Can be one of `string`, `integer`, `float`, `boolean`, `datetime`, or `url` when `dataType` is `singleValue`, otherwise must be `string`. Update
	DataType pulumi.StringOutput `pulumi:"dataType"`
	// The default value to set when new incidents are created. Always specified as a string.
	DefaultValue pulumi.StringPtrOutput `pulumi:"defaultValue"`
	// The description of the custom field.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The display name of the custom Type.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Whether the custom field is enabled. Defaults to true if not provided.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// The options for the custom field. Can only be applied to fields with a type of `singleValueFixed` or `multiValueFixed`.
	FieldOptions pulumi.StringArrayOutput `pulumi:"fieldOptions"`
	// [Updating causes resource replacement] The field type of the field. Must be one of `singleValue`, `singleValueFixed`, `multiValue`, or `multiValueFixed`.
	FieldType pulumi.StringPtrOutput `pulumi:"fieldType"`
	// [Updating causes resource replacement] The id of the incident type the custom field is associated with.
	IncidentType pulumi.StringOutput `pulumi:"incidentType"`
	// [Updating causes resource replacement] The name of the custom field.
	Name pulumi.StringOutput `pulumi:"name"`
	// The API show URL at which the object is accessible.
	Self pulumi.StringOutput `pulumi:"self"`
	// A short-form, server-generated string that provides succinct, important information about an object suitable for primary labeling of an entity in a client. In many cases, this will be identical to name, though it is not intended to be an identifier.
	Summary pulumi.StringOutput `pulumi:"summary"`
	Type    pulumi.StringOutput `pulumi:"type"`
}

// NewIncidentTypeCustomField registers a new resource with the given unique name, arguments, and options.
func NewIncidentTypeCustomField(ctx *pulumi.Context,
	name string, args *IncidentTypeCustomFieldArgs, opts ...pulumi.ResourceOption) (*IncidentTypeCustomField, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataType == nil {
		return nil, errors.New("invalid value for required argument 'DataType'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.IncidentType == nil {
		return nil, errors.New("invalid value for required argument 'IncidentType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IncidentTypeCustomField
	err := ctx.RegisterResource("pagerduty:index/incidentTypeCustomField:IncidentTypeCustomField", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIncidentTypeCustomField gets an existing IncidentTypeCustomField resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIncidentTypeCustomField(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IncidentTypeCustomFieldState, opts ...pulumi.ResourceOption) (*IncidentTypeCustomField, error) {
	var resource IncidentTypeCustomField
	err := ctx.ReadResource("pagerduty:index/incidentTypeCustomField:IncidentTypeCustomField", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IncidentTypeCustomField resources.
type incidentTypeCustomFieldState struct {
	// [Updating causes resource replacement] The type of the data of this custom field. Can be one of `string`, `integer`, `float`, `boolean`, `datetime`, or `url` when `dataType` is `singleValue`, otherwise must be `string`. Update
	DataType *string `pulumi:"dataType"`
	// The default value to set when new incidents are created. Always specified as a string.
	DefaultValue *string `pulumi:"defaultValue"`
	// The description of the custom field.
	Description *string `pulumi:"description"`
	// The display name of the custom Type.
	DisplayName *string `pulumi:"displayName"`
	// Whether the custom field is enabled. Defaults to true if not provided.
	Enabled *bool `pulumi:"enabled"`
	// The options for the custom field. Can only be applied to fields with a type of `singleValueFixed` or `multiValueFixed`.
	FieldOptions []string `pulumi:"fieldOptions"`
	// [Updating causes resource replacement] The field type of the field. Must be one of `singleValue`, `singleValueFixed`, `multiValue`, or `multiValueFixed`.
	FieldType *string `pulumi:"fieldType"`
	// [Updating causes resource replacement] The id of the incident type the custom field is associated with.
	IncidentType *string `pulumi:"incidentType"`
	// [Updating causes resource replacement] The name of the custom field.
	Name *string `pulumi:"name"`
	// The API show URL at which the object is accessible.
	Self *string `pulumi:"self"`
	// A short-form, server-generated string that provides succinct, important information about an object suitable for primary labeling of an entity in a client. In many cases, this will be identical to name, though it is not intended to be an identifier.
	Summary *string `pulumi:"summary"`
	Type    *string `pulumi:"type"`
}

type IncidentTypeCustomFieldState struct {
	// [Updating causes resource replacement] The type of the data of this custom field. Can be one of `string`, `integer`, `float`, `boolean`, `datetime`, or `url` when `dataType` is `singleValue`, otherwise must be `string`. Update
	DataType pulumi.StringPtrInput
	// The default value to set when new incidents are created. Always specified as a string.
	DefaultValue pulumi.StringPtrInput
	// The description of the custom field.
	Description pulumi.StringPtrInput
	// The display name of the custom Type.
	DisplayName pulumi.StringPtrInput
	// Whether the custom field is enabled. Defaults to true if not provided.
	Enabled pulumi.BoolPtrInput
	// The options for the custom field. Can only be applied to fields with a type of `singleValueFixed` or `multiValueFixed`.
	FieldOptions pulumi.StringArrayInput
	// [Updating causes resource replacement] The field type of the field. Must be one of `singleValue`, `singleValueFixed`, `multiValue`, or `multiValueFixed`.
	FieldType pulumi.StringPtrInput
	// [Updating causes resource replacement] The id of the incident type the custom field is associated with.
	IncidentType pulumi.StringPtrInput
	// [Updating causes resource replacement] The name of the custom field.
	Name pulumi.StringPtrInput
	// The API show URL at which the object is accessible.
	Self pulumi.StringPtrInput
	// A short-form, server-generated string that provides succinct, important information about an object suitable for primary labeling of an entity in a client. In many cases, this will be identical to name, though it is not intended to be an identifier.
	Summary pulumi.StringPtrInput
	Type    pulumi.StringPtrInput
}

func (IncidentTypeCustomFieldState) ElementType() reflect.Type {
	return reflect.TypeOf((*incidentTypeCustomFieldState)(nil)).Elem()
}

type incidentTypeCustomFieldArgs struct {
	// [Updating causes resource replacement] The type of the data of this custom field. Can be one of `string`, `integer`, `float`, `boolean`, `datetime`, or `url` when `dataType` is `singleValue`, otherwise must be `string`. Update
	DataType string `pulumi:"dataType"`
	// The default value to set when new incidents are created. Always specified as a string.
	DefaultValue *string `pulumi:"defaultValue"`
	// The description of the custom field.
	Description *string `pulumi:"description"`
	// The display name of the custom Type.
	DisplayName string `pulumi:"displayName"`
	// Whether the custom field is enabled. Defaults to true if not provided.
	Enabled *bool `pulumi:"enabled"`
	// The options for the custom field. Can only be applied to fields with a type of `singleValueFixed` or `multiValueFixed`.
	FieldOptions []string `pulumi:"fieldOptions"`
	// [Updating causes resource replacement] The field type of the field. Must be one of `singleValue`, `singleValueFixed`, `multiValue`, or `multiValueFixed`.
	FieldType *string `pulumi:"fieldType"`
	// [Updating causes resource replacement] The id of the incident type the custom field is associated with.
	IncidentType string `pulumi:"incidentType"`
	// [Updating causes resource replacement] The name of the custom field.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a IncidentTypeCustomField resource.
type IncidentTypeCustomFieldArgs struct {
	// [Updating causes resource replacement] The type of the data of this custom field. Can be one of `string`, `integer`, `float`, `boolean`, `datetime`, or `url` when `dataType` is `singleValue`, otherwise must be `string`. Update
	DataType pulumi.StringInput
	// The default value to set when new incidents are created. Always specified as a string.
	DefaultValue pulumi.StringPtrInput
	// The description of the custom field.
	Description pulumi.StringPtrInput
	// The display name of the custom Type.
	DisplayName pulumi.StringInput
	// Whether the custom field is enabled. Defaults to true if not provided.
	Enabled pulumi.BoolPtrInput
	// The options for the custom field. Can only be applied to fields with a type of `singleValueFixed` or `multiValueFixed`.
	FieldOptions pulumi.StringArrayInput
	// [Updating causes resource replacement] The field type of the field. Must be one of `singleValue`, `singleValueFixed`, `multiValue`, or `multiValueFixed`.
	FieldType pulumi.StringPtrInput
	// [Updating causes resource replacement] The id of the incident type the custom field is associated with.
	IncidentType pulumi.StringInput
	// [Updating causes resource replacement] The name of the custom field.
	Name pulumi.StringPtrInput
}

func (IncidentTypeCustomFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*incidentTypeCustomFieldArgs)(nil)).Elem()
}

type IncidentTypeCustomFieldInput interface {
	pulumi.Input

	ToIncidentTypeCustomFieldOutput() IncidentTypeCustomFieldOutput
	ToIncidentTypeCustomFieldOutputWithContext(ctx context.Context) IncidentTypeCustomFieldOutput
}

func (*IncidentTypeCustomField) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentTypeCustomField)(nil)).Elem()
}

func (i *IncidentTypeCustomField) ToIncidentTypeCustomFieldOutput() IncidentTypeCustomFieldOutput {
	return i.ToIncidentTypeCustomFieldOutputWithContext(context.Background())
}

func (i *IncidentTypeCustomField) ToIncidentTypeCustomFieldOutputWithContext(ctx context.Context) IncidentTypeCustomFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentTypeCustomFieldOutput)
}

// IncidentTypeCustomFieldArrayInput is an input type that accepts IncidentTypeCustomFieldArray and IncidentTypeCustomFieldArrayOutput values.
// You can construct a concrete instance of `IncidentTypeCustomFieldArrayInput` via:
//
//	IncidentTypeCustomFieldArray{ IncidentTypeCustomFieldArgs{...} }
type IncidentTypeCustomFieldArrayInput interface {
	pulumi.Input

	ToIncidentTypeCustomFieldArrayOutput() IncidentTypeCustomFieldArrayOutput
	ToIncidentTypeCustomFieldArrayOutputWithContext(context.Context) IncidentTypeCustomFieldArrayOutput
}

type IncidentTypeCustomFieldArray []IncidentTypeCustomFieldInput

func (IncidentTypeCustomFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IncidentTypeCustomField)(nil)).Elem()
}

func (i IncidentTypeCustomFieldArray) ToIncidentTypeCustomFieldArrayOutput() IncidentTypeCustomFieldArrayOutput {
	return i.ToIncidentTypeCustomFieldArrayOutputWithContext(context.Background())
}

func (i IncidentTypeCustomFieldArray) ToIncidentTypeCustomFieldArrayOutputWithContext(ctx context.Context) IncidentTypeCustomFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentTypeCustomFieldArrayOutput)
}

// IncidentTypeCustomFieldMapInput is an input type that accepts IncidentTypeCustomFieldMap and IncidentTypeCustomFieldMapOutput values.
// You can construct a concrete instance of `IncidentTypeCustomFieldMapInput` via:
//
//	IncidentTypeCustomFieldMap{ "key": IncidentTypeCustomFieldArgs{...} }
type IncidentTypeCustomFieldMapInput interface {
	pulumi.Input

	ToIncidentTypeCustomFieldMapOutput() IncidentTypeCustomFieldMapOutput
	ToIncidentTypeCustomFieldMapOutputWithContext(context.Context) IncidentTypeCustomFieldMapOutput
}

type IncidentTypeCustomFieldMap map[string]IncidentTypeCustomFieldInput

func (IncidentTypeCustomFieldMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IncidentTypeCustomField)(nil)).Elem()
}

func (i IncidentTypeCustomFieldMap) ToIncidentTypeCustomFieldMapOutput() IncidentTypeCustomFieldMapOutput {
	return i.ToIncidentTypeCustomFieldMapOutputWithContext(context.Background())
}

func (i IncidentTypeCustomFieldMap) ToIncidentTypeCustomFieldMapOutputWithContext(ctx context.Context) IncidentTypeCustomFieldMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentTypeCustomFieldMapOutput)
}

type IncidentTypeCustomFieldOutput struct{ *pulumi.OutputState }

func (IncidentTypeCustomFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentTypeCustomField)(nil)).Elem()
}

func (o IncidentTypeCustomFieldOutput) ToIncidentTypeCustomFieldOutput() IncidentTypeCustomFieldOutput {
	return o
}

func (o IncidentTypeCustomFieldOutput) ToIncidentTypeCustomFieldOutputWithContext(ctx context.Context) IncidentTypeCustomFieldOutput {
	return o
}

// [Updating causes resource replacement] The type of the data of this custom field. Can be one of `string`, `integer`, `float`, `boolean`, `datetime`, or `url` when `dataType` is `singleValue`, otherwise must be `string`. Update
func (o IncidentTypeCustomFieldOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v *IncidentTypeCustomField) pulumi.StringOutput { return v.DataType }).(pulumi.StringOutput)
}

// The default value to set when new incidents are created. Always specified as a string.
func (o IncidentTypeCustomFieldOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentTypeCustomField) pulumi.StringPtrOutput { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// The description of the custom field.
func (o IncidentTypeCustomFieldOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentTypeCustomField) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name of the custom Type.
func (o IncidentTypeCustomFieldOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *IncidentTypeCustomField) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Whether the custom field is enabled. Defaults to true if not provided.
func (o IncidentTypeCustomFieldOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *IncidentTypeCustomField) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// The options for the custom field. Can only be applied to fields with a type of `singleValueFixed` or `multiValueFixed`.
func (o IncidentTypeCustomFieldOutput) FieldOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IncidentTypeCustomField) pulumi.StringArrayOutput { return v.FieldOptions }).(pulumi.StringArrayOutput)
}

// [Updating causes resource replacement] The field type of the field. Must be one of `singleValue`, `singleValueFixed`, `multiValue`, or `multiValueFixed`.
func (o IncidentTypeCustomFieldOutput) FieldType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentTypeCustomField) pulumi.StringPtrOutput { return v.FieldType }).(pulumi.StringPtrOutput)
}

// [Updating causes resource replacement] The id of the incident type the custom field is associated with.
func (o IncidentTypeCustomFieldOutput) IncidentType() pulumi.StringOutput {
	return o.ApplyT(func(v *IncidentTypeCustomField) pulumi.StringOutput { return v.IncidentType }).(pulumi.StringOutput)
}

// [Updating causes resource replacement] The name of the custom field.
func (o IncidentTypeCustomFieldOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IncidentTypeCustomField) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The API show URL at which the object is accessible.
func (o IncidentTypeCustomFieldOutput) Self() pulumi.StringOutput {
	return o.ApplyT(func(v *IncidentTypeCustomField) pulumi.StringOutput { return v.Self }).(pulumi.StringOutput)
}

// A short-form, server-generated string that provides succinct, important information about an object suitable for primary labeling of an entity in a client. In many cases, this will be identical to name, though it is not intended to be an identifier.
func (o IncidentTypeCustomFieldOutput) Summary() pulumi.StringOutput {
	return o.ApplyT(func(v *IncidentTypeCustomField) pulumi.StringOutput { return v.Summary }).(pulumi.StringOutput)
}

func (o IncidentTypeCustomFieldOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *IncidentTypeCustomField) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type IncidentTypeCustomFieldArrayOutput struct{ *pulumi.OutputState }

func (IncidentTypeCustomFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IncidentTypeCustomField)(nil)).Elem()
}

func (o IncidentTypeCustomFieldArrayOutput) ToIncidentTypeCustomFieldArrayOutput() IncidentTypeCustomFieldArrayOutput {
	return o
}

func (o IncidentTypeCustomFieldArrayOutput) ToIncidentTypeCustomFieldArrayOutputWithContext(ctx context.Context) IncidentTypeCustomFieldArrayOutput {
	return o
}

func (o IncidentTypeCustomFieldArrayOutput) Index(i pulumi.IntInput) IncidentTypeCustomFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IncidentTypeCustomField {
		return vs[0].([]*IncidentTypeCustomField)[vs[1].(int)]
	}).(IncidentTypeCustomFieldOutput)
}

type IncidentTypeCustomFieldMapOutput struct{ *pulumi.OutputState }

func (IncidentTypeCustomFieldMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IncidentTypeCustomField)(nil)).Elem()
}

func (o IncidentTypeCustomFieldMapOutput) ToIncidentTypeCustomFieldMapOutput() IncidentTypeCustomFieldMapOutput {
	return o
}

func (o IncidentTypeCustomFieldMapOutput) ToIncidentTypeCustomFieldMapOutputWithContext(ctx context.Context) IncidentTypeCustomFieldMapOutput {
	return o
}

func (o IncidentTypeCustomFieldMapOutput) MapIndex(k pulumi.StringInput) IncidentTypeCustomFieldOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IncidentTypeCustomField {
		return vs[0].(map[string]*IncidentTypeCustomField)[vs[1].(string)]
	}).(IncidentTypeCustomFieldOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IncidentTypeCustomFieldInput)(nil)).Elem(), &IncidentTypeCustomField{})
	pulumi.RegisterInputType(reflect.TypeOf((*IncidentTypeCustomFieldArrayInput)(nil)).Elem(), IncidentTypeCustomFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IncidentTypeCustomFieldMapInput)(nil)).Elem(), IncidentTypeCustomFieldMap{})
	pulumi.RegisterOutputType(IncidentTypeCustomFieldOutput{})
	pulumi.RegisterOutputType(IncidentTypeCustomFieldArrayOutput{})
	pulumi.RegisterOutputType(IncidentTypeCustomFieldMapOutput{})
}
