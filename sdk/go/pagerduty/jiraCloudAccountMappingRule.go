// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pagerduty

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-pagerduty/sdk/v4/go/pagerduty/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An Jira Cloud's account mapping [rule](https://developer.pagerduty.com/api-reference/85dc30ba966a6-create-a-rule)
// configures the bidirectional synchronization between Jira issues and PagerDuty
// incidents.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-pagerduty/sdk/v4/go/pagerduty"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := pagerduty.LookupEscalationPolicy(ctx, &pagerduty.LookupEscalationPolicyArgs{
//				Name: "Default",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			p1, err := pagerduty.GetPriority(ctx, &pagerduty.GetPriorityArgs{
//				Name: "P1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			p2, err := pagerduty.GetPriority(ctx, &pagerduty.GetPriorityArgs{
//				Name: "P2",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			p3, err := pagerduty.GetPriority(ctx, &pagerduty.GetPriorityArgs{
//				Name: "P3",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			foo, err := pagerduty.NewService(ctx, "foo", &pagerduty.ServiceArgs{
//				Name:             pulumi.String("My Web App"),
//				EscalationPolicy: pulumi.String(_default.Id),
//			})
//			if err != nil {
//				return err
//			}
//			fooUser, err := pagerduty.NewUser(ctx, "foo", &pagerduty.UserArgs{
//				Name:  pulumi.String("Earline Greenholt"),
//				Email: pulumi.String("125.greenholt.earline@graham.name"),
//			})
//			if err != nil {
//				return err
//			}
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"displayName": "Sec Level 1",
//				"id":          "10000",
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			_, err = pagerduty.NewJiraCloudAccountMappingRule(ctx, "foo", &pagerduty.JiraCloudAccountMappingRuleArgs{
//				Name:           pulumi.String("Integration with My Web App"),
//				AccountMapping: pulumi.String("PLBP09X"),
//				Config: pagerduty.JiraCloudAccountMappingRuleConfigArgs{
//					map[string]interface{}{
//						"service": foo.ID(),
//						"jira": []map[string]interface{}{
//							map[string]interface{}{
//								"autocreateJql":                "priority = Highest",
//								"createIssueOnIncidentTrigger": true,
//								"customFields": []interface{}{
//									map[string]interface{}{
//										"sourceIncidentField":  "incident_description",
//										"targetIssueField":     "description",
//										"targetIssueFieldName": "Description",
//										"type":                 "attribute",
//									},
//									map[string]interface{}{
//										"targetIssueField":     "security",
//										"targetIssueFieldName": "Security Level",
//										"type":                 "jira_value",
//										"value":                json0,
//									},
//								},
//								"issueType": []map[string]interface{}{
//									map[string]interface{}{
//										"id":   "10001",
//										"name": "Incident",
//									},
//								},
//								"priorities": []map[string]interface{}{
//									map[string]interface{}{
//										"jiraId":      "1",
//										"pagerdutyId": p1.Id,
//									},
//									map[string]interface{}{
//										"jiraId":      "2",
//										"pagerdutyId": p2.Id,
//									},
//									map[string]interface{}{
//										"jiraId":      "3",
//										"pagerdutyId": p3.Id,
//									},
//								},
//								"project": []map[string]interface{}{
//									map[string]interface{}{
//										"id":   "10100",
//										"key":  "ITS",
//										"name": "IT Support",
//									},
//								},
//								"statusMapping": []map[string]interface{}{
//									map[string]interface{}{
//										"acknowledged": []map[string]interface{}{
//											map[string]interface{}{
//												"id":   "2",
//												"name": "In Progress",
//											},
//										},
//										"resolved": []map[string]interface{}{
//											map[string]interface{}{
//												"id":   "3",
//												"name": "Resolved",
//											},
//										},
//										"triggered": []map[string]interface{}{
//											map[string]interface{}{
//												"id":   "1",
//												"name": "Open",
//											},
//										},
//									},
//								},
//								"syncNotesUser": fooUser.ID(),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Jira Cloud account mapping rules can be imported using the `account_mapping_id` and `rule_id`, e.g.
//
// ```sh
// $ pulumi import pagerduty:index/jiraCloudAccountMappingRule:JiraCloudAccountMappingRule main PLBP09X:PLB09Z
// ```
type JiraCloudAccountMappingRule struct {
	pulumi.CustomResourceState

	// [Updating can cause a resource replacement] The account mapping this rule belongs to.
	AccountMapping pulumi.StringOutput `pulumi:"accountMapping"`
	// If auto-creation using JQL is disabled, this field provides the reason for the disablement.
	AutocreateJqlDisabledReason pulumi.StringOutput `pulumi:"autocreateJqlDisabledReason"`
	// The timestamp until which the auto-creation using JQL feature is disabled.
	AutocreateJqlDisabledUntil pulumi.StringOutput `pulumi:"autocreateJqlDisabledUntil"`
	// Configuration for bidirectional synchronization between Jira issues and PagerDuty incidents.
	Config JiraCloudAccountMappingRuleConfigPtrOutput `pulumi:"config"`
	// Indicates if the rule is enabled. Defaults to `true`.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// The name of the rule.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewJiraCloudAccountMappingRule registers a new resource with the given unique name, arguments, and options.
func NewJiraCloudAccountMappingRule(ctx *pulumi.Context,
	name string, args *JiraCloudAccountMappingRuleArgs, opts ...pulumi.ResourceOption) (*JiraCloudAccountMappingRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountMapping == nil {
		return nil, errors.New("invalid value for required argument 'AccountMapping'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource JiraCloudAccountMappingRule
	err := ctx.RegisterResource("pagerduty:index/jiraCloudAccountMappingRule:JiraCloudAccountMappingRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJiraCloudAccountMappingRule gets an existing JiraCloudAccountMappingRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJiraCloudAccountMappingRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JiraCloudAccountMappingRuleState, opts ...pulumi.ResourceOption) (*JiraCloudAccountMappingRule, error) {
	var resource JiraCloudAccountMappingRule
	err := ctx.ReadResource("pagerduty:index/jiraCloudAccountMappingRule:JiraCloudAccountMappingRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering JiraCloudAccountMappingRule resources.
type jiraCloudAccountMappingRuleState struct {
	// [Updating can cause a resource replacement] The account mapping this rule belongs to.
	AccountMapping *string `pulumi:"accountMapping"`
	// If auto-creation using JQL is disabled, this field provides the reason for the disablement.
	AutocreateJqlDisabledReason *string `pulumi:"autocreateJqlDisabledReason"`
	// The timestamp until which the auto-creation using JQL feature is disabled.
	AutocreateJqlDisabledUntil *string `pulumi:"autocreateJqlDisabledUntil"`
	// Configuration for bidirectional synchronization between Jira issues and PagerDuty incidents.
	Config *JiraCloudAccountMappingRuleConfig `pulumi:"config"`
	// Indicates if the rule is enabled. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// The name of the rule.
	Name *string `pulumi:"name"`
}

type JiraCloudAccountMappingRuleState struct {
	// [Updating can cause a resource replacement] The account mapping this rule belongs to.
	AccountMapping pulumi.StringPtrInput
	// If auto-creation using JQL is disabled, this field provides the reason for the disablement.
	AutocreateJqlDisabledReason pulumi.StringPtrInput
	// The timestamp until which the auto-creation using JQL feature is disabled.
	AutocreateJqlDisabledUntil pulumi.StringPtrInput
	// Configuration for bidirectional synchronization between Jira issues and PagerDuty incidents.
	Config JiraCloudAccountMappingRuleConfigPtrInput
	// Indicates if the rule is enabled. Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// The name of the rule.
	Name pulumi.StringPtrInput
}

func (JiraCloudAccountMappingRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*jiraCloudAccountMappingRuleState)(nil)).Elem()
}

type jiraCloudAccountMappingRuleArgs struct {
	// [Updating can cause a resource replacement] The account mapping this rule belongs to.
	AccountMapping string `pulumi:"accountMapping"`
	// Configuration for bidirectional synchronization between Jira issues and PagerDuty incidents.
	Config *JiraCloudAccountMappingRuleConfig `pulumi:"config"`
	// Indicates if the rule is enabled. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// The name of the rule.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a JiraCloudAccountMappingRule resource.
type JiraCloudAccountMappingRuleArgs struct {
	// [Updating can cause a resource replacement] The account mapping this rule belongs to.
	AccountMapping pulumi.StringInput
	// Configuration for bidirectional synchronization between Jira issues and PagerDuty incidents.
	Config JiraCloudAccountMappingRuleConfigPtrInput
	// Indicates if the rule is enabled. Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// The name of the rule.
	Name pulumi.StringPtrInput
}

func (JiraCloudAccountMappingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jiraCloudAccountMappingRuleArgs)(nil)).Elem()
}

type JiraCloudAccountMappingRuleInput interface {
	pulumi.Input

	ToJiraCloudAccountMappingRuleOutput() JiraCloudAccountMappingRuleOutput
	ToJiraCloudAccountMappingRuleOutputWithContext(ctx context.Context) JiraCloudAccountMappingRuleOutput
}

func (*JiraCloudAccountMappingRule) ElementType() reflect.Type {
	return reflect.TypeOf((**JiraCloudAccountMappingRule)(nil)).Elem()
}

func (i *JiraCloudAccountMappingRule) ToJiraCloudAccountMappingRuleOutput() JiraCloudAccountMappingRuleOutput {
	return i.ToJiraCloudAccountMappingRuleOutputWithContext(context.Background())
}

func (i *JiraCloudAccountMappingRule) ToJiraCloudAccountMappingRuleOutputWithContext(ctx context.Context) JiraCloudAccountMappingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JiraCloudAccountMappingRuleOutput)
}

// JiraCloudAccountMappingRuleArrayInput is an input type that accepts JiraCloudAccountMappingRuleArray and JiraCloudAccountMappingRuleArrayOutput values.
// You can construct a concrete instance of `JiraCloudAccountMappingRuleArrayInput` via:
//
//	JiraCloudAccountMappingRuleArray{ JiraCloudAccountMappingRuleArgs{...} }
type JiraCloudAccountMappingRuleArrayInput interface {
	pulumi.Input

	ToJiraCloudAccountMappingRuleArrayOutput() JiraCloudAccountMappingRuleArrayOutput
	ToJiraCloudAccountMappingRuleArrayOutputWithContext(context.Context) JiraCloudAccountMappingRuleArrayOutput
}

type JiraCloudAccountMappingRuleArray []JiraCloudAccountMappingRuleInput

func (JiraCloudAccountMappingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*JiraCloudAccountMappingRule)(nil)).Elem()
}

func (i JiraCloudAccountMappingRuleArray) ToJiraCloudAccountMappingRuleArrayOutput() JiraCloudAccountMappingRuleArrayOutput {
	return i.ToJiraCloudAccountMappingRuleArrayOutputWithContext(context.Background())
}

func (i JiraCloudAccountMappingRuleArray) ToJiraCloudAccountMappingRuleArrayOutputWithContext(ctx context.Context) JiraCloudAccountMappingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JiraCloudAccountMappingRuleArrayOutput)
}

// JiraCloudAccountMappingRuleMapInput is an input type that accepts JiraCloudAccountMappingRuleMap and JiraCloudAccountMappingRuleMapOutput values.
// You can construct a concrete instance of `JiraCloudAccountMappingRuleMapInput` via:
//
//	JiraCloudAccountMappingRuleMap{ "key": JiraCloudAccountMappingRuleArgs{...} }
type JiraCloudAccountMappingRuleMapInput interface {
	pulumi.Input

	ToJiraCloudAccountMappingRuleMapOutput() JiraCloudAccountMappingRuleMapOutput
	ToJiraCloudAccountMappingRuleMapOutputWithContext(context.Context) JiraCloudAccountMappingRuleMapOutput
}

type JiraCloudAccountMappingRuleMap map[string]JiraCloudAccountMappingRuleInput

func (JiraCloudAccountMappingRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*JiraCloudAccountMappingRule)(nil)).Elem()
}

func (i JiraCloudAccountMappingRuleMap) ToJiraCloudAccountMappingRuleMapOutput() JiraCloudAccountMappingRuleMapOutput {
	return i.ToJiraCloudAccountMappingRuleMapOutputWithContext(context.Background())
}

func (i JiraCloudAccountMappingRuleMap) ToJiraCloudAccountMappingRuleMapOutputWithContext(ctx context.Context) JiraCloudAccountMappingRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JiraCloudAccountMappingRuleMapOutput)
}

type JiraCloudAccountMappingRuleOutput struct{ *pulumi.OutputState }

func (JiraCloudAccountMappingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JiraCloudAccountMappingRule)(nil)).Elem()
}

func (o JiraCloudAccountMappingRuleOutput) ToJiraCloudAccountMappingRuleOutput() JiraCloudAccountMappingRuleOutput {
	return o
}

func (o JiraCloudAccountMappingRuleOutput) ToJiraCloudAccountMappingRuleOutputWithContext(ctx context.Context) JiraCloudAccountMappingRuleOutput {
	return o
}

// [Updating can cause a resource replacement] The account mapping this rule belongs to.
func (o JiraCloudAccountMappingRuleOutput) AccountMapping() pulumi.StringOutput {
	return o.ApplyT(func(v *JiraCloudAccountMappingRule) pulumi.StringOutput { return v.AccountMapping }).(pulumi.StringOutput)
}

// If auto-creation using JQL is disabled, this field provides the reason for the disablement.
func (o JiraCloudAccountMappingRuleOutput) AutocreateJqlDisabledReason() pulumi.StringOutput {
	return o.ApplyT(func(v *JiraCloudAccountMappingRule) pulumi.StringOutput { return v.AutocreateJqlDisabledReason }).(pulumi.StringOutput)
}

// The timestamp until which the auto-creation using JQL feature is disabled.
func (o JiraCloudAccountMappingRuleOutput) AutocreateJqlDisabledUntil() pulumi.StringOutput {
	return o.ApplyT(func(v *JiraCloudAccountMappingRule) pulumi.StringOutput { return v.AutocreateJqlDisabledUntil }).(pulumi.StringOutput)
}

// Configuration for bidirectional synchronization between Jira issues and PagerDuty incidents.
func (o JiraCloudAccountMappingRuleOutput) Config() JiraCloudAccountMappingRuleConfigPtrOutput {
	return o.ApplyT(func(v *JiraCloudAccountMappingRule) JiraCloudAccountMappingRuleConfigPtrOutput { return v.Config }).(JiraCloudAccountMappingRuleConfigPtrOutput)
}

// Indicates if the rule is enabled. Defaults to `true`.
func (o JiraCloudAccountMappingRuleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *JiraCloudAccountMappingRule) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// The name of the rule.
func (o JiraCloudAccountMappingRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *JiraCloudAccountMappingRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type JiraCloudAccountMappingRuleArrayOutput struct{ *pulumi.OutputState }

func (JiraCloudAccountMappingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*JiraCloudAccountMappingRule)(nil)).Elem()
}

func (o JiraCloudAccountMappingRuleArrayOutput) ToJiraCloudAccountMappingRuleArrayOutput() JiraCloudAccountMappingRuleArrayOutput {
	return o
}

func (o JiraCloudAccountMappingRuleArrayOutput) ToJiraCloudAccountMappingRuleArrayOutputWithContext(ctx context.Context) JiraCloudAccountMappingRuleArrayOutput {
	return o
}

func (o JiraCloudAccountMappingRuleArrayOutput) Index(i pulumi.IntInput) JiraCloudAccountMappingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *JiraCloudAccountMappingRule {
		return vs[0].([]*JiraCloudAccountMappingRule)[vs[1].(int)]
	}).(JiraCloudAccountMappingRuleOutput)
}

type JiraCloudAccountMappingRuleMapOutput struct{ *pulumi.OutputState }

func (JiraCloudAccountMappingRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*JiraCloudAccountMappingRule)(nil)).Elem()
}

func (o JiraCloudAccountMappingRuleMapOutput) ToJiraCloudAccountMappingRuleMapOutput() JiraCloudAccountMappingRuleMapOutput {
	return o
}

func (o JiraCloudAccountMappingRuleMapOutput) ToJiraCloudAccountMappingRuleMapOutputWithContext(ctx context.Context) JiraCloudAccountMappingRuleMapOutput {
	return o
}

func (o JiraCloudAccountMappingRuleMapOutput) MapIndex(k pulumi.StringInput) JiraCloudAccountMappingRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *JiraCloudAccountMappingRule {
		return vs[0].(map[string]*JiraCloudAccountMappingRule)[vs[1].(string)]
	}).(JiraCloudAccountMappingRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*JiraCloudAccountMappingRuleInput)(nil)).Elem(), &JiraCloudAccountMappingRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*JiraCloudAccountMappingRuleArrayInput)(nil)).Elem(), JiraCloudAccountMappingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JiraCloudAccountMappingRuleMapInput)(nil)).Elem(), JiraCloudAccountMappingRuleMap{})
	pulumi.RegisterOutputType(JiraCloudAccountMappingRuleOutput{})
	pulumi.RegisterOutputType(JiraCloudAccountMappingRuleArrayOutput{})
	pulumi.RegisterOutputType(JiraCloudAccountMappingRuleMapOutput{})
}
