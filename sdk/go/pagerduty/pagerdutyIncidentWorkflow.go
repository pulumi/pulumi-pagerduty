// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pagerduty

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An [Incident Workflow](https://support.pagerduty.com/docs/incident-workflows) is a series of steps which can be executed on an incident.
//
// > The Incident Workflows feature is currently available in Early Access.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-pagerduty/sdk/v3/go/pagerduty"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := pagerduty.NewPagerdutyIncidentWorkflow(ctx, "myFirstWorkflow", &pagerduty.PagerdutyIncidentWorkflowArgs{
//				Description: pulumi.String("This Incident Workflow is an example"),
//				Steps: pagerduty.PagerdutyIncidentWorkflowStepArray{
//					&pagerduty.PagerdutyIncidentWorkflowStepArgs{
//						Action: pulumi.String("pagerduty.com:incident-workflows:send-status-update:1"),
//						Inputs: pagerduty.PagerdutyIncidentWorkflowStepInputTypeArray{
//							&pagerduty.PagerdutyIncidentWorkflowStepInputTypeArgs{
//								Name:  pulumi.String("Message"),
//								Value: pulumi.String("Example status message sent on {{current_date}}"),
//							},
//						},
//						Name: pulumi.String("Send Status Update"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Incident workflows can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import pagerduty:index/pagerdutyIncidentWorkflow:PagerdutyIncidentWorkflow major_incident_workflow PLBP09X
//
// ```
type PagerdutyIncidentWorkflow struct {
	pulumi.CustomResourceState

	// The description of the workflow.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of the workflow.
	Name pulumi.StringOutput `pulumi:"name"`
	// The steps in the workflow.
	Steps PagerdutyIncidentWorkflowStepArrayOutput `pulumi:"steps"`
	// A team ID. If specified then workflow edit permissions will be scoped to members of this team.
	Team pulumi.StringPtrOutput `pulumi:"team"`
}

// NewPagerdutyIncidentWorkflow registers a new resource with the given unique name, arguments, and options.
func NewPagerdutyIncidentWorkflow(ctx *pulumi.Context,
	name string, args *PagerdutyIncidentWorkflowArgs, opts ...pulumi.ResourceOption) (*PagerdutyIncidentWorkflow, error) {
	if args == nil {
		args = &PagerdutyIncidentWorkflowArgs{}
	}

	var resource PagerdutyIncidentWorkflow
	err := ctx.RegisterResource("pagerduty:index/pagerdutyIncidentWorkflow:PagerdutyIncidentWorkflow", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPagerdutyIncidentWorkflow gets an existing PagerdutyIncidentWorkflow resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPagerdutyIncidentWorkflow(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PagerdutyIncidentWorkflowState, opts ...pulumi.ResourceOption) (*PagerdutyIncidentWorkflow, error) {
	var resource PagerdutyIncidentWorkflow
	err := ctx.ReadResource("pagerduty:index/pagerdutyIncidentWorkflow:PagerdutyIncidentWorkflow", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PagerdutyIncidentWorkflow resources.
type pagerdutyIncidentWorkflowState struct {
	// The description of the workflow.
	Description *string `pulumi:"description"`
	// The name of the workflow.
	Name *string `pulumi:"name"`
	// The steps in the workflow.
	Steps []PagerdutyIncidentWorkflowStep `pulumi:"steps"`
	// A team ID. If specified then workflow edit permissions will be scoped to members of this team.
	Team *string `pulumi:"team"`
}

type PagerdutyIncidentWorkflowState struct {
	// The description of the workflow.
	Description pulumi.StringPtrInput
	// The name of the workflow.
	Name pulumi.StringPtrInput
	// The steps in the workflow.
	Steps PagerdutyIncidentWorkflowStepArrayInput
	// A team ID. If specified then workflow edit permissions will be scoped to members of this team.
	Team pulumi.StringPtrInput
}

func (PagerdutyIncidentWorkflowState) ElementType() reflect.Type {
	return reflect.TypeOf((*pagerdutyIncidentWorkflowState)(nil)).Elem()
}

type pagerdutyIncidentWorkflowArgs struct {
	// The description of the workflow.
	Description *string `pulumi:"description"`
	// The name of the workflow.
	Name *string `pulumi:"name"`
	// The steps in the workflow.
	Steps []PagerdutyIncidentWorkflowStep `pulumi:"steps"`
	// A team ID. If specified then workflow edit permissions will be scoped to members of this team.
	Team *string `pulumi:"team"`
}

// The set of arguments for constructing a PagerdutyIncidentWorkflow resource.
type PagerdutyIncidentWorkflowArgs struct {
	// The description of the workflow.
	Description pulumi.StringPtrInput
	// The name of the workflow.
	Name pulumi.StringPtrInput
	// The steps in the workflow.
	Steps PagerdutyIncidentWorkflowStepArrayInput
	// A team ID. If specified then workflow edit permissions will be scoped to members of this team.
	Team pulumi.StringPtrInput
}

func (PagerdutyIncidentWorkflowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pagerdutyIncidentWorkflowArgs)(nil)).Elem()
}

type PagerdutyIncidentWorkflowInput interface {
	pulumi.Input

	ToPagerdutyIncidentWorkflowOutput() PagerdutyIncidentWorkflowOutput
	ToPagerdutyIncidentWorkflowOutputWithContext(ctx context.Context) PagerdutyIncidentWorkflowOutput
}

func (*PagerdutyIncidentWorkflow) ElementType() reflect.Type {
	return reflect.TypeOf((**PagerdutyIncidentWorkflow)(nil)).Elem()
}

func (i *PagerdutyIncidentWorkflow) ToPagerdutyIncidentWorkflowOutput() PagerdutyIncidentWorkflowOutput {
	return i.ToPagerdutyIncidentWorkflowOutputWithContext(context.Background())
}

func (i *PagerdutyIncidentWorkflow) ToPagerdutyIncidentWorkflowOutputWithContext(ctx context.Context) PagerdutyIncidentWorkflowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagerdutyIncidentWorkflowOutput)
}

// PagerdutyIncidentWorkflowArrayInput is an input type that accepts PagerdutyIncidentWorkflowArray and PagerdutyIncidentWorkflowArrayOutput values.
// You can construct a concrete instance of `PagerdutyIncidentWorkflowArrayInput` via:
//
//	PagerdutyIncidentWorkflowArray{ PagerdutyIncidentWorkflowArgs{...} }
type PagerdutyIncidentWorkflowArrayInput interface {
	pulumi.Input

	ToPagerdutyIncidentWorkflowArrayOutput() PagerdutyIncidentWorkflowArrayOutput
	ToPagerdutyIncidentWorkflowArrayOutputWithContext(context.Context) PagerdutyIncidentWorkflowArrayOutput
}

type PagerdutyIncidentWorkflowArray []PagerdutyIncidentWorkflowInput

func (PagerdutyIncidentWorkflowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PagerdutyIncidentWorkflow)(nil)).Elem()
}

func (i PagerdutyIncidentWorkflowArray) ToPagerdutyIncidentWorkflowArrayOutput() PagerdutyIncidentWorkflowArrayOutput {
	return i.ToPagerdutyIncidentWorkflowArrayOutputWithContext(context.Background())
}

func (i PagerdutyIncidentWorkflowArray) ToPagerdutyIncidentWorkflowArrayOutputWithContext(ctx context.Context) PagerdutyIncidentWorkflowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagerdutyIncidentWorkflowArrayOutput)
}

// PagerdutyIncidentWorkflowMapInput is an input type that accepts PagerdutyIncidentWorkflowMap and PagerdutyIncidentWorkflowMapOutput values.
// You can construct a concrete instance of `PagerdutyIncidentWorkflowMapInput` via:
//
//	PagerdutyIncidentWorkflowMap{ "key": PagerdutyIncidentWorkflowArgs{...} }
type PagerdutyIncidentWorkflowMapInput interface {
	pulumi.Input

	ToPagerdutyIncidentWorkflowMapOutput() PagerdutyIncidentWorkflowMapOutput
	ToPagerdutyIncidentWorkflowMapOutputWithContext(context.Context) PagerdutyIncidentWorkflowMapOutput
}

type PagerdutyIncidentWorkflowMap map[string]PagerdutyIncidentWorkflowInput

func (PagerdutyIncidentWorkflowMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PagerdutyIncidentWorkflow)(nil)).Elem()
}

func (i PagerdutyIncidentWorkflowMap) ToPagerdutyIncidentWorkflowMapOutput() PagerdutyIncidentWorkflowMapOutput {
	return i.ToPagerdutyIncidentWorkflowMapOutputWithContext(context.Background())
}

func (i PagerdutyIncidentWorkflowMap) ToPagerdutyIncidentWorkflowMapOutputWithContext(ctx context.Context) PagerdutyIncidentWorkflowMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagerdutyIncidentWorkflowMapOutput)
}

type PagerdutyIncidentWorkflowOutput struct{ *pulumi.OutputState }

func (PagerdutyIncidentWorkflowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PagerdutyIncidentWorkflow)(nil)).Elem()
}

func (o PagerdutyIncidentWorkflowOutput) ToPagerdutyIncidentWorkflowOutput() PagerdutyIncidentWorkflowOutput {
	return o
}

func (o PagerdutyIncidentWorkflowOutput) ToPagerdutyIncidentWorkflowOutputWithContext(ctx context.Context) PagerdutyIncidentWorkflowOutput {
	return o
}

// The description of the workflow.
func (o PagerdutyIncidentWorkflowOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PagerdutyIncidentWorkflow) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the workflow.
func (o PagerdutyIncidentWorkflowOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PagerdutyIncidentWorkflow) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The steps in the workflow.
func (o PagerdutyIncidentWorkflowOutput) Steps() PagerdutyIncidentWorkflowStepArrayOutput {
	return o.ApplyT(func(v *PagerdutyIncidentWorkflow) PagerdutyIncidentWorkflowStepArrayOutput { return v.Steps }).(PagerdutyIncidentWorkflowStepArrayOutput)
}

// A team ID. If specified then workflow edit permissions will be scoped to members of this team.
func (o PagerdutyIncidentWorkflowOutput) Team() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PagerdutyIncidentWorkflow) pulumi.StringPtrOutput { return v.Team }).(pulumi.StringPtrOutput)
}

type PagerdutyIncidentWorkflowArrayOutput struct{ *pulumi.OutputState }

func (PagerdutyIncidentWorkflowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PagerdutyIncidentWorkflow)(nil)).Elem()
}

func (o PagerdutyIncidentWorkflowArrayOutput) ToPagerdutyIncidentWorkflowArrayOutput() PagerdutyIncidentWorkflowArrayOutput {
	return o
}

func (o PagerdutyIncidentWorkflowArrayOutput) ToPagerdutyIncidentWorkflowArrayOutputWithContext(ctx context.Context) PagerdutyIncidentWorkflowArrayOutput {
	return o
}

func (o PagerdutyIncidentWorkflowArrayOutput) Index(i pulumi.IntInput) PagerdutyIncidentWorkflowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PagerdutyIncidentWorkflow {
		return vs[0].([]*PagerdutyIncidentWorkflow)[vs[1].(int)]
	}).(PagerdutyIncidentWorkflowOutput)
}

type PagerdutyIncidentWorkflowMapOutput struct{ *pulumi.OutputState }

func (PagerdutyIncidentWorkflowMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PagerdutyIncidentWorkflow)(nil)).Elem()
}

func (o PagerdutyIncidentWorkflowMapOutput) ToPagerdutyIncidentWorkflowMapOutput() PagerdutyIncidentWorkflowMapOutput {
	return o
}

func (o PagerdutyIncidentWorkflowMapOutput) ToPagerdutyIncidentWorkflowMapOutputWithContext(ctx context.Context) PagerdutyIncidentWorkflowMapOutput {
	return o
}

func (o PagerdutyIncidentWorkflowMapOutput) MapIndex(k pulumi.StringInput) PagerdutyIncidentWorkflowOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PagerdutyIncidentWorkflow {
		return vs[0].(map[string]*PagerdutyIncidentWorkflow)[vs[1].(string)]
	}).(PagerdutyIncidentWorkflowOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PagerdutyIncidentWorkflowInput)(nil)).Elem(), &PagerdutyIncidentWorkflow{})
	pulumi.RegisterInputType(reflect.TypeOf((*PagerdutyIncidentWorkflowArrayInput)(nil)).Elem(), PagerdutyIncidentWorkflowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PagerdutyIncidentWorkflowMapInput)(nil)).Elem(), PagerdutyIncidentWorkflowMap{})
	pulumi.RegisterOutputType(PagerdutyIncidentWorkflowOutput{})
	pulumi.RegisterOutputType(PagerdutyIncidentWorkflowArrayOutput{})
	pulumi.RegisterOutputType(PagerdutyIncidentWorkflowMapOutput{})
}
