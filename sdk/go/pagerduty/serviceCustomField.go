// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pagerduty

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-pagerduty/sdk/v4/go/pagerduty/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A [service custom field](https://developer.pagerduty.com/api-reference/6075929031f7d-create-a-field)
// allows you to extend PagerDuty Services with custom data fields to provide
// additional context and support features such as customized filtering, search,
// and analytics.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-pagerduty/sdk/v4/go/pagerduty"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Simple string field
//			_, err := pagerduty.NewServiceCustomField(ctx, "environment", &pagerduty.ServiceCustomFieldArgs{
//				Name:        pulumi.String("environment"),
//				DisplayName: pulumi.String("Environment"),
//				DataType:    pulumi.String("string"),
//				FieldType:   pulumi.String("single_value"),
//				Description: pulumi.String("The environment this service runs in"),
//			})
//			if err != nil {
//				return err
//			}
//			// Field with fixed options
//			_, err = pagerduty.NewServiceCustomField(ctx, "deployment_tier", &pagerduty.ServiceCustomFieldArgs{
//				Name:        pulumi.String("deployment_tier"),
//				DisplayName: pulumi.String("Deployment Tier"),
//				DataType:    pulumi.String("string"),
//				FieldType:   pulumi.String("single_value_fixed"),
//				Description: pulumi.String("The deployment tier of the service"),
//				FieldOptions: pagerduty.ServiceCustomFieldFieldOptionArray{
//					&pagerduty.ServiceCustomFieldFieldOptionArgs{
//						Value:    pulumi.String("production"),
//						DataType: pulumi.String("string"),
//					},
//					&pagerduty.ServiceCustomFieldFieldOptionArgs{
//						Value:    pulumi.String("staging"),
//						DataType: pulumi.String("string"),
//					},
//					&pagerduty.ServiceCustomFieldFieldOptionArgs{
//						Value:    pulumi.String("development"),
//						DataType: pulumi.String("string"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// Multi-value field with fixed options
//			_, err = pagerduty.NewServiceCustomField(ctx, "regions", &pagerduty.ServiceCustomFieldArgs{
//				Name:        pulumi.String("regions"),
//				DisplayName: pulumi.String("AWS Regions"),
//				DataType:    pulumi.String("string"),
//				FieldType:   pulumi.String("multi_value_fixed"),
//				Description: pulumi.String("AWS regions where this service is deployed"),
//				FieldOptions: pagerduty.ServiceCustomFieldFieldOptionArray{
//					&pagerduty.ServiceCustomFieldFieldOptionArgs{
//						Value:    pulumi.String("us-east-1"),
//						DataType: pulumi.String("string"),
//					},
//					&pagerduty.ServiceCustomFieldFieldOptionArgs{
//						Value:    pulumi.String("us-west-1"),
//						DataType: pulumi.String("string"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// Boolean field
//			_, err = pagerduty.NewServiceCustomField(ctx, "critical", &pagerduty.ServiceCustomFieldArgs{
//				Name:        pulumi.String("is_critical"),
//				DisplayName: pulumi.String("Is Critical"),
//				DataType:    pulumi.String("boolean"),
//				FieldType:   pulumi.String("single_value"),
//				Description: pulumi.String("Whether this is a critical service"),
//			})
//			if err != nil {
//				return err
//			}
//			// Integer field
//			_, err = pagerduty.NewServiceCustomField(ctx, "priority", &pagerduty.ServiceCustomFieldArgs{
//				Name:        pulumi.String("priority_level"),
//				DisplayName: pulumi.String("Priority Level"),
//				DataType:    pulumi.String("integer"),
//				FieldType:   pulumi.String("single_value"),
//				Description: pulumi.String("Service priority level"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Service custom fields can be imported using the field ID, e.g.
//
// ```sh
// $ pulumi import pagerduty:index/serviceCustomField:ServiceCustomField example P123456
// ```
type ServiceCustomField struct {
	pulumi.CustomResourceState

	// The kind of data the custom field is allowed to contain. Can be one of: `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
	DataType pulumi.StringOutput `pulumi:"dataType"`
	// Default value for the field.
	DefaultValue pulumi.StringPtrOutput `pulumi:"defaultValue"`
	// A description of the data this field contains.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The human-readable name of the field. Must be unique across an account.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Whether the field is enabled. Defaults to `true`.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// Configuration block for defining options for `singleValueFixed` or `multiValueFixed` field types. Can be specified multiple times for multiple options.
	FieldOptions ServiceCustomFieldFieldOptionArrayOutput `pulumi:"fieldOptions"`
	// The type of field. Must be one of: `singleValue`, `singleValueFixed`, `multiValue`, or `multiValueFixed`.
	FieldType pulumi.StringOutput `pulumi:"fieldType"`
	// The name of the field. May include ASCII characters, specifically lowercase letters, digits, and underscores. Must be unique and cannot be changed once created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The API show URL at which the object is accessible
	Self pulumi.StringOutput `pulumi:"self"`
	// A short-form, server-generated string that provides succinct, important information about an object suitable for primary labeling of an entity in a client. In many cases, this will be identical to display_name
	Summary pulumi.StringOutput `pulumi:"summary"`
	// API object type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewServiceCustomField registers a new resource with the given unique name, arguments, and options.
func NewServiceCustomField(ctx *pulumi.Context,
	name string, args *ServiceCustomFieldArgs, opts ...pulumi.ResourceOption) (*ServiceCustomField, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataType == nil {
		return nil, errors.New("invalid value for required argument 'DataType'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.FieldType == nil {
		return nil, errors.New("invalid value for required argument 'FieldType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceCustomField
	err := ctx.RegisterResource("pagerduty:index/serviceCustomField:ServiceCustomField", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceCustomField gets an existing ServiceCustomField resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceCustomField(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceCustomFieldState, opts ...pulumi.ResourceOption) (*ServiceCustomField, error) {
	var resource ServiceCustomField
	err := ctx.ReadResource("pagerduty:index/serviceCustomField:ServiceCustomField", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceCustomField resources.
type serviceCustomFieldState struct {
	// The kind of data the custom field is allowed to contain. Can be one of: `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
	DataType *string `pulumi:"dataType"`
	// Default value for the field.
	DefaultValue *string `pulumi:"defaultValue"`
	// A description of the data this field contains.
	Description *string `pulumi:"description"`
	// The human-readable name of the field. Must be unique across an account.
	DisplayName *string `pulumi:"displayName"`
	// Whether the field is enabled. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// Configuration block for defining options for `singleValueFixed` or `multiValueFixed` field types. Can be specified multiple times for multiple options.
	FieldOptions []ServiceCustomFieldFieldOption `pulumi:"fieldOptions"`
	// The type of field. Must be one of: `singleValue`, `singleValueFixed`, `multiValue`, or `multiValueFixed`.
	FieldType *string `pulumi:"fieldType"`
	// The name of the field. May include ASCII characters, specifically lowercase letters, digits, and underscores. Must be unique and cannot be changed once created.
	Name *string `pulumi:"name"`
	// The API show URL at which the object is accessible
	Self *string `pulumi:"self"`
	// A short-form, server-generated string that provides succinct, important information about an object suitable for primary labeling of an entity in a client. In many cases, this will be identical to display_name
	Summary *string `pulumi:"summary"`
	// API object type
	Type *string `pulumi:"type"`
}

type ServiceCustomFieldState struct {
	// The kind of data the custom field is allowed to contain. Can be one of: `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
	DataType pulumi.StringPtrInput
	// Default value for the field.
	DefaultValue pulumi.StringPtrInput
	// A description of the data this field contains.
	Description pulumi.StringPtrInput
	// The human-readable name of the field. Must be unique across an account.
	DisplayName pulumi.StringPtrInput
	// Whether the field is enabled. Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// Configuration block for defining options for `singleValueFixed` or `multiValueFixed` field types. Can be specified multiple times for multiple options.
	FieldOptions ServiceCustomFieldFieldOptionArrayInput
	// The type of field. Must be one of: `singleValue`, `singleValueFixed`, `multiValue`, or `multiValueFixed`.
	FieldType pulumi.StringPtrInput
	// The name of the field. May include ASCII characters, specifically lowercase letters, digits, and underscores. Must be unique and cannot be changed once created.
	Name pulumi.StringPtrInput
	// The API show URL at which the object is accessible
	Self pulumi.StringPtrInput
	// A short-form, server-generated string that provides succinct, important information about an object suitable for primary labeling of an entity in a client. In many cases, this will be identical to display_name
	Summary pulumi.StringPtrInput
	// API object type
	Type pulumi.StringPtrInput
}

func (ServiceCustomFieldState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceCustomFieldState)(nil)).Elem()
}

type serviceCustomFieldArgs struct {
	// The kind of data the custom field is allowed to contain. Can be one of: `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
	DataType string `pulumi:"dataType"`
	// Default value for the field.
	DefaultValue *string `pulumi:"defaultValue"`
	// A description of the data this field contains.
	Description *string `pulumi:"description"`
	// The human-readable name of the field. Must be unique across an account.
	DisplayName string `pulumi:"displayName"`
	// Whether the field is enabled. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// Configuration block for defining options for `singleValueFixed` or `multiValueFixed` field types. Can be specified multiple times for multiple options.
	FieldOptions []ServiceCustomFieldFieldOption `pulumi:"fieldOptions"`
	// The type of field. Must be one of: `singleValue`, `singleValueFixed`, `multiValue`, or `multiValueFixed`.
	FieldType string `pulumi:"fieldType"`
	// The name of the field. May include ASCII characters, specifically lowercase letters, digits, and underscores. Must be unique and cannot be changed once created.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ServiceCustomField resource.
type ServiceCustomFieldArgs struct {
	// The kind of data the custom field is allowed to contain. Can be one of: `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
	DataType pulumi.StringInput
	// Default value for the field.
	DefaultValue pulumi.StringPtrInput
	// A description of the data this field contains.
	Description pulumi.StringPtrInput
	// The human-readable name of the field. Must be unique across an account.
	DisplayName pulumi.StringInput
	// Whether the field is enabled. Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// Configuration block for defining options for `singleValueFixed` or `multiValueFixed` field types. Can be specified multiple times for multiple options.
	FieldOptions ServiceCustomFieldFieldOptionArrayInput
	// The type of field. Must be one of: `singleValue`, `singleValueFixed`, `multiValue`, or `multiValueFixed`.
	FieldType pulumi.StringInput
	// The name of the field. May include ASCII characters, specifically lowercase letters, digits, and underscores. Must be unique and cannot be changed once created.
	Name pulumi.StringPtrInput
}

func (ServiceCustomFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceCustomFieldArgs)(nil)).Elem()
}

type ServiceCustomFieldInput interface {
	pulumi.Input

	ToServiceCustomFieldOutput() ServiceCustomFieldOutput
	ToServiceCustomFieldOutputWithContext(ctx context.Context) ServiceCustomFieldOutput
}

func (*ServiceCustomField) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCustomField)(nil)).Elem()
}

func (i *ServiceCustomField) ToServiceCustomFieldOutput() ServiceCustomFieldOutput {
	return i.ToServiceCustomFieldOutputWithContext(context.Background())
}

func (i *ServiceCustomField) ToServiceCustomFieldOutputWithContext(ctx context.Context) ServiceCustomFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCustomFieldOutput)
}

// ServiceCustomFieldArrayInput is an input type that accepts ServiceCustomFieldArray and ServiceCustomFieldArrayOutput values.
// You can construct a concrete instance of `ServiceCustomFieldArrayInput` via:
//
//	ServiceCustomFieldArray{ ServiceCustomFieldArgs{...} }
type ServiceCustomFieldArrayInput interface {
	pulumi.Input

	ToServiceCustomFieldArrayOutput() ServiceCustomFieldArrayOutput
	ToServiceCustomFieldArrayOutputWithContext(context.Context) ServiceCustomFieldArrayOutput
}

type ServiceCustomFieldArray []ServiceCustomFieldInput

func (ServiceCustomFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceCustomField)(nil)).Elem()
}

func (i ServiceCustomFieldArray) ToServiceCustomFieldArrayOutput() ServiceCustomFieldArrayOutput {
	return i.ToServiceCustomFieldArrayOutputWithContext(context.Background())
}

func (i ServiceCustomFieldArray) ToServiceCustomFieldArrayOutputWithContext(ctx context.Context) ServiceCustomFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCustomFieldArrayOutput)
}

// ServiceCustomFieldMapInput is an input type that accepts ServiceCustomFieldMap and ServiceCustomFieldMapOutput values.
// You can construct a concrete instance of `ServiceCustomFieldMapInput` via:
//
//	ServiceCustomFieldMap{ "key": ServiceCustomFieldArgs{...} }
type ServiceCustomFieldMapInput interface {
	pulumi.Input

	ToServiceCustomFieldMapOutput() ServiceCustomFieldMapOutput
	ToServiceCustomFieldMapOutputWithContext(context.Context) ServiceCustomFieldMapOutput
}

type ServiceCustomFieldMap map[string]ServiceCustomFieldInput

func (ServiceCustomFieldMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceCustomField)(nil)).Elem()
}

func (i ServiceCustomFieldMap) ToServiceCustomFieldMapOutput() ServiceCustomFieldMapOutput {
	return i.ToServiceCustomFieldMapOutputWithContext(context.Background())
}

func (i ServiceCustomFieldMap) ToServiceCustomFieldMapOutputWithContext(ctx context.Context) ServiceCustomFieldMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCustomFieldMapOutput)
}

type ServiceCustomFieldOutput struct{ *pulumi.OutputState }

func (ServiceCustomFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCustomField)(nil)).Elem()
}

func (o ServiceCustomFieldOutput) ToServiceCustomFieldOutput() ServiceCustomFieldOutput {
	return o
}

func (o ServiceCustomFieldOutput) ToServiceCustomFieldOutputWithContext(ctx context.Context) ServiceCustomFieldOutput {
	return o
}

// The kind of data the custom field is allowed to contain. Can be one of: `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
func (o ServiceCustomFieldOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceCustomField) pulumi.StringOutput { return v.DataType }).(pulumi.StringOutput)
}

// Default value for the field.
func (o ServiceCustomFieldOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceCustomField) pulumi.StringPtrOutput { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// A description of the data this field contains.
func (o ServiceCustomFieldOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceCustomField) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The human-readable name of the field. Must be unique across an account.
func (o ServiceCustomFieldOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceCustomField) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Whether the field is enabled. Defaults to `true`.
func (o ServiceCustomFieldOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *ServiceCustomField) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// Configuration block for defining options for `singleValueFixed` or `multiValueFixed` field types. Can be specified multiple times for multiple options.
func (o ServiceCustomFieldOutput) FieldOptions() ServiceCustomFieldFieldOptionArrayOutput {
	return o.ApplyT(func(v *ServiceCustomField) ServiceCustomFieldFieldOptionArrayOutput { return v.FieldOptions }).(ServiceCustomFieldFieldOptionArrayOutput)
}

// The type of field. Must be one of: `singleValue`, `singleValueFixed`, `multiValue`, or `multiValueFixed`.
func (o ServiceCustomFieldOutput) FieldType() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceCustomField) pulumi.StringOutput { return v.FieldType }).(pulumi.StringOutput)
}

// The name of the field. May include ASCII characters, specifically lowercase letters, digits, and underscores. Must be unique and cannot be changed once created.
func (o ServiceCustomFieldOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceCustomField) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The API show URL at which the object is accessible
func (o ServiceCustomFieldOutput) Self() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceCustomField) pulumi.StringOutput { return v.Self }).(pulumi.StringOutput)
}

// A short-form, server-generated string that provides succinct, important information about an object suitable for primary labeling of an entity in a client. In many cases, this will be identical to display_name
func (o ServiceCustomFieldOutput) Summary() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceCustomField) pulumi.StringOutput { return v.Summary }).(pulumi.StringOutput)
}

// API object type
func (o ServiceCustomFieldOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceCustomField) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type ServiceCustomFieldArrayOutput struct{ *pulumi.OutputState }

func (ServiceCustomFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceCustomField)(nil)).Elem()
}

func (o ServiceCustomFieldArrayOutput) ToServiceCustomFieldArrayOutput() ServiceCustomFieldArrayOutput {
	return o
}

func (o ServiceCustomFieldArrayOutput) ToServiceCustomFieldArrayOutputWithContext(ctx context.Context) ServiceCustomFieldArrayOutput {
	return o
}

func (o ServiceCustomFieldArrayOutput) Index(i pulumi.IntInput) ServiceCustomFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceCustomField {
		return vs[0].([]*ServiceCustomField)[vs[1].(int)]
	}).(ServiceCustomFieldOutput)
}

type ServiceCustomFieldMapOutput struct{ *pulumi.OutputState }

func (ServiceCustomFieldMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceCustomField)(nil)).Elem()
}

func (o ServiceCustomFieldMapOutput) ToServiceCustomFieldMapOutput() ServiceCustomFieldMapOutput {
	return o
}

func (o ServiceCustomFieldMapOutput) ToServiceCustomFieldMapOutputWithContext(ctx context.Context) ServiceCustomFieldMapOutput {
	return o
}

func (o ServiceCustomFieldMapOutput) MapIndex(k pulumi.StringInput) ServiceCustomFieldOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceCustomField {
		return vs[0].(map[string]*ServiceCustomField)[vs[1].(string)]
	}).(ServiceCustomFieldOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceCustomFieldInput)(nil)).Elem(), &ServiceCustomField{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceCustomFieldArrayInput)(nil)).Elem(), ServiceCustomFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceCustomFieldMapInput)(nil)).Elem(), ServiceCustomFieldMap{})
	pulumi.RegisterOutputType(ServiceCustomFieldOutput{})
	pulumi.RegisterOutputType(ServiceCustomFieldArrayOutput{})
	pulumi.RegisterOutputType(ServiceCustomFieldMapOutput{})
}
