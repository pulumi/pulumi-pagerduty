// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class AutomationActionsActionTeamAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutomationActionsActionTeamAssociationArgs Empty = new AutomationActionsActionTeamAssociationArgs();

    /**
     * Id of the action.
     * 
     */
    @Import(name="actionId", required=true)
    private Output<String> actionId;

    /**
     * @return Id of the action.
     * 
     */
    public Output<String> actionId() {
        return this.actionId;
    }

    /**
     * Id of the team associated to the action.
     * 
     */
    @Import(name="teamId", required=true)
    private Output<String> teamId;

    /**
     * @return Id of the team associated to the action.
     * 
     */
    public Output<String> teamId() {
        return this.teamId;
    }

    private AutomationActionsActionTeamAssociationArgs() {}

    private AutomationActionsActionTeamAssociationArgs(AutomationActionsActionTeamAssociationArgs $) {
        this.actionId = $.actionId;
        this.teamId = $.teamId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutomationActionsActionTeamAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutomationActionsActionTeamAssociationArgs $;

        public Builder() {
            $ = new AutomationActionsActionTeamAssociationArgs();
        }

        public Builder(AutomationActionsActionTeamAssociationArgs defaults) {
            $ = new AutomationActionsActionTeamAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actionId Id of the action.
         * 
         * @return builder
         * 
         */
        public Builder actionId(Output<String> actionId) {
            $.actionId = actionId;
            return this;
        }

        /**
         * @param actionId Id of the action.
         * 
         * @return builder
         * 
         */
        public Builder actionId(String actionId) {
            return actionId(Output.of(actionId));
        }

        /**
         * @param teamId Id of the team associated to the action.
         * 
         * @return builder
         * 
         */
        public Builder teamId(Output<String> teamId) {
            $.teamId = teamId;
            return this;
        }

        /**
         * @param teamId Id of the team associated to the action.
         * 
         * @return builder
         * 
         */
        public Builder teamId(String teamId) {
            return teamId(Output.of(teamId));
        }

        public AutomationActionsActionTeamAssociationArgs build() {
            $.actionId = Objects.requireNonNull($.actionId, "expected parameter 'actionId' to be non-null");
            $.teamId = Objects.requireNonNull($.teamId, "expected parameter 'teamId' to be non-null");
            return $;
        }
    }

}
