// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class AutomationActionsRunnerTeamAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutomationActionsRunnerTeamAssociationArgs Empty = new AutomationActionsRunnerTeamAssociationArgs();

    @Import(name="runnerId", required=true)
    private Output<String> runnerId;

    public Output<String> runnerId() {
        return this.runnerId;
    }

    @Import(name="teamId", required=true)
    private Output<String> teamId;

    public Output<String> teamId() {
        return this.teamId;
    }

    private AutomationActionsRunnerTeamAssociationArgs() {}

    private AutomationActionsRunnerTeamAssociationArgs(AutomationActionsRunnerTeamAssociationArgs $) {
        this.runnerId = $.runnerId;
        this.teamId = $.teamId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutomationActionsRunnerTeamAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutomationActionsRunnerTeamAssociationArgs $;

        public Builder() {
            $ = new AutomationActionsRunnerTeamAssociationArgs();
        }

        public Builder(AutomationActionsRunnerTeamAssociationArgs defaults) {
            $ = new AutomationActionsRunnerTeamAssociationArgs(Objects.requireNonNull(defaults));
        }

        public Builder runnerId(Output<String> runnerId) {
            $.runnerId = runnerId;
            return this;
        }

        public Builder runnerId(String runnerId) {
            return runnerId(Output.of(runnerId));
        }

        public Builder teamId(Output<String> teamId) {
            $.teamId = teamId;
            return this;
        }

        public Builder teamId(String teamId) {
            return teamId(Output.of(teamId));
        }

        public AutomationActionsRunnerTeamAssociationArgs build() {
            if ($.runnerId == null) {
                throw new MissingRequiredPropertyException("AutomationActionsRunnerTeamAssociationArgs", "runnerId");
            }
            if ($.teamId == null) {
                throw new MissingRequiredPropertyException("AutomationActionsRunnerTeamAssociationArgs", "teamId");
            }
            return $;
        }
    }

}
