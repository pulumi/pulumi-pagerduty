// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomFieldSchemaArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomFieldSchemaArgs Empty = new CustomFieldSchemaArgs();

    /**
     * The description of the field schema.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the field schema.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The title of the field schema.
     * 
     */
    @Import(name="title", required=true)
    private Output<String> title;

    /**
     * @return The title of the field schema.
     * 
     */
    public Output<String> title() {
        return this.title;
    }

    private CustomFieldSchemaArgs() {}

    private CustomFieldSchemaArgs(CustomFieldSchemaArgs $) {
        this.description = $.description;
        this.title = $.title;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomFieldSchemaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomFieldSchemaArgs $;

        public Builder() {
            $ = new CustomFieldSchemaArgs();
        }

        public Builder(CustomFieldSchemaArgs defaults) {
            $ = new CustomFieldSchemaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the field schema.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the field schema.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param title The title of the field schema.
         * 
         * @return builder
         * 
         */
        public Builder title(Output<String> title) {
            $.title = title;
            return this;
        }

        /**
         * @param title The title of the field schema.
         * 
         * @return builder
         * 
         */
        public Builder title(String title) {
            return title(Output.of(title));
        }

        public CustomFieldSchemaArgs build() {
            $.title = Objects.requireNonNull($.title, "expected parameter 'title' to be non-null");
            return $;
        }
    }

}
