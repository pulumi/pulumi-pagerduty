// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.pagerduty.EscalationPolicyArgs;
import com.pulumi.pagerduty.Utilities;
import com.pulumi.pagerduty.inputs.EscalationPolicyState;
import com.pulumi.pagerduty.outputs.EscalationPolicyRule;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * An [escalation policy](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODEyNQ-create-an-escalation-policy) determines what user or schedule will be notified first, second, and so on when an incident is triggered. Escalation policies are used by one or more services.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.pagerduty.Team;
 * import com.pulumi.pagerduty.TeamArgs;
 * import com.pulumi.pagerduty.User;
 * import com.pulumi.pagerduty.UserArgs;
 * import com.pulumi.pagerduty.EscalationPolicy;
 * import com.pulumi.pagerduty.EscalationPolicyArgs;
 * import com.pulumi.pagerduty.inputs.EscalationPolicyRuleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Team("example", TeamArgs.builder()
 *             .name("Engineering")
 *             .description("All engineering")
 *             .build());
 * 
 *         var exampleUser = new User("exampleUser", UserArgs.builder()
 *             .name("Earline Greenholt")
 *             .email("125.greenholt.earline{@literal @}graham.name")
 *             .teams(example.id())
 *             .build());
 * 
 *         var exampleEscalationPolicy = new EscalationPolicy("exampleEscalationPolicy", EscalationPolicyArgs.builder()
 *             .name("Engineering Escalation Policy")
 *             .numLoops(2)
 *             .teams(example.id())
 *             .rules(EscalationPolicyRuleArgs.builder()
 *                 .escalationDelayInMinutes(10)
 *                 .targets(                
 *                     EscalationPolicyRuleTargetArgs.builder()
 *                         .type("user_reference")
 *                         .id(exampleUser.id())
 *                         .build(),
 *                     EscalationPolicyRuleTargetArgs.builder()
 *                         .type("user_reference")
 *                         .id(example2.id())
 *                         .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Escalation policies can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import pagerduty:index/escalationPolicy:EscalationPolicy main PLBP09X
 * ```
 * 
 */
@ResourceType(type="pagerduty:index/escalationPolicy:EscalationPolicy")
public class EscalationPolicy extends com.pulumi.resources.CustomResource {
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    public Output<String> description() {
        return this.description;
    }
    /**
     * The name of the escalation policy.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the escalation policy.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The number of times the escalation policy will repeat after reaching the end of its escalation.
     * 
     */
    @Export(name="numLoops", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> numLoops;

    /**
     * @return The number of times the escalation policy will repeat after reaching the end of its escalation.
     * 
     */
    public Output<Optional<Integer>> numLoops() {
        return Codegen.optional(this.numLoops);
    }
    /**
     * An Escalation rule block. Escalation rules documented below.
     * 
     */
    @Export(name="rules", refs={List.class,EscalationPolicyRule.class}, tree="[0,1]")
    private Output<List<EscalationPolicyRule>> rules;

    /**
     * @return An Escalation rule block. Escalation rules documented below.
     * 
     */
    public Output<List<EscalationPolicyRule>> rules() {
        return this.rules;
    }
    /**
     * Team associated with the policy (Only 1 team can be assigned to an Escalation Policy). Account must have the `teams` ability to use this parameter.
     * 
     */
    @Export(name="teams", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> teams;

    /**
     * @return Team associated with the policy (Only 1 team can be assigned to an Escalation Policy). Account must have the `teams` ability to use this parameter.
     * 
     */
    public Output<Optional<String>> teams() {
        return Codegen.optional(this.teams);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EscalationPolicy(String name) {
        this(name, EscalationPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EscalationPolicy(String name, EscalationPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EscalationPolicy(String name, EscalationPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("pagerduty:index/escalationPolicy:EscalationPolicy", name, args == null ? EscalationPolicyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private EscalationPolicy(String name, Output<String> id, @Nullable EscalationPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("pagerduty:index/escalationPolicy:EscalationPolicy", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EscalationPolicy get(String name, Output<String> id, @Nullable EscalationPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new EscalationPolicy(name, id, state, options);
    }
}
