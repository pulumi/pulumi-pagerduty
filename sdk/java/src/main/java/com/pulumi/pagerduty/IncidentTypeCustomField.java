// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.pagerduty.IncidentTypeCustomFieldArgs;
import com.pulumi.pagerduty.Utilities;
import com.pulumi.pagerduty.inputs.IncidentTypeCustomFieldState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * An [incident type custom fields](https://developer.pagerduty.com/api-reference/423b6701f3f1b-create-a-custom-field-for-an-incident-type)
 * are a feature which will allow customers to extend Incidents with their own
 * custom data, to provide additional context and support features such as
 * customized filtering, search and analytics. Custom Fields can be applied to
 * different incident types. Child types will inherit custom fields from their
 * parent types.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.pagerduty.IncidentTypeCustomField;
 * import com.pulumi.pagerduty.IncidentTypeCustomFieldArgs;
 * import com.pulumi.pagerduty.PagerdutyFunctions;
 * import com.pulumi.pagerduty.inputs.GetIncidentTypeArgs;
 * import static com.pulumi.codegen.internal.Serialization.*;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var alarmTime = new IncidentTypeCustomField("alarmTime", IncidentTypeCustomFieldArgs.builder()
 *             .name("alarm_time_minutes")
 *             .displayName("Alarm Time")
 *             .dataType("integer")
 *             .fieldType("single_value")
 *             .defaultValue(serializeJson(
 *                 5))
 *             .incidentType("incident_default")
 *             .build());
 * 
 *         final var foo = PagerdutyFunctions.getIncidentType(GetIncidentTypeArgs.builder()
 *             .displayName("Foo")
 *             .build());
 * 
 *         var level = new IncidentTypeCustomField("level", IncidentTypeCustomFieldArgs.builder()
 *             .name("level")
 *             .incidentType(foo.id())
 *             .displayName("Level")
 *             .dataType("string")
 *             .fieldType("single_value_fixed")
 *             .fieldOptions(            
 *                 "Trace",
 *                 "Debug",
 *                 "Info",
 *                 "Warn",
 *                 "Error",
 *                 "Fatal")
 *             .build());
 * 
 *         var csImpact = new IncidentTypeCustomField("csImpact", IncidentTypeCustomFieldArgs.builder()
 *             .name("impact")
 *             .incidentType(foo.id())
 *             .displayName("Customer Impact")
 *             .dataType("string")
 *             .fieldType("multi_value")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Fields can be imported using the combination of `incident_type_id` and `field_id`, e.g.
 * 
 * ```sh
 * $ pulumi import pagerduty:index/incidentTypeCustomField:IncidentTypeCustomField cs_impact PT1234:PF1234
 * ```
 * 
 */
@ResourceType(type="pagerduty:index/incidentTypeCustomField:IncidentTypeCustomField")
public class IncidentTypeCustomField extends com.pulumi.resources.CustomResource {
    /**
     * [Updating causes resource replacement] The type of the data of this custom field. Can be one of `string`, `integer`, `float`, `boolean`, `datetime`, or `url` when `data_type` is `single_value`, otherwise must be `string`. Update
     * 
     */
    @Export(name="dataType", refs={String.class}, tree="[0]")
    private Output<String> dataType;

    /**
     * @return [Updating causes resource replacement] The type of the data of this custom field. Can be one of `string`, `integer`, `float`, `boolean`, `datetime`, or `url` when `data_type` is `single_value`, otherwise must be `string`. Update
     * 
     */
    public Output<String> dataType() {
        return this.dataType;
    }
    /**
     * The default value to set when new incidents are created. Always specified as a string.
     * 
     */
    @Export(name="defaultValue", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> defaultValue;

    /**
     * @return The default value to set when new incidents are created. Always specified as a string.
     * 
     */
    public Output<Optional<String>> defaultValue() {
        return Codegen.optional(this.defaultValue);
    }
    /**
     * The description of the custom field.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the custom field.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The display name of the custom Type.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return The display name of the custom Type.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Whether the custom field is enabled. Defaults to true if not provided.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enabled;

    /**
     * @return Whether the custom field is enabled. Defaults to true if not provided.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }
    /**
     * The options for the custom field. Can only be applied to fields with a type of `single_value_fixed` or `multi_value_fixed`.
     * 
     */
    @Export(name="fieldOptions", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> fieldOptions;

    /**
     * @return The options for the custom field. Can only be applied to fields with a type of `single_value_fixed` or `multi_value_fixed`.
     * 
     */
    public Output<Optional<List<String>>> fieldOptions() {
        return Codegen.optional(this.fieldOptions);
    }
    /**
     * [Updating causes resource replacement] The field type of the field. Must be one of `single_value`, `single_value_fixed`, `multi_value`, or `multi_value_fixed`.
     * 
     */
    @Export(name="fieldType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> fieldType;

    /**
     * @return [Updating causes resource replacement] The field type of the field. Must be one of `single_value`, `single_value_fixed`, `multi_value`, or `multi_value_fixed`.
     * 
     */
    public Output<Optional<String>> fieldType() {
        return Codegen.optional(this.fieldType);
    }
    /**
     * [Updating causes resource replacement] The id of the incident type the custom field is associated with.
     * 
     */
    @Export(name="incidentType", refs={String.class}, tree="[0]")
    private Output<String> incidentType;

    /**
     * @return [Updating causes resource replacement] The id of the incident type the custom field is associated with.
     * 
     */
    public Output<String> incidentType() {
        return this.incidentType;
    }
    /**
     * [Updating causes resource replacement] The name of the custom field.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return [Updating causes resource replacement] The name of the custom field.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The API show URL at which the object is accessible.
     * 
     */
    @Export(name="self", refs={String.class}, tree="[0]")
    private Output<String> self;

    /**
     * @return The API show URL at which the object is accessible.
     * 
     */
    public Output<String> self() {
        return this.self;
    }
    /**
     * A short-form, server-generated string that provides succinct, important information about an object suitable for primary labeling of an entity in a client. In many cases, this will be identical to name, though it is not intended to be an identifier.
     * 
     */
    @Export(name="summary", refs={String.class}, tree="[0]")
    private Output<String> summary;

    /**
     * @return A short-form, server-generated string that provides succinct, important information about an object suitable for primary labeling of an entity in a client. In many cases, this will be identical to name, though it is not intended to be an identifier.
     * 
     */
    public Output<String> summary() {
        return this.summary;
    }
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public IncidentTypeCustomField(java.lang.String name) {
        this(name, IncidentTypeCustomFieldArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public IncidentTypeCustomField(java.lang.String name, IncidentTypeCustomFieldArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IncidentTypeCustomField(java.lang.String name, IncidentTypeCustomFieldArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("pagerduty:index/incidentTypeCustomField:IncidentTypeCustomField", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private IncidentTypeCustomField(java.lang.String name, Output<java.lang.String> id, @Nullable IncidentTypeCustomFieldState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("pagerduty:index/incidentTypeCustomField:IncidentTypeCustomField", name, state, makeResourceOptions(options, id), false);
    }

    private static IncidentTypeCustomFieldArgs makeArgs(IncidentTypeCustomFieldArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? IncidentTypeCustomFieldArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IncidentTypeCustomField get(java.lang.String name, Output<java.lang.String> id, @Nullable IncidentTypeCustomFieldState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new IncidentTypeCustomField(name, id, state, options);
    }
}
