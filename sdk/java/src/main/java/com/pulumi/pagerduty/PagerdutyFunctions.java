// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.pagerduty.Utilities;
import com.pulumi.pagerduty.inputs.GetAutomationActionsActionArgs;
import com.pulumi.pagerduty.inputs.GetAutomationActionsActionPlainArgs;
import com.pulumi.pagerduty.inputs.GetAutomationActionsRunnerArgs;
import com.pulumi.pagerduty.inputs.GetAutomationActionsRunnerPlainArgs;
import com.pulumi.pagerduty.inputs.GetBusinessServiceArgs;
import com.pulumi.pagerduty.inputs.GetBusinessServicePlainArgs;
import com.pulumi.pagerduty.inputs.GetEscalationPolicyArgs;
import com.pulumi.pagerduty.inputs.GetEscalationPolicyPlainArgs;
import com.pulumi.pagerduty.inputs.GetEventOrchestrationArgs;
import com.pulumi.pagerduty.inputs.GetEventOrchestrationPlainArgs;
import com.pulumi.pagerduty.inputs.GetExtensionSchemaArgs;
import com.pulumi.pagerduty.inputs.GetExtensionSchemaPlainArgs;
import com.pulumi.pagerduty.inputs.GetIncidentWorkflowArgs;
import com.pulumi.pagerduty.inputs.GetIncidentWorkflowPlainArgs;
import com.pulumi.pagerduty.inputs.GetPriorityArgs;
import com.pulumi.pagerduty.inputs.GetPriorityPlainArgs;
import com.pulumi.pagerduty.inputs.GetRulesetArgs;
import com.pulumi.pagerduty.inputs.GetRulesetPlainArgs;
import com.pulumi.pagerduty.inputs.GetScheduleArgs;
import com.pulumi.pagerduty.inputs.GetSchedulePlainArgs;
import com.pulumi.pagerduty.inputs.GetServiceArgs;
import com.pulumi.pagerduty.inputs.GetServiceIntegrationArgs;
import com.pulumi.pagerduty.inputs.GetServiceIntegrationPlainArgs;
import com.pulumi.pagerduty.inputs.GetServicePlainArgs;
import com.pulumi.pagerduty.inputs.GetTagArgs;
import com.pulumi.pagerduty.inputs.GetTagPlainArgs;
import com.pulumi.pagerduty.inputs.GetTeamArgs;
import com.pulumi.pagerduty.inputs.GetTeamPlainArgs;
import com.pulumi.pagerduty.inputs.GetUserArgs;
import com.pulumi.pagerduty.inputs.GetUserContactMethodArgs;
import com.pulumi.pagerduty.inputs.GetUserContactMethodPlainArgs;
import com.pulumi.pagerduty.inputs.GetUserPlainArgs;
import com.pulumi.pagerduty.inputs.GetUsersArgs;
import com.pulumi.pagerduty.inputs.GetUsersPlainArgs;
import com.pulumi.pagerduty.inputs.GetVendorArgs;
import com.pulumi.pagerduty.inputs.GetVendorPlainArgs;
import com.pulumi.pagerduty.outputs.GetAutomationActionsActionResult;
import com.pulumi.pagerduty.outputs.GetAutomationActionsRunnerResult;
import com.pulumi.pagerduty.outputs.GetBusinessServiceResult;
import com.pulumi.pagerduty.outputs.GetEscalationPolicyResult;
import com.pulumi.pagerduty.outputs.GetEventOrchestrationResult;
import com.pulumi.pagerduty.outputs.GetExtensionSchemaResult;
import com.pulumi.pagerduty.outputs.GetIncidentWorkflowResult;
import com.pulumi.pagerduty.outputs.GetPriorityResult;
import com.pulumi.pagerduty.outputs.GetRulesetResult;
import com.pulumi.pagerduty.outputs.GetScheduleResult;
import com.pulumi.pagerduty.outputs.GetServiceIntegrationResult;
import com.pulumi.pagerduty.outputs.GetServiceResult;
import com.pulumi.pagerduty.outputs.GetTagResult;
import com.pulumi.pagerduty.outputs.GetTeamResult;
import com.pulumi.pagerduty.outputs.GetUserContactMethodResult;
import com.pulumi.pagerduty.outputs.GetUserResult;
import com.pulumi.pagerduty.outputs.GetUsersResult;
import com.pulumi.pagerduty.outputs.GetVendorResult;
import java.util.concurrent.CompletableFuture;

public final class PagerdutyFunctions {
    /**
     * Use this data source to get information about a specific [automation actions action](https://developer.pagerduty.com/api-reference/357ed15419f64-get-an-automation-action).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetAutomationActionsActionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PagerdutyFunctions.getAutomationActionsAction(GetAutomationActionsActionArgs.builder()
     *             .id(&#34;01CS1685B2UDM4I3XUUOXPPORM&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetAutomationActionsActionResult> getAutomationActionsAction(GetAutomationActionsActionArgs args) {
        return getAutomationActionsAction(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [automation actions action](https://developer.pagerduty.com/api-reference/357ed15419f64-get-an-automation-action).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetAutomationActionsActionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PagerdutyFunctions.getAutomationActionsAction(GetAutomationActionsActionArgs.builder()
     *             .id(&#34;01CS1685B2UDM4I3XUUOXPPORM&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetAutomationActionsActionResult> getAutomationActionsActionPlain(GetAutomationActionsActionPlainArgs args) {
        return getAutomationActionsActionPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [automation actions action](https://developer.pagerduty.com/api-reference/357ed15419f64-get-an-automation-action).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetAutomationActionsActionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PagerdutyFunctions.getAutomationActionsAction(GetAutomationActionsActionArgs.builder()
     *             .id(&#34;01CS1685B2UDM4I3XUUOXPPORM&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetAutomationActionsActionResult> getAutomationActionsAction(GetAutomationActionsActionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("pagerduty:index/getAutomationActionsAction:getAutomationActionsAction", TypeShape.of(GetAutomationActionsActionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [automation actions action](https://developer.pagerduty.com/api-reference/357ed15419f64-get-an-automation-action).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetAutomationActionsActionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PagerdutyFunctions.getAutomationActionsAction(GetAutomationActionsActionArgs.builder()
     *             .id(&#34;01CS1685B2UDM4I3XUUOXPPORM&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetAutomationActionsActionResult> getAutomationActionsActionPlain(GetAutomationActionsActionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("pagerduty:index/getAutomationActionsAction:getAutomationActionsAction", TypeShape.of(GetAutomationActionsActionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [automation actions runner](https://developer.pagerduty.com/api-reference/aace61f84cbd0-get-an-automation-action-runner).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetAutomationActionsRunnerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PagerdutyFunctions.getAutomationActionsRunner(GetAutomationActionsRunnerArgs.builder()
     *             .id(&#34;01DBJLIGED17S1DQKQC2AV8XYZ&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetAutomationActionsRunnerResult> getAutomationActionsRunner(GetAutomationActionsRunnerArgs args) {
        return getAutomationActionsRunner(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [automation actions runner](https://developer.pagerduty.com/api-reference/aace61f84cbd0-get-an-automation-action-runner).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetAutomationActionsRunnerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PagerdutyFunctions.getAutomationActionsRunner(GetAutomationActionsRunnerArgs.builder()
     *             .id(&#34;01DBJLIGED17S1DQKQC2AV8XYZ&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetAutomationActionsRunnerResult> getAutomationActionsRunnerPlain(GetAutomationActionsRunnerPlainArgs args) {
        return getAutomationActionsRunnerPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [automation actions runner](https://developer.pagerduty.com/api-reference/aace61f84cbd0-get-an-automation-action-runner).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetAutomationActionsRunnerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PagerdutyFunctions.getAutomationActionsRunner(GetAutomationActionsRunnerArgs.builder()
     *             .id(&#34;01DBJLIGED17S1DQKQC2AV8XYZ&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetAutomationActionsRunnerResult> getAutomationActionsRunner(GetAutomationActionsRunnerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("pagerduty:index/getAutomationActionsRunner:getAutomationActionsRunner", TypeShape.of(GetAutomationActionsRunnerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [automation actions runner](https://developer.pagerduty.com/api-reference/aace61f84cbd0-get-an-automation-action-runner).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetAutomationActionsRunnerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PagerdutyFunctions.getAutomationActionsRunner(GetAutomationActionsRunnerArgs.builder()
     *             .id(&#34;01DBJLIGED17S1DQKQC2AV8XYZ&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetAutomationActionsRunnerResult> getAutomationActionsRunnerPlain(GetAutomationActionsRunnerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("pagerduty:index/getAutomationActionsRunner:getAutomationActionsRunner", TypeShape.of(GetAutomationActionsRunnerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [business service](https://api-reference.pagerduty.com/#!/Business_Services/get_business_services).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetBusinessServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PagerdutyFunctions.getBusinessService(GetBusinessServiceArgs.builder()
     *             .name(&#34;My Service&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetBusinessServiceResult> getBusinessService(GetBusinessServiceArgs args) {
        return getBusinessService(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [business service](https://api-reference.pagerduty.com/#!/Business_Services/get_business_services).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetBusinessServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PagerdutyFunctions.getBusinessService(GetBusinessServiceArgs.builder()
     *             .name(&#34;My Service&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetBusinessServiceResult> getBusinessServicePlain(GetBusinessServicePlainArgs args) {
        return getBusinessServicePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [business service](https://api-reference.pagerduty.com/#!/Business_Services/get_business_services).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetBusinessServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PagerdutyFunctions.getBusinessService(GetBusinessServiceArgs.builder()
     *             .name(&#34;My Service&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetBusinessServiceResult> getBusinessService(GetBusinessServiceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("pagerduty:index/getBusinessService:getBusinessService", TypeShape.of(GetBusinessServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [business service](https://api-reference.pagerduty.com/#!/Business_Services/get_business_services).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetBusinessServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PagerdutyFunctions.getBusinessService(GetBusinessServiceArgs.builder()
     *             .name(&#34;My Service&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetBusinessServiceResult> getBusinessServicePlain(GetBusinessServicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("pagerduty:index/getBusinessService:getBusinessService", TypeShape.of(GetBusinessServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [escalation policy](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODEyNA-list-escalation-policies) that you can use for other PagerDuty resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetEscalationPolicyArgs;
     * import com.pulumi.pagerduty.Service;
     * import com.pulumi.pagerduty.ServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testEscalationPolicy = PagerdutyFunctions.getEscalationPolicy(GetEscalationPolicyArgs.builder()
     *             .name(&#34;Engineering Escalation Policy&#34;)
     *             .build());
     * 
     *         var testService = new Service(&#34;testService&#34;, ServiceArgs.builder()        
     *             .autoResolveTimeout(14400)
     *             .acknowledgementTimeout(600)
     *             .escalationPolicy(testEscalationPolicy.applyValue(getEscalationPolicyResult -&gt; getEscalationPolicyResult.id()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEscalationPolicyResult> getEscalationPolicy(GetEscalationPolicyArgs args) {
        return getEscalationPolicy(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [escalation policy](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODEyNA-list-escalation-policies) that you can use for other PagerDuty resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetEscalationPolicyArgs;
     * import com.pulumi.pagerduty.Service;
     * import com.pulumi.pagerduty.ServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testEscalationPolicy = PagerdutyFunctions.getEscalationPolicy(GetEscalationPolicyArgs.builder()
     *             .name(&#34;Engineering Escalation Policy&#34;)
     *             .build());
     * 
     *         var testService = new Service(&#34;testService&#34;, ServiceArgs.builder()        
     *             .autoResolveTimeout(14400)
     *             .acknowledgementTimeout(600)
     *             .escalationPolicy(testEscalationPolicy.applyValue(getEscalationPolicyResult -&gt; getEscalationPolicyResult.id()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEscalationPolicyResult> getEscalationPolicyPlain(GetEscalationPolicyPlainArgs args) {
        return getEscalationPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [escalation policy](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODEyNA-list-escalation-policies) that you can use for other PagerDuty resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetEscalationPolicyArgs;
     * import com.pulumi.pagerduty.Service;
     * import com.pulumi.pagerduty.ServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testEscalationPolicy = PagerdutyFunctions.getEscalationPolicy(GetEscalationPolicyArgs.builder()
     *             .name(&#34;Engineering Escalation Policy&#34;)
     *             .build());
     * 
     *         var testService = new Service(&#34;testService&#34;, ServiceArgs.builder()        
     *             .autoResolveTimeout(14400)
     *             .acknowledgementTimeout(600)
     *             .escalationPolicy(testEscalationPolicy.applyValue(getEscalationPolicyResult -&gt; getEscalationPolicyResult.id()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEscalationPolicyResult> getEscalationPolicy(GetEscalationPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("pagerduty:index/getEscalationPolicy:getEscalationPolicy", TypeShape.of(GetEscalationPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [escalation policy](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODEyNA-list-escalation-policies) that you can use for other PagerDuty resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetEscalationPolicyArgs;
     * import com.pulumi.pagerduty.Service;
     * import com.pulumi.pagerduty.ServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testEscalationPolicy = PagerdutyFunctions.getEscalationPolicy(GetEscalationPolicyArgs.builder()
     *             .name(&#34;Engineering Escalation Policy&#34;)
     *             .build());
     * 
     *         var testService = new Service(&#34;testService&#34;, ServiceArgs.builder()        
     *             .autoResolveTimeout(14400)
     *             .acknowledgementTimeout(600)
     *             .escalationPolicy(testEscalationPolicy.applyValue(getEscalationPolicyResult -&gt; getEscalationPolicyResult.id()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEscalationPolicyResult> getEscalationPolicyPlain(GetEscalationPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("pagerduty:index/getEscalationPolicy:getEscalationPolicy", TypeShape.of(GetEscalationPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific Global [Event Orchestration](https://developer.pagerduty.com/api-reference/7ba0fe7bdb26a-list-event-orchestrations)
     * 
     * ## Example Usage
     * 
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.EventOrchestration;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetEventOrchestrationArgs;
     * import com.pulumi.pagerduty.EventOrchestrationRouter;
     * import com.pulumi.pagerduty.EventOrchestrationRouterArgs;
     * import com.pulumi.pagerduty.inputs.EventOrchestrationRouterCatchAllArgs;
     * import com.pulumi.pagerduty.inputs.EventOrchestrationRouterCatchAllActionsArgs;
     * import com.pulumi.pagerduty.inputs.EventOrchestrationRouterSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var tfOrchA = new EventOrchestration(&#34;tfOrchA&#34;);
     * 
     *         final var tfMyMonitor = PagerdutyFunctions.getEventOrchestration(GetEventOrchestrationArgs.builder()
     *             .name(tfOrchA.name())
     *             .build());
     * 
     *         var router = new EventOrchestrationRouter(&#34;router&#34;, EventOrchestrationRouterArgs.builder()        
     *             .parent(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
     *             .catchAll(EventOrchestrationRouterCatchAllArgs.builder()
     *                 .actions(EventOrchestrationRouterCatchAllActionsArgs.builder()
     *                     .routeTo(&#34;unrouted&#34;)
     *                     .build())
     *                 .build())
     *             .set(EventOrchestrationRouterSetArgs.builder()
     *                 .id(&#34;start&#34;)
     *                 .rules(EventOrchestrationRouterSetRuleArgs.builder()
     *                     .actions(EventOrchestrationRouterSetRuleActionsArgs.builder()
     *                         .routeTo(pagerduty_service.db().id())
     *                         .build())
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEventOrchestrationResult> getEventOrchestration(GetEventOrchestrationArgs args) {
        return getEventOrchestration(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific Global [Event Orchestration](https://developer.pagerduty.com/api-reference/7ba0fe7bdb26a-list-event-orchestrations)
     * 
     * ## Example Usage
     * 
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.EventOrchestration;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetEventOrchestrationArgs;
     * import com.pulumi.pagerduty.EventOrchestrationRouter;
     * import com.pulumi.pagerduty.EventOrchestrationRouterArgs;
     * import com.pulumi.pagerduty.inputs.EventOrchestrationRouterCatchAllArgs;
     * import com.pulumi.pagerduty.inputs.EventOrchestrationRouterCatchAllActionsArgs;
     * import com.pulumi.pagerduty.inputs.EventOrchestrationRouterSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var tfOrchA = new EventOrchestration(&#34;tfOrchA&#34;);
     * 
     *         final var tfMyMonitor = PagerdutyFunctions.getEventOrchestration(GetEventOrchestrationArgs.builder()
     *             .name(tfOrchA.name())
     *             .build());
     * 
     *         var router = new EventOrchestrationRouter(&#34;router&#34;, EventOrchestrationRouterArgs.builder()        
     *             .parent(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
     *             .catchAll(EventOrchestrationRouterCatchAllArgs.builder()
     *                 .actions(EventOrchestrationRouterCatchAllActionsArgs.builder()
     *                     .routeTo(&#34;unrouted&#34;)
     *                     .build())
     *                 .build())
     *             .set(EventOrchestrationRouterSetArgs.builder()
     *                 .id(&#34;start&#34;)
     *                 .rules(EventOrchestrationRouterSetRuleArgs.builder()
     *                     .actions(EventOrchestrationRouterSetRuleActionsArgs.builder()
     *                         .routeTo(pagerduty_service.db().id())
     *                         .build())
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEventOrchestrationResult> getEventOrchestrationPlain(GetEventOrchestrationPlainArgs args) {
        return getEventOrchestrationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific Global [Event Orchestration](https://developer.pagerduty.com/api-reference/7ba0fe7bdb26a-list-event-orchestrations)
     * 
     * ## Example Usage
     * 
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.EventOrchestration;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetEventOrchestrationArgs;
     * import com.pulumi.pagerduty.EventOrchestrationRouter;
     * import com.pulumi.pagerduty.EventOrchestrationRouterArgs;
     * import com.pulumi.pagerduty.inputs.EventOrchestrationRouterCatchAllArgs;
     * import com.pulumi.pagerduty.inputs.EventOrchestrationRouterCatchAllActionsArgs;
     * import com.pulumi.pagerduty.inputs.EventOrchestrationRouterSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var tfOrchA = new EventOrchestration(&#34;tfOrchA&#34;);
     * 
     *         final var tfMyMonitor = PagerdutyFunctions.getEventOrchestration(GetEventOrchestrationArgs.builder()
     *             .name(tfOrchA.name())
     *             .build());
     * 
     *         var router = new EventOrchestrationRouter(&#34;router&#34;, EventOrchestrationRouterArgs.builder()        
     *             .parent(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
     *             .catchAll(EventOrchestrationRouterCatchAllArgs.builder()
     *                 .actions(EventOrchestrationRouterCatchAllActionsArgs.builder()
     *                     .routeTo(&#34;unrouted&#34;)
     *                     .build())
     *                 .build())
     *             .set(EventOrchestrationRouterSetArgs.builder()
     *                 .id(&#34;start&#34;)
     *                 .rules(EventOrchestrationRouterSetRuleArgs.builder()
     *                     .actions(EventOrchestrationRouterSetRuleActionsArgs.builder()
     *                         .routeTo(pagerduty_service.db().id())
     *                         .build())
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEventOrchestrationResult> getEventOrchestration(GetEventOrchestrationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("pagerduty:index/getEventOrchestration:getEventOrchestration", TypeShape.of(GetEventOrchestrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific Global [Event Orchestration](https://developer.pagerduty.com/api-reference/7ba0fe7bdb26a-list-event-orchestrations)
     * 
     * ## Example Usage
     * 
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.EventOrchestration;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetEventOrchestrationArgs;
     * import com.pulumi.pagerduty.EventOrchestrationRouter;
     * import com.pulumi.pagerduty.EventOrchestrationRouterArgs;
     * import com.pulumi.pagerduty.inputs.EventOrchestrationRouterCatchAllArgs;
     * import com.pulumi.pagerduty.inputs.EventOrchestrationRouterCatchAllActionsArgs;
     * import com.pulumi.pagerduty.inputs.EventOrchestrationRouterSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var tfOrchA = new EventOrchestration(&#34;tfOrchA&#34;);
     * 
     *         final var tfMyMonitor = PagerdutyFunctions.getEventOrchestration(GetEventOrchestrationArgs.builder()
     *             .name(tfOrchA.name())
     *             .build());
     * 
     *         var router = new EventOrchestrationRouter(&#34;router&#34;, EventOrchestrationRouterArgs.builder()        
     *             .parent(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
     *             .catchAll(EventOrchestrationRouterCatchAllArgs.builder()
     *                 .actions(EventOrchestrationRouterCatchAllActionsArgs.builder()
     *                     .routeTo(&#34;unrouted&#34;)
     *                     .build())
     *                 .build())
     *             .set(EventOrchestrationRouterSetArgs.builder()
     *                 .id(&#34;start&#34;)
     *                 .rules(EventOrchestrationRouterSetRuleArgs.builder()
     *                     .actions(EventOrchestrationRouterSetRuleActionsArgs.builder()
     *                         .routeTo(pagerduty_service.db().id())
     *                         .build())
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEventOrchestrationResult> getEventOrchestrationPlain(GetEventOrchestrationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("pagerduty:index/getEventOrchestration:getEventOrchestration", TypeShape.of(GetEventOrchestrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [extension](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODEzMA-list-extension-schemas) vendor that you can use for a service (e.g: Slack, Generic Webhook, ServiceNow).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetExtensionSchemaArgs;
     * import com.pulumi.pagerduty.User;
     * import com.pulumi.pagerduty.UserArgs;
     * import com.pulumi.pagerduty.EscalationPolicy;
     * import com.pulumi.pagerduty.EscalationPolicyArgs;
     * import com.pulumi.pagerduty.inputs.EscalationPolicyRuleArgs;
     * import com.pulumi.pagerduty.Service;
     * import com.pulumi.pagerduty.ServiceArgs;
     * import com.pulumi.pagerduty.Extension;
     * import com.pulumi.pagerduty.ExtensionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var webhook = PagerdutyFunctions.getExtensionSchema(GetExtensionSchemaArgs.builder()
     *             .name(&#34;Generic V2 Webhook&#34;)
     *             .build());
     * 
     *         var exampleUser = new User(&#34;exampleUser&#34;, UserArgs.builder()        
     *             .email(&#34;howard.james@example.domain&#34;)
     *             .teams(pagerduty_team.example().id())
     *             .build());
     * 
     *         var foo = new EscalationPolicy(&#34;foo&#34;, EscalationPolicyArgs.builder()        
     *             .numLoops(2)
     *             .rules(EscalationPolicyRuleArgs.builder()
     *                 .escalationDelayInMinutes(10)
     *                 .targets(EscalationPolicyRuleTargetArgs.builder()
     *                     .type(&#34;user&#34;)
     *                     .id(exampleUser.id())
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var exampleService = new Service(&#34;exampleService&#34;, ServiceArgs.builder()        
     *             .autoResolveTimeout(14400)
     *             .acknowledgementTimeout(600)
     *             .escalationPolicy(pagerduty_escalation_policy.example().id())
     *             .build());
     * 
     *         var slack = new Extension(&#34;slack&#34;, ExtensionArgs.builder()        
     *             .endpointUrl(&#34;https://generic_webhook_url/XXXXXX/BBBBBB&#34;)
     *             .extensionSchema(webhook.applyValue(getExtensionSchemaResult -&gt; getExtensionSchemaResult.id()))
     *             .extensionObjects(exampleService.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetExtensionSchemaResult> getExtensionSchema(GetExtensionSchemaArgs args) {
        return getExtensionSchema(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [extension](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODEzMA-list-extension-schemas) vendor that you can use for a service (e.g: Slack, Generic Webhook, ServiceNow).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetExtensionSchemaArgs;
     * import com.pulumi.pagerduty.User;
     * import com.pulumi.pagerduty.UserArgs;
     * import com.pulumi.pagerduty.EscalationPolicy;
     * import com.pulumi.pagerduty.EscalationPolicyArgs;
     * import com.pulumi.pagerduty.inputs.EscalationPolicyRuleArgs;
     * import com.pulumi.pagerduty.Service;
     * import com.pulumi.pagerduty.ServiceArgs;
     * import com.pulumi.pagerduty.Extension;
     * import com.pulumi.pagerduty.ExtensionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var webhook = PagerdutyFunctions.getExtensionSchema(GetExtensionSchemaArgs.builder()
     *             .name(&#34;Generic V2 Webhook&#34;)
     *             .build());
     * 
     *         var exampleUser = new User(&#34;exampleUser&#34;, UserArgs.builder()        
     *             .email(&#34;howard.james@example.domain&#34;)
     *             .teams(pagerduty_team.example().id())
     *             .build());
     * 
     *         var foo = new EscalationPolicy(&#34;foo&#34;, EscalationPolicyArgs.builder()        
     *             .numLoops(2)
     *             .rules(EscalationPolicyRuleArgs.builder()
     *                 .escalationDelayInMinutes(10)
     *                 .targets(EscalationPolicyRuleTargetArgs.builder()
     *                     .type(&#34;user&#34;)
     *                     .id(exampleUser.id())
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var exampleService = new Service(&#34;exampleService&#34;, ServiceArgs.builder()        
     *             .autoResolveTimeout(14400)
     *             .acknowledgementTimeout(600)
     *             .escalationPolicy(pagerduty_escalation_policy.example().id())
     *             .build());
     * 
     *         var slack = new Extension(&#34;slack&#34;, ExtensionArgs.builder()        
     *             .endpointUrl(&#34;https://generic_webhook_url/XXXXXX/BBBBBB&#34;)
     *             .extensionSchema(webhook.applyValue(getExtensionSchemaResult -&gt; getExtensionSchemaResult.id()))
     *             .extensionObjects(exampleService.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetExtensionSchemaResult> getExtensionSchemaPlain(GetExtensionSchemaPlainArgs args) {
        return getExtensionSchemaPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [extension](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODEzMA-list-extension-schemas) vendor that you can use for a service (e.g: Slack, Generic Webhook, ServiceNow).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetExtensionSchemaArgs;
     * import com.pulumi.pagerduty.User;
     * import com.pulumi.pagerduty.UserArgs;
     * import com.pulumi.pagerduty.EscalationPolicy;
     * import com.pulumi.pagerduty.EscalationPolicyArgs;
     * import com.pulumi.pagerduty.inputs.EscalationPolicyRuleArgs;
     * import com.pulumi.pagerduty.Service;
     * import com.pulumi.pagerduty.ServiceArgs;
     * import com.pulumi.pagerduty.Extension;
     * import com.pulumi.pagerduty.ExtensionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var webhook = PagerdutyFunctions.getExtensionSchema(GetExtensionSchemaArgs.builder()
     *             .name(&#34;Generic V2 Webhook&#34;)
     *             .build());
     * 
     *         var exampleUser = new User(&#34;exampleUser&#34;, UserArgs.builder()        
     *             .email(&#34;howard.james@example.domain&#34;)
     *             .teams(pagerduty_team.example().id())
     *             .build());
     * 
     *         var foo = new EscalationPolicy(&#34;foo&#34;, EscalationPolicyArgs.builder()        
     *             .numLoops(2)
     *             .rules(EscalationPolicyRuleArgs.builder()
     *                 .escalationDelayInMinutes(10)
     *                 .targets(EscalationPolicyRuleTargetArgs.builder()
     *                     .type(&#34;user&#34;)
     *                     .id(exampleUser.id())
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var exampleService = new Service(&#34;exampleService&#34;, ServiceArgs.builder()        
     *             .autoResolveTimeout(14400)
     *             .acknowledgementTimeout(600)
     *             .escalationPolicy(pagerduty_escalation_policy.example().id())
     *             .build());
     * 
     *         var slack = new Extension(&#34;slack&#34;, ExtensionArgs.builder()        
     *             .endpointUrl(&#34;https://generic_webhook_url/XXXXXX/BBBBBB&#34;)
     *             .extensionSchema(webhook.applyValue(getExtensionSchemaResult -&gt; getExtensionSchemaResult.id()))
     *             .extensionObjects(exampleService.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetExtensionSchemaResult> getExtensionSchema(GetExtensionSchemaArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("pagerduty:index/getExtensionSchema:getExtensionSchema", TypeShape.of(GetExtensionSchemaResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [extension](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODEzMA-list-extension-schemas) vendor that you can use for a service (e.g: Slack, Generic Webhook, ServiceNow).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetExtensionSchemaArgs;
     * import com.pulumi.pagerduty.User;
     * import com.pulumi.pagerduty.UserArgs;
     * import com.pulumi.pagerduty.EscalationPolicy;
     * import com.pulumi.pagerduty.EscalationPolicyArgs;
     * import com.pulumi.pagerduty.inputs.EscalationPolicyRuleArgs;
     * import com.pulumi.pagerduty.Service;
     * import com.pulumi.pagerduty.ServiceArgs;
     * import com.pulumi.pagerduty.Extension;
     * import com.pulumi.pagerduty.ExtensionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var webhook = PagerdutyFunctions.getExtensionSchema(GetExtensionSchemaArgs.builder()
     *             .name(&#34;Generic V2 Webhook&#34;)
     *             .build());
     * 
     *         var exampleUser = new User(&#34;exampleUser&#34;, UserArgs.builder()        
     *             .email(&#34;howard.james@example.domain&#34;)
     *             .teams(pagerduty_team.example().id())
     *             .build());
     * 
     *         var foo = new EscalationPolicy(&#34;foo&#34;, EscalationPolicyArgs.builder()        
     *             .numLoops(2)
     *             .rules(EscalationPolicyRuleArgs.builder()
     *                 .escalationDelayInMinutes(10)
     *                 .targets(EscalationPolicyRuleTargetArgs.builder()
     *                     .type(&#34;user&#34;)
     *                     .id(exampleUser.id())
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var exampleService = new Service(&#34;exampleService&#34;, ServiceArgs.builder()        
     *             .autoResolveTimeout(14400)
     *             .acknowledgementTimeout(600)
     *             .escalationPolicy(pagerduty_escalation_policy.example().id())
     *             .build());
     * 
     *         var slack = new Extension(&#34;slack&#34;, ExtensionArgs.builder()        
     *             .endpointUrl(&#34;https://generic_webhook_url/XXXXXX/BBBBBB&#34;)
     *             .extensionSchema(webhook.applyValue(getExtensionSchemaResult -&gt; getExtensionSchemaResult.id()))
     *             .extensionObjects(exampleService.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetExtensionSchemaResult> getExtensionSchemaPlain(GetExtensionSchemaPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("pagerduty:index/getExtensionSchema:getExtensionSchema", TypeShape.of(GetExtensionSchemaResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [Incident Workflow](https://support.pagerduty.com/docs/incident-workflows) so that you can create a trigger for it.
     * 
     * &gt; The Incident Workflows feature is currently available in Early Access.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetIncidentWorkflowArgs;
     * import com.pulumi.pagerduty.inputs.GetServiceArgs;
     * import com.pulumi.pagerduty.PagerdutyIncidentWorkflowTrigger;
     * import com.pulumi.pagerduty.PagerdutyIncidentWorkflowTriggerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myWorkflow = PagerdutyFunctions.getIncidentWorkflow(GetIncidentWorkflowArgs.builder()
     *             .name(&#34;Some Workflow Name&#34;)
     *             .build());
     * 
     *         final var firstService = PagerdutyFunctions.getService(GetServiceArgs.builder()
     *             .name(&#34;My First Service&#34;)
     *             .build());
     * 
     *         var automaticTrigger = new PagerdutyIncidentWorkflowTrigger(&#34;automaticTrigger&#34;, PagerdutyIncidentWorkflowTriggerArgs.builder()        
     *             .type(&#34;conditional&#34;)
     *             .workflow(myWorkflow.applyValue(getIncidentWorkflowResult -&gt; getIncidentWorkflowResult.id()))
     *             .services(firstService.applyValue(getServiceResult -&gt; getServiceResult.id()))
     *             .condition(&#34;incident.priority matches &#39;P1&#39;&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIncidentWorkflowResult> getIncidentWorkflow(GetIncidentWorkflowArgs args) {
        return getIncidentWorkflow(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [Incident Workflow](https://support.pagerduty.com/docs/incident-workflows) so that you can create a trigger for it.
     * 
     * &gt; The Incident Workflows feature is currently available in Early Access.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetIncidentWorkflowArgs;
     * import com.pulumi.pagerduty.inputs.GetServiceArgs;
     * import com.pulumi.pagerduty.PagerdutyIncidentWorkflowTrigger;
     * import com.pulumi.pagerduty.PagerdutyIncidentWorkflowTriggerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myWorkflow = PagerdutyFunctions.getIncidentWorkflow(GetIncidentWorkflowArgs.builder()
     *             .name(&#34;Some Workflow Name&#34;)
     *             .build());
     * 
     *         final var firstService = PagerdutyFunctions.getService(GetServiceArgs.builder()
     *             .name(&#34;My First Service&#34;)
     *             .build());
     * 
     *         var automaticTrigger = new PagerdutyIncidentWorkflowTrigger(&#34;automaticTrigger&#34;, PagerdutyIncidentWorkflowTriggerArgs.builder()        
     *             .type(&#34;conditional&#34;)
     *             .workflow(myWorkflow.applyValue(getIncidentWorkflowResult -&gt; getIncidentWorkflowResult.id()))
     *             .services(firstService.applyValue(getServiceResult -&gt; getServiceResult.id()))
     *             .condition(&#34;incident.priority matches &#39;P1&#39;&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIncidentWorkflowResult> getIncidentWorkflowPlain(GetIncidentWorkflowPlainArgs args) {
        return getIncidentWorkflowPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [Incident Workflow](https://support.pagerduty.com/docs/incident-workflows) so that you can create a trigger for it.
     * 
     * &gt; The Incident Workflows feature is currently available in Early Access.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetIncidentWorkflowArgs;
     * import com.pulumi.pagerduty.inputs.GetServiceArgs;
     * import com.pulumi.pagerduty.PagerdutyIncidentWorkflowTrigger;
     * import com.pulumi.pagerduty.PagerdutyIncidentWorkflowTriggerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myWorkflow = PagerdutyFunctions.getIncidentWorkflow(GetIncidentWorkflowArgs.builder()
     *             .name(&#34;Some Workflow Name&#34;)
     *             .build());
     * 
     *         final var firstService = PagerdutyFunctions.getService(GetServiceArgs.builder()
     *             .name(&#34;My First Service&#34;)
     *             .build());
     * 
     *         var automaticTrigger = new PagerdutyIncidentWorkflowTrigger(&#34;automaticTrigger&#34;, PagerdutyIncidentWorkflowTriggerArgs.builder()        
     *             .type(&#34;conditional&#34;)
     *             .workflow(myWorkflow.applyValue(getIncidentWorkflowResult -&gt; getIncidentWorkflowResult.id()))
     *             .services(firstService.applyValue(getServiceResult -&gt; getServiceResult.id()))
     *             .condition(&#34;incident.priority matches &#39;P1&#39;&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIncidentWorkflowResult> getIncidentWorkflow(GetIncidentWorkflowArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("pagerduty:index/getIncidentWorkflow:getIncidentWorkflow", TypeShape.of(GetIncidentWorkflowResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [Incident Workflow](https://support.pagerduty.com/docs/incident-workflows) so that you can create a trigger for it.
     * 
     * &gt; The Incident Workflows feature is currently available in Early Access.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetIncidentWorkflowArgs;
     * import com.pulumi.pagerduty.inputs.GetServiceArgs;
     * import com.pulumi.pagerduty.PagerdutyIncidentWorkflowTrigger;
     * import com.pulumi.pagerduty.PagerdutyIncidentWorkflowTriggerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myWorkflow = PagerdutyFunctions.getIncidentWorkflow(GetIncidentWorkflowArgs.builder()
     *             .name(&#34;Some Workflow Name&#34;)
     *             .build());
     * 
     *         final var firstService = PagerdutyFunctions.getService(GetServiceArgs.builder()
     *             .name(&#34;My First Service&#34;)
     *             .build());
     * 
     *         var automaticTrigger = new PagerdutyIncidentWorkflowTrigger(&#34;automaticTrigger&#34;, PagerdutyIncidentWorkflowTriggerArgs.builder()        
     *             .type(&#34;conditional&#34;)
     *             .workflow(myWorkflow.applyValue(getIncidentWorkflowResult -&gt; getIncidentWorkflowResult.id()))
     *             .services(firstService.applyValue(getServiceResult -&gt; getServiceResult.id()))
     *             .condition(&#34;incident.priority matches &#39;P1&#39;&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIncidentWorkflowResult> getIncidentWorkflowPlain(GetIncidentWorkflowPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("pagerduty:index/getIncidentWorkflow:getIncidentWorkflow", TypeShape.of(GetIncidentWorkflowResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [priority](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODE2NA-list-priorities) that you can use for other PagerDuty resources. A priority is a label representing the importance and impact of an incident. This feature is only available on Standard and Enterprise plans.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetPriorityArgs;
     * import com.pulumi.pagerduty.Ruleset;
     * import com.pulumi.pagerduty.RulesetRule;
     * import com.pulumi.pagerduty.RulesetRuleArgs;
     * import com.pulumi.pagerduty.inputs.RulesetRuleConditionsArgs;
     * import com.pulumi.pagerduty.inputs.RulesetRuleActionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var p1 = PagerdutyFunctions.getPriority(GetPriorityArgs.builder()
     *             .name(&#34;P1&#34;)
     *             .build());
     * 
     *         var fooRuleset = new Ruleset(&#34;fooRuleset&#34;);
     * 
     *         var fooRulesetRule = new RulesetRule(&#34;fooRulesetRule&#34;, RulesetRuleArgs.builder()        
     *             .ruleset(fooRuleset.id())
     *             .position(0)
     *             .disabled(&#34;false&#34;)
     *             .conditions(RulesetRuleConditionsArgs.builder()
     *                 .operator(&#34;and&#34;)
     *                 .subconditions(                
     *                     RulesetRuleConditionsSubconditionArgs.builder()
     *                         .operator(&#34;contains&#34;)
     *                         .parameters(RulesetRuleConditionsSubconditionParameterArgs.builder()
     *                             .value(&#34;disk space&#34;)
     *                             .path(&#34;payload.summary&#34;)
     *                             .build())
     *                         .build(),
     *                     RulesetRuleConditionsSubconditionArgs.builder()
     *                         .operator(&#34;contains&#34;)
     *                         .parameters(RulesetRuleConditionsSubconditionParameterArgs.builder()
     *                             .value(&#34;db&#34;)
     *                             .path(&#34;payload.source&#34;)
     *                             .build())
     *                         .build())
     *                 .build())
     *             .actions(RulesetRuleActionsArgs.builder()
     *                 .routes(RulesetRuleActionsRouteArgs.builder()
     *                     .value(&#34;P5DTL0K&#34;)
     *                     .build())
     *                 .priorities(RulesetRuleActionsPriorityArgs.builder()
     *                     .value(p1.applyValue(getPriorityResult -&gt; getPriorityResult.id()))
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPriorityResult> getPriority(GetPriorityArgs args) {
        return getPriority(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [priority](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODE2NA-list-priorities) that you can use for other PagerDuty resources. A priority is a label representing the importance and impact of an incident. This feature is only available on Standard and Enterprise plans.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetPriorityArgs;
     * import com.pulumi.pagerduty.Ruleset;
     * import com.pulumi.pagerduty.RulesetRule;
     * import com.pulumi.pagerduty.RulesetRuleArgs;
     * import com.pulumi.pagerduty.inputs.RulesetRuleConditionsArgs;
     * import com.pulumi.pagerduty.inputs.RulesetRuleActionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var p1 = PagerdutyFunctions.getPriority(GetPriorityArgs.builder()
     *             .name(&#34;P1&#34;)
     *             .build());
     * 
     *         var fooRuleset = new Ruleset(&#34;fooRuleset&#34;);
     * 
     *         var fooRulesetRule = new RulesetRule(&#34;fooRulesetRule&#34;, RulesetRuleArgs.builder()        
     *             .ruleset(fooRuleset.id())
     *             .position(0)
     *             .disabled(&#34;false&#34;)
     *             .conditions(RulesetRuleConditionsArgs.builder()
     *                 .operator(&#34;and&#34;)
     *                 .subconditions(                
     *                     RulesetRuleConditionsSubconditionArgs.builder()
     *                         .operator(&#34;contains&#34;)
     *                         .parameters(RulesetRuleConditionsSubconditionParameterArgs.builder()
     *                             .value(&#34;disk space&#34;)
     *                             .path(&#34;payload.summary&#34;)
     *                             .build())
     *                         .build(),
     *                     RulesetRuleConditionsSubconditionArgs.builder()
     *                         .operator(&#34;contains&#34;)
     *                         .parameters(RulesetRuleConditionsSubconditionParameterArgs.builder()
     *                             .value(&#34;db&#34;)
     *                             .path(&#34;payload.source&#34;)
     *                             .build())
     *                         .build())
     *                 .build())
     *             .actions(RulesetRuleActionsArgs.builder()
     *                 .routes(RulesetRuleActionsRouteArgs.builder()
     *                     .value(&#34;P5DTL0K&#34;)
     *                     .build())
     *                 .priorities(RulesetRuleActionsPriorityArgs.builder()
     *                     .value(p1.applyValue(getPriorityResult -&gt; getPriorityResult.id()))
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPriorityResult> getPriorityPlain(GetPriorityPlainArgs args) {
        return getPriorityPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [priority](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODE2NA-list-priorities) that you can use for other PagerDuty resources. A priority is a label representing the importance and impact of an incident. This feature is only available on Standard and Enterprise plans.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetPriorityArgs;
     * import com.pulumi.pagerduty.Ruleset;
     * import com.pulumi.pagerduty.RulesetRule;
     * import com.pulumi.pagerduty.RulesetRuleArgs;
     * import com.pulumi.pagerduty.inputs.RulesetRuleConditionsArgs;
     * import com.pulumi.pagerduty.inputs.RulesetRuleActionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var p1 = PagerdutyFunctions.getPriority(GetPriorityArgs.builder()
     *             .name(&#34;P1&#34;)
     *             .build());
     * 
     *         var fooRuleset = new Ruleset(&#34;fooRuleset&#34;);
     * 
     *         var fooRulesetRule = new RulesetRule(&#34;fooRulesetRule&#34;, RulesetRuleArgs.builder()        
     *             .ruleset(fooRuleset.id())
     *             .position(0)
     *             .disabled(&#34;false&#34;)
     *             .conditions(RulesetRuleConditionsArgs.builder()
     *                 .operator(&#34;and&#34;)
     *                 .subconditions(                
     *                     RulesetRuleConditionsSubconditionArgs.builder()
     *                         .operator(&#34;contains&#34;)
     *                         .parameters(RulesetRuleConditionsSubconditionParameterArgs.builder()
     *                             .value(&#34;disk space&#34;)
     *                             .path(&#34;payload.summary&#34;)
     *                             .build())
     *                         .build(),
     *                     RulesetRuleConditionsSubconditionArgs.builder()
     *                         .operator(&#34;contains&#34;)
     *                         .parameters(RulesetRuleConditionsSubconditionParameterArgs.builder()
     *                             .value(&#34;db&#34;)
     *                             .path(&#34;payload.source&#34;)
     *                             .build())
     *                         .build())
     *                 .build())
     *             .actions(RulesetRuleActionsArgs.builder()
     *                 .routes(RulesetRuleActionsRouteArgs.builder()
     *                     .value(&#34;P5DTL0K&#34;)
     *                     .build())
     *                 .priorities(RulesetRuleActionsPriorityArgs.builder()
     *                     .value(p1.applyValue(getPriorityResult -&gt; getPriorityResult.id()))
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPriorityResult> getPriority(GetPriorityArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("pagerduty:index/getPriority:getPriority", TypeShape.of(GetPriorityResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [priority](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODE2NA-list-priorities) that you can use for other PagerDuty resources. A priority is a label representing the importance and impact of an incident. This feature is only available on Standard and Enterprise plans.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetPriorityArgs;
     * import com.pulumi.pagerduty.Ruleset;
     * import com.pulumi.pagerduty.RulesetRule;
     * import com.pulumi.pagerduty.RulesetRuleArgs;
     * import com.pulumi.pagerduty.inputs.RulesetRuleConditionsArgs;
     * import com.pulumi.pagerduty.inputs.RulesetRuleActionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var p1 = PagerdutyFunctions.getPriority(GetPriorityArgs.builder()
     *             .name(&#34;P1&#34;)
     *             .build());
     * 
     *         var fooRuleset = new Ruleset(&#34;fooRuleset&#34;);
     * 
     *         var fooRulesetRule = new RulesetRule(&#34;fooRulesetRule&#34;, RulesetRuleArgs.builder()        
     *             .ruleset(fooRuleset.id())
     *             .position(0)
     *             .disabled(&#34;false&#34;)
     *             .conditions(RulesetRuleConditionsArgs.builder()
     *                 .operator(&#34;and&#34;)
     *                 .subconditions(                
     *                     RulesetRuleConditionsSubconditionArgs.builder()
     *                         .operator(&#34;contains&#34;)
     *                         .parameters(RulesetRuleConditionsSubconditionParameterArgs.builder()
     *                             .value(&#34;disk space&#34;)
     *                             .path(&#34;payload.summary&#34;)
     *                             .build())
     *                         .build(),
     *                     RulesetRuleConditionsSubconditionArgs.builder()
     *                         .operator(&#34;contains&#34;)
     *                         .parameters(RulesetRuleConditionsSubconditionParameterArgs.builder()
     *                             .value(&#34;db&#34;)
     *                             .path(&#34;payload.source&#34;)
     *                             .build())
     *                         .build())
     *                 .build())
     *             .actions(RulesetRuleActionsArgs.builder()
     *                 .routes(RulesetRuleActionsRouteArgs.builder()
     *                     .value(&#34;P5DTL0K&#34;)
     *                     .build())
     *                 .priorities(RulesetRuleActionsPriorityArgs.builder()
     *                     .value(p1.applyValue(getPriorityResult -&gt; getPriorityResult.id()))
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPriorityResult> getPriorityPlain(GetPriorityPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("pagerduty:index/getPriority:getPriority", TypeShape.of(GetPriorityResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [ruleset](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODE3MQ-list-rulesets) that you can use for managing and grouping [event rules](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODE3Ng-list-event-rules).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetRulesetArgs;
     * import com.pulumi.pagerduty.RulesetRule;
     * import com.pulumi.pagerduty.RulesetRuleArgs;
     * import com.pulumi.pagerduty.inputs.RulesetRuleConditionsArgs;
     * import com.pulumi.pagerduty.inputs.RulesetRuleActionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PagerdutyFunctions.getRuleset(GetRulesetArgs.builder()
     *             .name(&#34;My Ruleset&#34;)
     *             .build());
     * 
     *         var foo = new RulesetRule(&#34;foo&#34;, RulesetRuleArgs.builder()        
     *             .ruleset(example.applyValue(getRulesetResult -&gt; getRulesetResult.id()))
     *             .position(0)
     *             .disabled(&#34;false&#34;)
     *             .conditions(RulesetRuleConditionsArgs.builder()
     *                 .operator(&#34;and&#34;)
     *                 .subconditions(                
     *                     RulesetRuleConditionsSubconditionArgs.builder()
     *                         .operator(&#34;contains&#34;)
     *                         .parameters(RulesetRuleConditionsSubconditionParameterArgs.builder()
     *                             .value(&#34;disk space&#34;)
     *                             .path(&#34;payload.summary&#34;)
     *                             .build())
     *                         .build(),
     *                     RulesetRuleConditionsSubconditionArgs.builder()
     *                         .operator(&#34;contains&#34;)
     *                         .parameters(RulesetRuleConditionsSubconditionParameterArgs.builder()
     *                             .value(&#34;db&#34;)
     *                             .path(&#34;payload.source&#34;)
     *                             .build())
     *                         .build())
     *                 .build())
     *             .actions(RulesetRuleActionsArgs.builder()
     *                 .routes(RulesetRuleActionsRouteArgs.builder()
     *                     .value(&#34;P5DTL0K&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Default Global Ruleset
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetRulesetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var defaultGlobal = PagerdutyFunctions.getRuleset(GetRulesetArgs.builder()
     *             .name(&#34;Default Global&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRulesetResult> getRuleset(GetRulesetArgs args) {
        return getRuleset(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [ruleset](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODE3MQ-list-rulesets) that you can use for managing and grouping [event rules](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODE3Ng-list-event-rules).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetRulesetArgs;
     * import com.pulumi.pagerduty.RulesetRule;
     * import com.pulumi.pagerduty.RulesetRuleArgs;
     * import com.pulumi.pagerduty.inputs.RulesetRuleConditionsArgs;
     * import com.pulumi.pagerduty.inputs.RulesetRuleActionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PagerdutyFunctions.getRuleset(GetRulesetArgs.builder()
     *             .name(&#34;My Ruleset&#34;)
     *             .build());
     * 
     *         var foo = new RulesetRule(&#34;foo&#34;, RulesetRuleArgs.builder()        
     *             .ruleset(example.applyValue(getRulesetResult -&gt; getRulesetResult.id()))
     *             .position(0)
     *             .disabled(&#34;false&#34;)
     *             .conditions(RulesetRuleConditionsArgs.builder()
     *                 .operator(&#34;and&#34;)
     *                 .subconditions(                
     *                     RulesetRuleConditionsSubconditionArgs.builder()
     *                         .operator(&#34;contains&#34;)
     *                         .parameters(RulesetRuleConditionsSubconditionParameterArgs.builder()
     *                             .value(&#34;disk space&#34;)
     *                             .path(&#34;payload.summary&#34;)
     *                             .build())
     *                         .build(),
     *                     RulesetRuleConditionsSubconditionArgs.builder()
     *                         .operator(&#34;contains&#34;)
     *                         .parameters(RulesetRuleConditionsSubconditionParameterArgs.builder()
     *                             .value(&#34;db&#34;)
     *                             .path(&#34;payload.source&#34;)
     *                             .build())
     *                         .build())
     *                 .build())
     *             .actions(RulesetRuleActionsArgs.builder()
     *                 .routes(RulesetRuleActionsRouteArgs.builder()
     *                     .value(&#34;P5DTL0K&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Default Global Ruleset
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetRulesetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var defaultGlobal = PagerdutyFunctions.getRuleset(GetRulesetArgs.builder()
     *             .name(&#34;Default Global&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRulesetResult> getRulesetPlain(GetRulesetPlainArgs args) {
        return getRulesetPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [ruleset](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODE3MQ-list-rulesets) that you can use for managing and grouping [event rules](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODE3Ng-list-event-rules).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetRulesetArgs;
     * import com.pulumi.pagerduty.RulesetRule;
     * import com.pulumi.pagerduty.RulesetRuleArgs;
     * import com.pulumi.pagerduty.inputs.RulesetRuleConditionsArgs;
     * import com.pulumi.pagerduty.inputs.RulesetRuleActionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PagerdutyFunctions.getRuleset(GetRulesetArgs.builder()
     *             .name(&#34;My Ruleset&#34;)
     *             .build());
     * 
     *         var foo = new RulesetRule(&#34;foo&#34;, RulesetRuleArgs.builder()        
     *             .ruleset(example.applyValue(getRulesetResult -&gt; getRulesetResult.id()))
     *             .position(0)
     *             .disabled(&#34;false&#34;)
     *             .conditions(RulesetRuleConditionsArgs.builder()
     *                 .operator(&#34;and&#34;)
     *                 .subconditions(                
     *                     RulesetRuleConditionsSubconditionArgs.builder()
     *                         .operator(&#34;contains&#34;)
     *                         .parameters(RulesetRuleConditionsSubconditionParameterArgs.builder()
     *                             .value(&#34;disk space&#34;)
     *                             .path(&#34;payload.summary&#34;)
     *                             .build())
     *                         .build(),
     *                     RulesetRuleConditionsSubconditionArgs.builder()
     *                         .operator(&#34;contains&#34;)
     *                         .parameters(RulesetRuleConditionsSubconditionParameterArgs.builder()
     *                             .value(&#34;db&#34;)
     *                             .path(&#34;payload.source&#34;)
     *                             .build())
     *                         .build())
     *                 .build())
     *             .actions(RulesetRuleActionsArgs.builder()
     *                 .routes(RulesetRuleActionsRouteArgs.builder()
     *                     .value(&#34;P5DTL0K&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Default Global Ruleset
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetRulesetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var defaultGlobal = PagerdutyFunctions.getRuleset(GetRulesetArgs.builder()
     *             .name(&#34;Default Global&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRulesetResult> getRuleset(GetRulesetArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("pagerduty:index/getRuleset:getRuleset", TypeShape.of(GetRulesetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [ruleset](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODE3MQ-list-rulesets) that you can use for managing and grouping [event rules](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODE3Ng-list-event-rules).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetRulesetArgs;
     * import com.pulumi.pagerduty.RulesetRule;
     * import com.pulumi.pagerduty.RulesetRuleArgs;
     * import com.pulumi.pagerduty.inputs.RulesetRuleConditionsArgs;
     * import com.pulumi.pagerduty.inputs.RulesetRuleActionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PagerdutyFunctions.getRuleset(GetRulesetArgs.builder()
     *             .name(&#34;My Ruleset&#34;)
     *             .build());
     * 
     *         var foo = new RulesetRule(&#34;foo&#34;, RulesetRuleArgs.builder()        
     *             .ruleset(example.applyValue(getRulesetResult -&gt; getRulesetResult.id()))
     *             .position(0)
     *             .disabled(&#34;false&#34;)
     *             .conditions(RulesetRuleConditionsArgs.builder()
     *                 .operator(&#34;and&#34;)
     *                 .subconditions(                
     *                     RulesetRuleConditionsSubconditionArgs.builder()
     *                         .operator(&#34;contains&#34;)
     *                         .parameters(RulesetRuleConditionsSubconditionParameterArgs.builder()
     *                             .value(&#34;disk space&#34;)
     *                             .path(&#34;payload.summary&#34;)
     *                             .build())
     *                         .build(),
     *                     RulesetRuleConditionsSubconditionArgs.builder()
     *                         .operator(&#34;contains&#34;)
     *                         .parameters(RulesetRuleConditionsSubconditionParameterArgs.builder()
     *                             .value(&#34;db&#34;)
     *                             .path(&#34;payload.source&#34;)
     *                             .build())
     *                         .build())
     *                 .build())
     *             .actions(RulesetRuleActionsArgs.builder()
     *                 .routes(RulesetRuleActionsRouteArgs.builder()
     *                     .value(&#34;P5DTL0K&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * ### Default Global Ruleset
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetRulesetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var defaultGlobal = PagerdutyFunctions.getRuleset(GetRulesetArgs.builder()
     *             .name(&#34;Default Global&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRulesetResult> getRulesetPlain(GetRulesetPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("pagerduty:index/getRuleset:getRuleset", TypeShape.of(GetRulesetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [schedule](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODE4MQ-list-schedules) that you can use for other PagerDuty resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetScheduleArgs;
     * import com.pulumi.pagerduty.EscalationPolicy;
     * import com.pulumi.pagerduty.EscalationPolicyArgs;
     * import com.pulumi.pagerduty.inputs.EscalationPolicyRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PagerdutyFunctions.getSchedule(GetScheduleArgs.builder()
     *             .name(&#34;Daily Engineering Rotation&#34;)
     *             .build());
     * 
     *         var foo = new EscalationPolicy(&#34;foo&#34;, EscalationPolicyArgs.builder()        
     *             .numLoops(2)
     *             .rules(EscalationPolicyRuleArgs.builder()
     *                 .escalationDelayInMinutes(10)
     *                 .targets(EscalationPolicyRuleTargetArgs.builder()
     *                     .type(&#34;schedule&#34;)
     *                     .id(test.applyValue(getScheduleResult -&gt; getScheduleResult.id()))
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetScheduleResult> getSchedule(GetScheduleArgs args) {
        return getSchedule(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [schedule](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODE4MQ-list-schedules) that you can use for other PagerDuty resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetScheduleArgs;
     * import com.pulumi.pagerduty.EscalationPolicy;
     * import com.pulumi.pagerduty.EscalationPolicyArgs;
     * import com.pulumi.pagerduty.inputs.EscalationPolicyRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PagerdutyFunctions.getSchedule(GetScheduleArgs.builder()
     *             .name(&#34;Daily Engineering Rotation&#34;)
     *             .build());
     * 
     *         var foo = new EscalationPolicy(&#34;foo&#34;, EscalationPolicyArgs.builder()        
     *             .numLoops(2)
     *             .rules(EscalationPolicyRuleArgs.builder()
     *                 .escalationDelayInMinutes(10)
     *                 .targets(EscalationPolicyRuleTargetArgs.builder()
     *                     .type(&#34;schedule&#34;)
     *                     .id(test.applyValue(getScheduleResult -&gt; getScheduleResult.id()))
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetScheduleResult> getSchedulePlain(GetSchedulePlainArgs args) {
        return getSchedulePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [schedule](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODE4MQ-list-schedules) that you can use for other PagerDuty resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetScheduleArgs;
     * import com.pulumi.pagerduty.EscalationPolicy;
     * import com.pulumi.pagerduty.EscalationPolicyArgs;
     * import com.pulumi.pagerduty.inputs.EscalationPolicyRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PagerdutyFunctions.getSchedule(GetScheduleArgs.builder()
     *             .name(&#34;Daily Engineering Rotation&#34;)
     *             .build());
     * 
     *         var foo = new EscalationPolicy(&#34;foo&#34;, EscalationPolicyArgs.builder()        
     *             .numLoops(2)
     *             .rules(EscalationPolicyRuleArgs.builder()
     *                 .escalationDelayInMinutes(10)
     *                 .targets(EscalationPolicyRuleTargetArgs.builder()
     *                     .type(&#34;schedule&#34;)
     *                     .id(test.applyValue(getScheduleResult -&gt; getScheduleResult.id()))
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetScheduleResult> getSchedule(GetScheduleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("pagerduty:index/getSchedule:getSchedule", TypeShape.of(GetScheduleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [schedule](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODE4MQ-list-schedules) that you can use for other PagerDuty resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetScheduleArgs;
     * import com.pulumi.pagerduty.EscalationPolicy;
     * import com.pulumi.pagerduty.EscalationPolicyArgs;
     * import com.pulumi.pagerduty.inputs.EscalationPolicyRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PagerdutyFunctions.getSchedule(GetScheduleArgs.builder()
     *             .name(&#34;Daily Engineering Rotation&#34;)
     *             .build());
     * 
     *         var foo = new EscalationPolicy(&#34;foo&#34;, EscalationPolicyArgs.builder()        
     *             .numLoops(2)
     *             .rules(EscalationPolicyRuleArgs.builder()
     *                 .escalationDelayInMinutes(10)
     *                 .targets(EscalationPolicyRuleTargetArgs.builder()
     *                     .type(&#34;schedule&#34;)
     *                     .id(test.applyValue(getScheduleResult -&gt; getScheduleResult.id()))
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetScheduleResult> getSchedulePlain(GetSchedulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("pagerduty:index/getSchedule:getSchedule", TypeShape.of(GetScheduleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [service](https://api-reference.pagerduty.com/#!/Services/get_services).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetServiceArgs;
     * import com.pulumi.pagerduty.inputs.GetVendorArgs;
     * import com.pulumi.pagerduty.ServiceIntegration;
     * import com.pulumi.pagerduty.ServiceIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleService = PagerdutyFunctions.getService(GetServiceArgs.builder()
     *             .name(&#34;My Service&#34;)
     *             .build());
     * 
     *         final var datadog = PagerdutyFunctions.getVendor(GetVendorArgs.builder()
     *             .name(&#34;Datadog&#34;)
     *             .build());
     * 
     *         var exampleServiceIntegration = new ServiceIntegration(&#34;exampleServiceIntegration&#34;, ServiceIntegrationArgs.builder()        
     *             .vendor(datadog.applyValue(getVendorResult -&gt; getVendorResult.id()))
     *             .service(exampleService.applyValue(getServiceResult -&gt; getServiceResult.id()))
     *             .type(&#34;generic_events_api_inbound_integration&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args) {
        return getService(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [service](https://api-reference.pagerduty.com/#!/Services/get_services).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetServiceArgs;
     * import com.pulumi.pagerduty.inputs.GetVendorArgs;
     * import com.pulumi.pagerduty.ServiceIntegration;
     * import com.pulumi.pagerduty.ServiceIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleService = PagerdutyFunctions.getService(GetServiceArgs.builder()
     *             .name(&#34;My Service&#34;)
     *             .build());
     * 
     *         final var datadog = PagerdutyFunctions.getVendor(GetVendorArgs.builder()
     *             .name(&#34;Datadog&#34;)
     *             .build());
     * 
     *         var exampleServiceIntegration = new ServiceIntegration(&#34;exampleServiceIntegration&#34;, ServiceIntegrationArgs.builder()        
     *             .vendor(datadog.applyValue(getVendorResult -&gt; getVendorResult.id()))
     *             .service(exampleService.applyValue(getServiceResult -&gt; getServiceResult.id()))
     *             .type(&#34;generic_events_api_inbound_integration&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args) {
        return getServicePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [service](https://api-reference.pagerduty.com/#!/Services/get_services).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetServiceArgs;
     * import com.pulumi.pagerduty.inputs.GetVendorArgs;
     * import com.pulumi.pagerduty.ServiceIntegration;
     * import com.pulumi.pagerduty.ServiceIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleService = PagerdutyFunctions.getService(GetServiceArgs.builder()
     *             .name(&#34;My Service&#34;)
     *             .build());
     * 
     *         final var datadog = PagerdutyFunctions.getVendor(GetVendorArgs.builder()
     *             .name(&#34;Datadog&#34;)
     *             .build());
     * 
     *         var exampleServiceIntegration = new ServiceIntegration(&#34;exampleServiceIntegration&#34;, ServiceIntegrationArgs.builder()        
     *             .vendor(datadog.applyValue(getVendorResult -&gt; getVendorResult.id()))
     *             .service(exampleService.applyValue(getServiceResult -&gt; getServiceResult.id()))
     *             .type(&#34;generic_events_api_inbound_integration&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("pagerduty:index/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [service](https://api-reference.pagerduty.com/#!/Services/get_services).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetServiceArgs;
     * import com.pulumi.pagerduty.inputs.GetVendorArgs;
     * import com.pulumi.pagerduty.ServiceIntegration;
     * import com.pulumi.pagerduty.ServiceIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleService = PagerdutyFunctions.getService(GetServiceArgs.builder()
     *             .name(&#34;My Service&#34;)
     *             .build());
     * 
     *         final var datadog = PagerdutyFunctions.getVendor(GetVendorArgs.builder()
     *             .name(&#34;Datadog&#34;)
     *             .build());
     * 
     *         var exampleServiceIntegration = new ServiceIntegration(&#34;exampleServiceIntegration&#34;, ServiceIntegrationArgs.builder()        
     *             .vendor(datadog.applyValue(getVendorResult -&gt; getVendorResult.id()))
     *             .service(exampleService.applyValue(getServiceResult -&gt; getServiceResult.id()))
     *             .type(&#34;generic_events_api_inbound_integration&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("pagerduty:index/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific service_integration.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetServiceIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PagerdutyFunctions.getServiceIntegration(GetServiceIntegrationArgs.builder()
     *             .integrationSummary(&#34;Datadog&#34;)
     *             .serviceName(&#34;My Service&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetServiceIntegrationResult> getServiceIntegration(GetServiceIntegrationArgs args) {
        return getServiceIntegration(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific service_integration.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetServiceIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PagerdutyFunctions.getServiceIntegration(GetServiceIntegrationArgs.builder()
     *             .integrationSummary(&#34;Datadog&#34;)
     *             .serviceName(&#34;My Service&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetServiceIntegrationResult> getServiceIntegrationPlain(GetServiceIntegrationPlainArgs args) {
        return getServiceIntegrationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific service_integration.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetServiceIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PagerdutyFunctions.getServiceIntegration(GetServiceIntegrationArgs.builder()
     *             .integrationSummary(&#34;Datadog&#34;)
     *             .serviceName(&#34;My Service&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetServiceIntegrationResult> getServiceIntegration(GetServiceIntegrationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("pagerduty:index/getServiceIntegration:getServiceIntegration", TypeShape.of(GetServiceIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific service_integration.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetServiceIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PagerdutyFunctions.getServiceIntegration(GetServiceIntegrationArgs.builder()
     *             .integrationSummary(&#34;Datadog&#34;)
     *             .serviceName(&#34;My Service&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetServiceIntegrationResult> getServiceIntegrationPlain(GetServiceIntegrationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("pagerduty:index/getServiceIntegration:getServiceIntegration", TypeShape.of(GetServiceIntegrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [tag](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIxNw-list-tags) that you can use to assign to users, teams, and escalation_policies.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetUserArgs;
     * import com.pulumi.pagerduty.inputs.GetTagArgs;
     * import com.pulumi.pagerduty.TagAssignment;
     * import com.pulumi.pagerduty.TagAssignmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var me = PagerdutyFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;me@example.com&#34;)
     *             .build());
     * 
     *         final var devops = PagerdutyFunctions.getTag(GetTagArgs.builder()
     *             .label(&#34;devops&#34;)
     *             .build());
     * 
     *         var foo = new TagAssignment(&#34;foo&#34;, TagAssignmentArgs.builder()        
     *             .tagId(devops.applyValue(getTagResult -&gt; getTagResult.id()))
     *             .entityId(me.applyValue(getUserResult -&gt; getUserResult.id()))
     *             .entityType(&#34;users&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTagResult> getTag(GetTagArgs args) {
        return getTag(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [tag](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIxNw-list-tags) that you can use to assign to users, teams, and escalation_policies.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetUserArgs;
     * import com.pulumi.pagerduty.inputs.GetTagArgs;
     * import com.pulumi.pagerduty.TagAssignment;
     * import com.pulumi.pagerduty.TagAssignmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var me = PagerdutyFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;me@example.com&#34;)
     *             .build());
     * 
     *         final var devops = PagerdutyFunctions.getTag(GetTagArgs.builder()
     *             .label(&#34;devops&#34;)
     *             .build());
     * 
     *         var foo = new TagAssignment(&#34;foo&#34;, TagAssignmentArgs.builder()        
     *             .tagId(devops.applyValue(getTagResult -&gt; getTagResult.id()))
     *             .entityId(me.applyValue(getUserResult -&gt; getUserResult.id()))
     *             .entityType(&#34;users&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTagResult> getTagPlain(GetTagPlainArgs args) {
        return getTagPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [tag](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIxNw-list-tags) that you can use to assign to users, teams, and escalation_policies.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetUserArgs;
     * import com.pulumi.pagerduty.inputs.GetTagArgs;
     * import com.pulumi.pagerduty.TagAssignment;
     * import com.pulumi.pagerduty.TagAssignmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var me = PagerdutyFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;me@example.com&#34;)
     *             .build());
     * 
     *         final var devops = PagerdutyFunctions.getTag(GetTagArgs.builder()
     *             .label(&#34;devops&#34;)
     *             .build());
     * 
     *         var foo = new TagAssignment(&#34;foo&#34;, TagAssignmentArgs.builder()        
     *             .tagId(devops.applyValue(getTagResult -&gt; getTagResult.id()))
     *             .entityId(me.applyValue(getUserResult -&gt; getUserResult.id()))
     *             .entityType(&#34;users&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTagResult> getTag(GetTagArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("pagerduty:index/getTag:getTag", TypeShape.of(GetTagResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [tag](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIxNw-list-tags) that you can use to assign to users, teams, and escalation_policies.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetUserArgs;
     * import com.pulumi.pagerduty.inputs.GetTagArgs;
     * import com.pulumi.pagerduty.TagAssignment;
     * import com.pulumi.pagerduty.TagAssignmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var me = PagerdutyFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;me@example.com&#34;)
     *             .build());
     * 
     *         final var devops = PagerdutyFunctions.getTag(GetTagArgs.builder()
     *             .label(&#34;devops&#34;)
     *             .build());
     * 
     *         var foo = new TagAssignment(&#34;foo&#34;, TagAssignmentArgs.builder()        
     *             .tagId(devops.applyValue(getTagResult -&gt; getTagResult.id()))
     *             .entityId(me.applyValue(getUserResult -&gt; getUserResult.id()))
     *             .entityType(&#34;users&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTagResult> getTagPlain(GetTagPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("pagerduty:index/getTag:getTag", TypeShape.of(GetTagResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [team](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIyMw-list-teams) that you can use for other PagerDuty resources.
     * 
     * ## Example Usage
     * 
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetUserArgs;
     * import com.pulumi.pagerduty.inputs.GetTeamArgs;
     * import com.pulumi.pagerduty.EscalationPolicy;
     * import com.pulumi.pagerduty.EscalationPolicyArgs;
     * import com.pulumi.pagerduty.inputs.EscalationPolicyRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var me = PagerdutyFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;me@example.com&#34;)
     *             .build());
     * 
     *         final var devops = PagerdutyFunctions.getTeam(GetTeamArgs.builder()
     *             .name(&#34;devops&#34;)
     *             .build());
     * 
     *         var foo = new EscalationPolicy(&#34;foo&#34;, EscalationPolicyArgs.builder()        
     *             .numLoops(2)
     *             .teams(devops.applyValue(getTeamResult -&gt; getTeamResult.id()))
     *             .rules(EscalationPolicyRuleArgs.builder()
     *                 .escalationDelayInMinutes(10)
     *                 .targets(EscalationPolicyRuleTargetArgs.builder()
     *                     .type(&#34;user&#34;)
     *                     .id(me.applyValue(getUserResult -&gt; getUserResult.id()))
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTeamResult> getTeam(GetTeamArgs args) {
        return getTeam(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [team](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIyMw-list-teams) that you can use for other PagerDuty resources.
     * 
     * ## Example Usage
     * 
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetUserArgs;
     * import com.pulumi.pagerduty.inputs.GetTeamArgs;
     * import com.pulumi.pagerduty.EscalationPolicy;
     * import com.pulumi.pagerduty.EscalationPolicyArgs;
     * import com.pulumi.pagerduty.inputs.EscalationPolicyRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var me = PagerdutyFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;me@example.com&#34;)
     *             .build());
     * 
     *         final var devops = PagerdutyFunctions.getTeam(GetTeamArgs.builder()
     *             .name(&#34;devops&#34;)
     *             .build());
     * 
     *         var foo = new EscalationPolicy(&#34;foo&#34;, EscalationPolicyArgs.builder()        
     *             .numLoops(2)
     *             .teams(devops.applyValue(getTeamResult -&gt; getTeamResult.id()))
     *             .rules(EscalationPolicyRuleArgs.builder()
     *                 .escalationDelayInMinutes(10)
     *                 .targets(EscalationPolicyRuleTargetArgs.builder()
     *                     .type(&#34;user&#34;)
     *                     .id(me.applyValue(getUserResult -&gt; getUserResult.id()))
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTeamResult> getTeamPlain(GetTeamPlainArgs args) {
        return getTeamPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [team](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIyMw-list-teams) that you can use for other PagerDuty resources.
     * 
     * ## Example Usage
     * 
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetUserArgs;
     * import com.pulumi.pagerduty.inputs.GetTeamArgs;
     * import com.pulumi.pagerduty.EscalationPolicy;
     * import com.pulumi.pagerduty.EscalationPolicyArgs;
     * import com.pulumi.pagerduty.inputs.EscalationPolicyRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var me = PagerdutyFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;me@example.com&#34;)
     *             .build());
     * 
     *         final var devops = PagerdutyFunctions.getTeam(GetTeamArgs.builder()
     *             .name(&#34;devops&#34;)
     *             .build());
     * 
     *         var foo = new EscalationPolicy(&#34;foo&#34;, EscalationPolicyArgs.builder()        
     *             .numLoops(2)
     *             .teams(devops.applyValue(getTeamResult -&gt; getTeamResult.id()))
     *             .rules(EscalationPolicyRuleArgs.builder()
     *                 .escalationDelayInMinutes(10)
     *                 .targets(EscalationPolicyRuleTargetArgs.builder()
     *                     .type(&#34;user&#34;)
     *                     .id(me.applyValue(getUserResult -&gt; getUserResult.id()))
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTeamResult> getTeam(GetTeamArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("pagerduty:index/getTeam:getTeam", TypeShape.of(GetTeamResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [team](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIyMw-list-teams) that you can use for other PagerDuty resources.
     * 
     * ## Example Usage
     * 
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetUserArgs;
     * import com.pulumi.pagerduty.inputs.GetTeamArgs;
     * import com.pulumi.pagerduty.EscalationPolicy;
     * import com.pulumi.pagerduty.EscalationPolicyArgs;
     * import com.pulumi.pagerduty.inputs.EscalationPolicyRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var me = PagerdutyFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;me@example.com&#34;)
     *             .build());
     * 
     *         final var devops = PagerdutyFunctions.getTeam(GetTeamArgs.builder()
     *             .name(&#34;devops&#34;)
     *             .build());
     * 
     *         var foo = new EscalationPolicy(&#34;foo&#34;, EscalationPolicyArgs.builder()        
     *             .numLoops(2)
     *             .teams(devops.applyValue(getTeamResult -&gt; getTeamResult.id()))
     *             .rules(EscalationPolicyRuleArgs.builder()
     *                 .escalationDelayInMinutes(10)
     *                 .targets(EscalationPolicyRuleTargetArgs.builder()
     *                     .type(&#34;user&#34;)
     *                     .id(me.applyValue(getUserResult -&gt; getUserResult.id()))
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTeamResult> getTeamPlain(GetTeamPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("pagerduty:index/getTeam:getTeam", TypeShape.of(GetTeamResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [user](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIzMw-list-users) that you can use for other PagerDuty resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetUserArgs;
     * import com.pulumi.pagerduty.EscalationPolicy;
     * import com.pulumi.pagerduty.EscalationPolicyArgs;
     * import com.pulumi.pagerduty.inputs.EscalationPolicyRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var me = PagerdutyFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;me@example.com&#34;)
     *             .build());
     * 
     *         var foo = new EscalationPolicy(&#34;foo&#34;, EscalationPolicyArgs.builder()        
     *             .numLoops(2)
     *             .rules(EscalationPolicyRuleArgs.builder()
     *                 .escalationDelayInMinutes(10)
     *                 .targets(EscalationPolicyRuleTargetArgs.builder()
     *                     .type(&#34;user&#34;)
     *                     .id(me.applyValue(getUserResult -&gt; getUserResult.id()))
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUserResult> getUser(GetUserArgs args) {
        return getUser(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [user](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIzMw-list-users) that you can use for other PagerDuty resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetUserArgs;
     * import com.pulumi.pagerduty.EscalationPolicy;
     * import com.pulumi.pagerduty.EscalationPolicyArgs;
     * import com.pulumi.pagerduty.inputs.EscalationPolicyRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var me = PagerdutyFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;me@example.com&#34;)
     *             .build());
     * 
     *         var foo = new EscalationPolicy(&#34;foo&#34;, EscalationPolicyArgs.builder()        
     *             .numLoops(2)
     *             .rules(EscalationPolicyRuleArgs.builder()
     *                 .escalationDelayInMinutes(10)
     *                 .targets(EscalationPolicyRuleTargetArgs.builder()
     *                     .type(&#34;user&#34;)
     *                     .id(me.applyValue(getUserResult -&gt; getUserResult.id()))
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain(GetUserPlainArgs args) {
        return getUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [user](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIzMw-list-users) that you can use for other PagerDuty resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetUserArgs;
     * import com.pulumi.pagerduty.EscalationPolicy;
     * import com.pulumi.pagerduty.EscalationPolicyArgs;
     * import com.pulumi.pagerduty.inputs.EscalationPolicyRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var me = PagerdutyFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;me@example.com&#34;)
     *             .build());
     * 
     *         var foo = new EscalationPolicy(&#34;foo&#34;, EscalationPolicyArgs.builder()        
     *             .numLoops(2)
     *             .rules(EscalationPolicyRuleArgs.builder()
     *                 .escalationDelayInMinutes(10)
     *                 .targets(EscalationPolicyRuleTargetArgs.builder()
     *                     .type(&#34;user&#34;)
     *                     .id(me.applyValue(getUserResult -&gt; getUserResult.id()))
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUserResult> getUser(GetUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("pagerduty:index/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [user](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIzMw-list-users) that you can use for other PagerDuty resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetUserArgs;
     * import com.pulumi.pagerduty.EscalationPolicy;
     * import com.pulumi.pagerduty.EscalationPolicyArgs;
     * import com.pulumi.pagerduty.inputs.EscalationPolicyRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var me = PagerdutyFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;me@example.com&#34;)
     *             .build());
     * 
     *         var foo = new EscalationPolicy(&#34;foo&#34;, EscalationPolicyArgs.builder()        
     *             .numLoops(2)
     *             .rules(EscalationPolicyRuleArgs.builder()
     *                 .escalationDelayInMinutes(10)
     *                 .targets(EscalationPolicyRuleTargetArgs.builder()
     *                     .type(&#34;user&#34;)
     *                     .id(me.applyValue(getUserResult -&gt; getUserResult.id()))
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain(GetUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("pagerduty:index/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [contact method](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIzOQ-list-a-user-s-contact-methods) of a PagerDuty [user](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIzMw-list-users) that you can use for other PagerDuty resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetUserArgs;
     * import com.pulumi.pagerduty.inputs.GetUserContactMethodArgs;
     * import com.pulumi.pagerduty.UserNotificationRule;
     * import com.pulumi.pagerduty.UserNotificationRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var me = PagerdutyFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;me@example.com&#34;)
     *             .build());
     * 
     *         final var phonePush = PagerdutyFunctions.getUserContactMethod(GetUserContactMethodArgs.builder()
     *             .userId(me.applyValue(getUserResult -&gt; getUserResult.id()))
     *             .type(&#34;push_notification_contact_method&#34;)
     *             .label(&#34;iPhone (John)&#34;)
     *             .build());
     * 
     *         var lowUrgencySms = new UserNotificationRule(&#34;lowUrgencySms&#34;, UserNotificationRuleArgs.builder()        
     *             .userId(me.applyValue(getUserResult -&gt; getUserResult.id()))
     *             .startDelayInMinutes(5)
     *             .urgency(&#34;high&#34;)
     *             .contactMethod(Map.ofEntries(
     *                 Map.entry(&#34;type&#34;, &#34;push_notification_contact_method&#34;),
     *                 Map.entry(&#34;id&#34;, phonePush.applyValue(getUserContactMethodResult -&gt; getUserContactMethodResult.id()))
     *             ))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUserContactMethodResult> getUserContactMethod(GetUserContactMethodArgs args) {
        return getUserContactMethod(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [contact method](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIzOQ-list-a-user-s-contact-methods) of a PagerDuty [user](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIzMw-list-users) that you can use for other PagerDuty resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetUserArgs;
     * import com.pulumi.pagerduty.inputs.GetUserContactMethodArgs;
     * import com.pulumi.pagerduty.UserNotificationRule;
     * import com.pulumi.pagerduty.UserNotificationRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var me = PagerdutyFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;me@example.com&#34;)
     *             .build());
     * 
     *         final var phonePush = PagerdutyFunctions.getUserContactMethod(GetUserContactMethodArgs.builder()
     *             .userId(me.applyValue(getUserResult -&gt; getUserResult.id()))
     *             .type(&#34;push_notification_contact_method&#34;)
     *             .label(&#34;iPhone (John)&#34;)
     *             .build());
     * 
     *         var lowUrgencySms = new UserNotificationRule(&#34;lowUrgencySms&#34;, UserNotificationRuleArgs.builder()        
     *             .userId(me.applyValue(getUserResult -&gt; getUserResult.id()))
     *             .startDelayInMinutes(5)
     *             .urgency(&#34;high&#34;)
     *             .contactMethod(Map.ofEntries(
     *                 Map.entry(&#34;type&#34;, &#34;push_notification_contact_method&#34;),
     *                 Map.entry(&#34;id&#34;, phonePush.applyValue(getUserContactMethodResult -&gt; getUserContactMethodResult.id()))
     *             ))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUserContactMethodResult> getUserContactMethodPlain(GetUserContactMethodPlainArgs args) {
        return getUserContactMethodPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [contact method](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIzOQ-list-a-user-s-contact-methods) of a PagerDuty [user](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIzMw-list-users) that you can use for other PagerDuty resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetUserArgs;
     * import com.pulumi.pagerduty.inputs.GetUserContactMethodArgs;
     * import com.pulumi.pagerduty.UserNotificationRule;
     * import com.pulumi.pagerduty.UserNotificationRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var me = PagerdutyFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;me@example.com&#34;)
     *             .build());
     * 
     *         final var phonePush = PagerdutyFunctions.getUserContactMethod(GetUserContactMethodArgs.builder()
     *             .userId(me.applyValue(getUserResult -&gt; getUserResult.id()))
     *             .type(&#34;push_notification_contact_method&#34;)
     *             .label(&#34;iPhone (John)&#34;)
     *             .build());
     * 
     *         var lowUrgencySms = new UserNotificationRule(&#34;lowUrgencySms&#34;, UserNotificationRuleArgs.builder()        
     *             .userId(me.applyValue(getUserResult -&gt; getUserResult.id()))
     *             .startDelayInMinutes(5)
     *             .urgency(&#34;high&#34;)
     *             .contactMethod(Map.ofEntries(
     *                 Map.entry(&#34;type&#34;, &#34;push_notification_contact_method&#34;),
     *                 Map.entry(&#34;id&#34;, phonePush.applyValue(getUserContactMethodResult -&gt; getUserContactMethodResult.id()))
     *             ))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUserContactMethodResult> getUserContactMethod(GetUserContactMethodArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("pagerduty:index/getUserContactMethod:getUserContactMethod", TypeShape.of(GetUserContactMethodResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [contact method](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIzOQ-list-a-user-s-contact-methods) of a PagerDuty [user](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIzMw-list-users) that you can use for other PagerDuty resources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetUserArgs;
     * import com.pulumi.pagerduty.inputs.GetUserContactMethodArgs;
     * import com.pulumi.pagerduty.UserNotificationRule;
     * import com.pulumi.pagerduty.UserNotificationRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var me = PagerdutyFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;me@example.com&#34;)
     *             .build());
     * 
     *         final var phonePush = PagerdutyFunctions.getUserContactMethod(GetUserContactMethodArgs.builder()
     *             .userId(me.applyValue(getUserResult -&gt; getUserResult.id()))
     *             .type(&#34;push_notification_contact_method&#34;)
     *             .label(&#34;iPhone (John)&#34;)
     *             .build());
     * 
     *         var lowUrgencySms = new UserNotificationRule(&#34;lowUrgencySms&#34;, UserNotificationRuleArgs.builder()        
     *             .userId(me.applyValue(getUserResult -&gt; getUserResult.id()))
     *             .startDelayInMinutes(5)
     *             .urgency(&#34;high&#34;)
     *             .contactMethod(Map.ofEntries(
     *                 Map.entry(&#34;type&#34;, &#34;push_notification_contact_method&#34;),
     *                 Map.entry(&#34;id&#34;, phonePush.applyValue(getUserContactMethodResult -&gt; getUserContactMethodResult.id()))
     *             ))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUserContactMethodResult> getUserContactMethodPlain(GetUserContactMethodPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("pagerduty:index/getUserContactMethod:getUserContactMethod", TypeShape.of(GetUserContactMethodResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about [list of users](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIzMw-list-users) that you can use for other PagerDuty resources, optionally filtering by team ids.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetTeamArgs;
     * import com.pulumi.pagerduty.inputs.GetUserArgs;
     * import com.pulumi.pagerduty.User;
     * import com.pulumi.pagerduty.UserArgs;
     * import com.pulumi.pagerduty.TeamMembership;
     * import com.pulumi.pagerduty.TeamMembershipArgs;
     * import com.pulumi.pagerduty.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var devops = PagerdutyFunctions.getTeam(GetTeamArgs.builder()
     *             .name(&#34;devops&#34;)
     *             .build());
     * 
     *         final var me = PagerdutyFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;me@example.com&#34;)
     *             .build());
     * 
     *         var exampleWTeam = new User(&#34;exampleWTeam&#34;, UserArgs.builder()        
     *             .email(&#34;user-with-team@example.com&#34;)
     *             .build());
     * 
     *         var example = new TeamMembership(&#34;example&#34;, TeamMembershipArgs.builder()        
     *             .teamId(pagerduty_team.devops().id())
     *             .userId(exampleWTeam.id())
     *             .build());
     * 
     *         final var allUsers = PagerdutyFunctions.getUsers();
     * 
     *         final var fromDevopsTeam = PagerdutyFunctions.getUsers(GetUsersArgs.builder()
     *             .teamIds(pagerduty_team.devops().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUsersResult> getUsers() {
        return getUsers(GetUsersArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about [list of users](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIzMw-list-users) that you can use for other PagerDuty resources, optionally filtering by team ids.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetTeamArgs;
     * import com.pulumi.pagerduty.inputs.GetUserArgs;
     * import com.pulumi.pagerduty.User;
     * import com.pulumi.pagerduty.UserArgs;
     * import com.pulumi.pagerduty.TeamMembership;
     * import com.pulumi.pagerduty.TeamMembershipArgs;
     * import com.pulumi.pagerduty.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var devops = PagerdutyFunctions.getTeam(GetTeamArgs.builder()
     *             .name(&#34;devops&#34;)
     *             .build());
     * 
     *         final var me = PagerdutyFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;me@example.com&#34;)
     *             .build());
     * 
     *         var exampleWTeam = new User(&#34;exampleWTeam&#34;, UserArgs.builder()        
     *             .email(&#34;user-with-team@example.com&#34;)
     *             .build());
     * 
     *         var example = new TeamMembership(&#34;example&#34;, TeamMembershipArgs.builder()        
     *             .teamId(pagerduty_team.devops().id())
     *             .userId(exampleWTeam.id())
     *             .build());
     * 
     *         final var allUsers = PagerdutyFunctions.getUsers();
     * 
     *         final var fromDevopsTeam = PagerdutyFunctions.getUsers(GetUsersArgs.builder()
     *             .teamIds(pagerduty_team.devops().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUsersResult> getUsersPlain() {
        return getUsersPlain(GetUsersPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about [list of users](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIzMw-list-users) that you can use for other PagerDuty resources, optionally filtering by team ids.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetTeamArgs;
     * import com.pulumi.pagerduty.inputs.GetUserArgs;
     * import com.pulumi.pagerduty.User;
     * import com.pulumi.pagerduty.UserArgs;
     * import com.pulumi.pagerduty.TeamMembership;
     * import com.pulumi.pagerduty.TeamMembershipArgs;
     * import com.pulumi.pagerduty.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var devops = PagerdutyFunctions.getTeam(GetTeamArgs.builder()
     *             .name(&#34;devops&#34;)
     *             .build());
     * 
     *         final var me = PagerdutyFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;me@example.com&#34;)
     *             .build());
     * 
     *         var exampleWTeam = new User(&#34;exampleWTeam&#34;, UserArgs.builder()        
     *             .email(&#34;user-with-team@example.com&#34;)
     *             .build());
     * 
     *         var example = new TeamMembership(&#34;example&#34;, TeamMembershipArgs.builder()        
     *             .teamId(pagerduty_team.devops().id())
     *             .userId(exampleWTeam.id())
     *             .build());
     * 
     *         final var allUsers = PagerdutyFunctions.getUsers();
     * 
     *         final var fromDevopsTeam = PagerdutyFunctions.getUsers(GetUsersArgs.builder()
     *             .teamIds(pagerduty_team.devops().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUsersResult> getUsers(GetUsersArgs args) {
        return getUsers(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about [list of users](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIzMw-list-users) that you can use for other PagerDuty resources, optionally filtering by team ids.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetTeamArgs;
     * import com.pulumi.pagerduty.inputs.GetUserArgs;
     * import com.pulumi.pagerduty.User;
     * import com.pulumi.pagerduty.UserArgs;
     * import com.pulumi.pagerduty.TeamMembership;
     * import com.pulumi.pagerduty.TeamMembershipArgs;
     * import com.pulumi.pagerduty.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var devops = PagerdutyFunctions.getTeam(GetTeamArgs.builder()
     *             .name(&#34;devops&#34;)
     *             .build());
     * 
     *         final var me = PagerdutyFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;me@example.com&#34;)
     *             .build());
     * 
     *         var exampleWTeam = new User(&#34;exampleWTeam&#34;, UserArgs.builder()        
     *             .email(&#34;user-with-team@example.com&#34;)
     *             .build());
     * 
     *         var example = new TeamMembership(&#34;example&#34;, TeamMembershipArgs.builder()        
     *             .teamId(pagerduty_team.devops().id())
     *             .userId(exampleWTeam.id())
     *             .build());
     * 
     *         final var allUsers = PagerdutyFunctions.getUsers();
     * 
     *         final var fromDevopsTeam = PagerdutyFunctions.getUsers(GetUsersArgs.builder()
     *             .teamIds(pagerduty_team.devops().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUsersResult> getUsersPlain(GetUsersPlainArgs args) {
        return getUsersPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about [list of users](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIzMw-list-users) that you can use for other PagerDuty resources, optionally filtering by team ids.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetTeamArgs;
     * import com.pulumi.pagerduty.inputs.GetUserArgs;
     * import com.pulumi.pagerduty.User;
     * import com.pulumi.pagerduty.UserArgs;
     * import com.pulumi.pagerduty.TeamMembership;
     * import com.pulumi.pagerduty.TeamMembershipArgs;
     * import com.pulumi.pagerduty.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var devops = PagerdutyFunctions.getTeam(GetTeamArgs.builder()
     *             .name(&#34;devops&#34;)
     *             .build());
     * 
     *         final var me = PagerdutyFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;me@example.com&#34;)
     *             .build());
     * 
     *         var exampleWTeam = new User(&#34;exampleWTeam&#34;, UserArgs.builder()        
     *             .email(&#34;user-with-team@example.com&#34;)
     *             .build());
     * 
     *         var example = new TeamMembership(&#34;example&#34;, TeamMembershipArgs.builder()        
     *             .teamId(pagerduty_team.devops().id())
     *             .userId(exampleWTeam.id())
     *             .build());
     * 
     *         final var allUsers = PagerdutyFunctions.getUsers();
     * 
     *         final var fromDevopsTeam = PagerdutyFunctions.getUsers(GetUsersArgs.builder()
     *             .teamIds(pagerduty_team.devops().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUsersResult> getUsers(GetUsersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("pagerduty:index/getUsers:getUsers", TypeShape.of(GetUsersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about [list of users](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIzMw-list-users) that you can use for other PagerDuty resources, optionally filtering by team ids.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetTeamArgs;
     * import com.pulumi.pagerduty.inputs.GetUserArgs;
     * import com.pulumi.pagerduty.User;
     * import com.pulumi.pagerduty.UserArgs;
     * import com.pulumi.pagerduty.TeamMembership;
     * import com.pulumi.pagerduty.TeamMembershipArgs;
     * import com.pulumi.pagerduty.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var devops = PagerdutyFunctions.getTeam(GetTeamArgs.builder()
     *             .name(&#34;devops&#34;)
     *             .build());
     * 
     *         final var me = PagerdutyFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;me@example.com&#34;)
     *             .build());
     * 
     *         var exampleWTeam = new User(&#34;exampleWTeam&#34;, UserArgs.builder()        
     *             .email(&#34;user-with-team@example.com&#34;)
     *             .build());
     * 
     *         var example = new TeamMembership(&#34;example&#34;, TeamMembershipArgs.builder()        
     *             .teamId(pagerduty_team.devops().id())
     *             .userId(exampleWTeam.id())
     *             .build());
     * 
     *         final var allUsers = PagerdutyFunctions.getUsers();
     * 
     *         final var fromDevopsTeam = PagerdutyFunctions.getUsers(GetUsersArgs.builder()
     *             .teamIds(pagerduty_team.devops().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUsersResult> getUsersPlain(GetUsersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("pagerduty:index/getUsers:getUsers", TypeShape.of(GetUsersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [vendor](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODI1OQ-list-vendors) that you can use for a service integration (e.g. Amazon Cloudwatch, Splunk, Datadog).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetVendorArgs;
     * import com.pulumi.pagerduty.User;
     * import com.pulumi.pagerduty.UserArgs;
     * import com.pulumi.pagerduty.EscalationPolicy;
     * import com.pulumi.pagerduty.EscalationPolicyArgs;
     * import com.pulumi.pagerduty.inputs.EscalationPolicyRuleArgs;
     * import com.pulumi.pagerduty.Service;
     * import com.pulumi.pagerduty.ServiceArgs;
     * import com.pulumi.pagerduty.ServiceIntegration;
     * import com.pulumi.pagerduty.ServiceIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var datadog = PagerdutyFunctions.getVendor(GetVendorArgs.builder()
     *             .name(&#34;Datadog&#34;)
     *             .build());
     * 
     *         var exampleUser = new User(&#34;exampleUser&#34;, UserArgs.builder()        
     *             .email(&#34;125.greenholt.earline@graham.name&#34;)
     *             .teams(pagerduty_team.example().id())
     *             .build());
     * 
     *         var foo = new EscalationPolicy(&#34;foo&#34;, EscalationPolicyArgs.builder()        
     *             .numLoops(2)
     *             .rules(EscalationPolicyRuleArgs.builder()
     *                 .escalationDelayInMinutes(10)
     *                 .targets(EscalationPolicyRuleTargetArgs.builder()
     *                     .type(&#34;user&#34;)
     *                     .id(exampleUser.id())
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var exampleService = new Service(&#34;exampleService&#34;, ServiceArgs.builder()        
     *             .autoResolveTimeout(14400)
     *             .acknowledgementTimeout(600)
     *             .escalationPolicy(pagerduty_escalation_policy.example().id())
     *             .build());
     * 
     *         var exampleServiceIntegration = new ServiceIntegration(&#34;exampleServiceIntegration&#34;, ServiceIntegrationArgs.builder()        
     *             .vendor(datadog.applyValue(getVendorResult -&gt; getVendorResult.id()))
     *             .service(exampleService.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetVendorResult> getVendor(GetVendorArgs args) {
        return getVendor(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [vendor](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODI1OQ-list-vendors) that you can use for a service integration (e.g. Amazon Cloudwatch, Splunk, Datadog).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetVendorArgs;
     * import com.pulumi.pagerduty.User;
     * import com.pulumi.pagerduty.UserArgs;
     * import com.pulumi.pagerduty.EscalationPolicy;
     * import com.pulumi.pagerduty.EscalationPolicyArgs;
     * import com.pulumi.pagerduty.inputs.EscalationPolicyRuleArgs;
     * import com.pulumi.pagerduty.Service;
     * import com.pulumi.pagerduty.ServiceArgs;
     * import com.pulumi.pagerduty.ServiceIntegration;
     * import com.pulumi.pagerduty.ServiceIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var datadog = PagerdutyFunctions.getVendor(GetVendorArgs.builder()
     *             .name(&#34;Datadog&#34;)
     *             .build());
     * 
     *         var exampleUser = new User(&#34;exampleUser&#34;, UserArgs.builder()        
     *             .email(&#34;125.greenholt.earline@graham.name&#34;)
     *             .teams(pagerduty_team.example().id())
     *             .build());
     * 
     *         var foo = new EscalationPolicy(&#34;foo&#34;, EscalationPolicyArgs.builder()        
     *             .numLoops(2)
     *             .rules(EscalationPolicyRuleArgs.builder()
     *                 .escalationDelayInMinutes(10)
     *                 .targets(EscalationPolicyRuleTargetArgs.builder()
     *                     .type(&#34;user&#34;)
     *                     .id(exampleUser.id())
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var exampleService = new Service(&#34;exampleService&#34;, ServiceArgs.builder()        
     *             .autoResolveTimeout(14400)
     *             .acknowledgementTimeout(600)
     *             .escalationPolicy(pagerduty_escalation_policy.example().id())
     *             .build());
     * 
     *         var exampleServiceIntegration = new ServiceIntegration(&#34;exampleServiceIntegration&#34;, ServiceIntegrationArgs.builder()        
     *             .vendor(datadog.applyValue(getVendorResult -&gt; getVendorResult.id()))
     *             .service(exampleService.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetVendorResult> getVendorPlain(GetVendorPlainArgs args) {
        return getVendorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific [vendor](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODI1OQ-list-vendors) that you can use for a service integration (e.g. Amazon Cloudwatch, Splunk, Datadog).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetVendorArgs;
     * import com.pulumi.pagerduty.User;
     * import com.pulumi.pagerduty.UserArgs;
     * import com.pulumi.pagerduty.EscalationPolicy;
     * import com.pulumi.pagerduty.EscalationPolicyArgs;
     * import com.pulumi.pagerduty.inputs.EscalationPolicyRuleArgs;
     * import com.pulumi.pagerduty.Service;
     * import com.pulumi.pagerduty.ServiceArgs;
     * import com.pulumi.pagerduty.ServiceIntegration;
     * import com.pulumi.pagerduty.ServiceIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var datadog = PagerdutyFunctions.getVendor(GetVendorArgs.builder()
     *             .name(&#34;Datadog&#34;)
     *             .build());
     * 
     *         var exampleUser = new User(&#34;exampleUser&#34;, UserArgs.builder()        
     *             .email(&#34;125.greenholt.earline@graham.name&#34;)
     *             .teams(pagerduty_team.example().id())
     *             .build());
     * 
     *         var foo = new EscalationPolicy(&#34;foo&#34;, EscalationPolicyArgs.builder()        
     *             .numLoops(2)
     *             .rules(EscalationPolicyRuleArgs.builder()
     *                 .escalationDelayInMinutes(10)
     *                 .targets(EscalationPolicyRuleTargetArgs.builder()
     *                     .type(&#34;user&#34;)
     *                     .id(exampleUser.id())
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var exampleService = new Service(&#34;exampleService&#34;, ServiceArgs.builder()        
     *             .autoResolveTimeout(14400)
     *             .acknowledgementTimeout(600)
     *             .escalationPolicy(pagerduty_escalation_policy.example().id())
     *             .build());
     * 
     *         var exampleServiceIntegration = new ServiceIntegration(&#34;exampleServiceIntegration&#34;, ServiceIntegrationArgs.builder()        
     *             .vendor(datadog.applyValue(getVendorResult -&gt; getVendorResult.id()))
     *             .service(exampleService.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetVendorResult> getVendor(GetVendorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("pagerduty:index/getVendor:getVendor", TypeShape.of(GetVendorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific [vendor](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODI1OQ-list-vendors) that you can use for a service integration (e.g. Amazon Cloudwatch, Splunk, Datadog).
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.pagerduty.PagerdutyFunctions;
     * import com.pulumi.pagerduty.inputs.GetVendorArgs;
     * import com.pulumi.pagerduty.User;
     * import com.pulumi.pagerduty.UserArgs;
     * import com.pulumi.pagerduty.EscalationPolicy;
     * import com.pulumi.pagerduty.EscalationPolicyArgs;
     * import com.pulumi.pagerduty.inputs.EscalationPolicyRuleArgs;
     * import com.pulumi.pagerduty.Service;
     * import com.pulumi.pagerduty.ServiceArgs;
     * import com.pulumi.pagerduty.ServiceIntegration;
     * import com.pulumi.pagerduty.ServiceIntegrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var datadog = PagerdutyFunctions.getVendor(GetVendorArgs.builder()
     *             .name(&#34;Datadog&#34;)
     *             .build());
     * 
     *         var exampleUser = new User(&#34;exampleUser&#34;, UserArgs.builder()        
     *             .email(&#34;125.greenholt.earline@graham.name&#34;)
     *             .teams(pagerduty_team.example().id())
     *             .build());
     * 
     *         var foo = new EscalationPolicy(&#34;foo&#34;, EscalationPolicyArgs.builder()        
     *             .numLoops(2)
     *             .rules(EscalationPolicyRuleArgs.builder()
     *                 .escalationDelayInMinutes(10)
     *                 .targets(EscalationPolicyRuleTargetArgs.builder()
     *                     .type(&#34;user&#34;)
     *                     .id(exampleUser.id())
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         var exampleService = new Service(&#34;exampleService&#34;, ServiceArgs.builder()        
     *             .autoResolveTimeout(14400)
     *             .acknowledgementTimeout(600)
     *             .escalationPolicy(pagerduty_escalation_policy.example().id())
     *             .build());
     * 
     *         var exampleServiceIntegration = new ServiceIntegration(&#34;exampleServiceIntegration&#34;, ServiceIntegrationArgs.builder()        
     *             .vendor(datadog.applyValue(getVendorResult -&gt; getVendorResult.id()))
     *             .service(exampleService.id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetVendorResult> getVendorPlain(GetVendorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("pagerduty:index/getVendor:getVendor", TypeShape.of(GetVendorResult.class), args, Utilities.withVersion(options));
    }
}
