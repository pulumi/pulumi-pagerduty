// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.pagerduty.inputs.SlackConnectionConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class SlackConnectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final SlackConnectionArgs Empty = new SlackConnectionArgs();

    @Import(name="channelId", required=true)
    private Output<String> channelId;

    public Output<String> channelId() {
        return this.channelId;
    }

    @Import(name="configs", required=true)
    private Output<List<SlackConnectionConfigArgs>> configs;

    public Output<List<SlackConnectionConfigArgs>> configs() {
        return this.configs;
    }

    @Import(name="notificationType", required=true)
    private Output<String> notificationType;

    public Output<String> notificationType() {
        return this.notificationType;
    }

    @Import(name="sourceId", required=true)
    private Output<String> sourceId;

    public Output<String> sourceId() {
        return this.sourceId;
    }

    @Import(name="sourceType", required=true)
    private Output<String> sourceType;

    public Output<String> sourceType() {
        return this.sourceType;
    }

    @Import(name="workspaceId", required=true)
    private Output<String> workspaceId;

    public Output<String> workspaceId() {
        return this.workspaceId;
    }

    private SlackConnectionArgs() {}

    private SlackConnectionArgs(SlackConnectionArgs $) {
        this.channelId = $.channelId;
        this.configs = $.configs;
        this.notificationType = $.notificationType;
        this.sourceId = $.sourceId;
        this.sourceType = $.sourceType;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SlackConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SlackConnectionArgs $;

        public Builder() {
            $ = new SlackConnectionArgs();
        }

        public Builder(SlackConnectionArgs defaults) {
            $ = new SlackConnectionArgs(Objects.requireNonNull(defaults));
        }

        public Builder channelId(Output<String> channelId) {
            $.channelId = channelId;
            return this;
        }

        public Builder channelId(String channelId) {
            return channelId(Output.of(channelId));
        }

        public Builder configs(Output<List<SlackConnectionConfigArgs>> configs) {
            $.configs = configs;
            return this;
        }

        public Builder configs(List<SlackConnectionConfigArgs> configs) {
            return configs(Output.of(configs));
        }

        public Builder configs(SlackConnectionConfigArgs... configs) {
            return configs(List.of(configs));
        }

        public Builder notificationType(Output<String> notificationType) {
            $.notificationType = notificationType;
            return this;
        }

        public Builder notificationType(String notificationType) {
            return notificationType(Output.of(notificationType));
        }

        public Builder sourceId(Output<String> sourceId) {
            $.sourceId = sourceId;
            return this;
        }

        public Builder sourceId(String sourceId) {
            return sourceId(Output.of(sourceId));
        }

        public Builder sourceType(Output<String> sourceType) {
            $.sourceType = sourceType;
            return this;
        }

        public Builder sourceType(String sourceType) {
            return sourceType(Output.of(sourceType));
        }

        public Builder workspaceId(Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public SlackConnectionArgs build() {
            if ($.channelId == null) {
                throw new MissingRequiredPropertyException("SlackConnectionArgs", "channelId");
            }
            if ($.configs == null) {
                throw new MissingRequiredPropertyException("SlackConnectionArgs", "configs");
            }
            if ($.notificationType == null) {
                throw new MissingRequiredPropertyException("SlackConnectionArgs", "notificationType");
            }
            if ($.sourceId == null) {
                throw new MissingRequiredPropertyException("SlackConnectionArgs", "sourceId");
            }
            if ($.sourceType == null) {
                throw new MissingRequiredPropertyException("SlackConnectionArgs", "sourceType");
            }
            if ($.workspaceId == null) {
                throw new MissingRequiredPropertyException("SlackConnectionArgs", "workspaceId");
            }
            return $;
        }
    }

}
