// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserContactMethodArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserContactMethodArgs Empty = new UserContactMethodArgs();

    @Import(name="address", required=true)
    private Output<String> address;

    public Output<String> address() {
        return this.address;
    }

    @Import(name="countryCode")
    private @Nullable Output<Integer> countryCode;

    public Optional<Output<Integer>> countryCode() {
        return Optional.ofNullable(this.countryCode);
    }

    @Import(name="label", required=true)
    private Output<String> label;

    public Output<String> label() {
        return this.label;
    }

    @Import(name="sendShortEmail")
    private @Nullable Output<Boolean> sendShortEmail;

    public Optional<Output<Boolean>> sendShortEmail() {
        return Optional.ofNullable(this.sendShortEmail);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    @Import(name="userId", required=true)
    private Output<String> userId;

    public Output<String> userId() {
        return this.userId;
    }

    private UserContactMethodArgs() {}

    private UserContactMethodArgs(UserContactMethodArgs $) {
        this.address = $.address;
        this.countryCode = $.countryCode;
        this.label = $.label;
        this.sendShortEmail = $.sendShortEmail;
        this.type = $.type;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserContactMethodArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserContactMethodArgs $;

        public Builder() {
            $ = new UserContactMethodArgs();
        }

        public Builder(UserContactMethodArgs defaults) {
            $ = new UserContactMethodArgs(Objects.requireNonNull(defaults));
        }

        public Builder address(Output<String> address) {
            $.address = address;
            return this;
        }

        public Builder address(String address) {
            return address(Output.of(address));
        }

        public Builder countryCode(@Nullable Output<Integer> countryCode) {
            $.countryCode = countryCode;
            return this;
        }

        public Builder countryCode(Integer countryCode) {
            return countryCode(Output.of(countryCode));
        }

        public Builder label(Output<String> label) {
            $.label = label;
            return this;
        }

        public Builder label(String label) {
            return label(Output.of(label));
        }

        public Builder sendShortEmail(@Nullable Output<Boolean> sendShortEmail) {
            $.sendShortEmail = sendShortEmail;
            return this;
        }

        public Builder sendShortEmail(Boolean sendShortEmail) {
            return sendShortEmail(Output.of(sendShortEmail));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder userId(Output<String> userId) {
            $.userId = userId;
            return this;
        }

        public Builder userId(String userId) {
            return userId(Output.of(userId));
        }

        public UserContactMethodArgs build() {
            if ($.address == null) {
                throw new MissingRequiredPropertyException("UserContactMethodArgs", "address");
            }
            if ($.label == null) {
                throw new MissingRequiredPropertyException("UserContactMethodArgs", "label");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("UserContactMethodArgs", "type");
            }
            if ($.userId == null) {
                throw new MissingRequiredPropertyException("UserContactMethodArgs", "userId");
            }
            return $;
        }
    }

}
