// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.pagerduty.UserHandoffNotificationRuleArgs;
import com.pulumi.pagerduty.Utilities;
import com.pulumi.pagerduty.inputs.UserHandoffNotificationRuleState;
import com.pulumi.pagerduty.outputs.UserHandoffNotificationRuleContactMethod;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * An [user handoff notification rule](https://developer.pagerduty.com/api-reference/f2ab7a3c1418a-create-a-user-handoff-notification-rule) is a rule that specifies how a user should be notified when they are handed off an incident.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.pagerduty.User;
 * import com.pulumi.pagerduty.UserArgs;
 * import com.pulumi.pagerduty.UserContactMethod;
 * import com.pulumi.pagerduty.UserContactMethodArgs;
 * import com.pulumi.pagerduty.UserHandoffNotificationRule;
 * import com.pulumi.pagerduty.UserHandoffNotificationRuleArgs;
 * import com.pulumi.pagerduty.inputs.UserHandoffNotificationRuleContactMethodArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new User("example", UserArgs.builder()
 *             .name("Earline Greenholt")
 *             .email("125.greenholt.earline{@literal @}foo.test")
 *             .build());
 * 
 *         var phone = new UserContactMethod("phone", UserContactMethodArgs.builder()
 *             .userId(example.id())
 *             .type("phone_contact_method")
 *             .countryCode("+1")
 *             .address("2025550199")
 *             .label("Work")
 *             .build());
 * 
 *         var example_oncall_offcall = new UserHandoffNotificationRule("example-oncall-offcall", UserHandoffNotificationRuleArgs.builder()
 *             .userId(example.id())
 *             .handoffType("both")
 *             .notifyAdvanceInMinutes(180)
 *             .contactMethod(UserHandoffNotificationRuleContactMethodArgs.builder()
 *                 .id(phone.id())
 *                 .type(phone.type())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * User handoff notification rules can be imported using the `user_id` and `id` separated by a dot, e.g.
 * 
 * ```sh
 * $ pulumi import pagerduty:index/userHandoffNotificationRule:UserHandoffNotificationRule main PX4IAP4.PULREBP
 * ```
 * 
 */
@ResourceType(type="pagerduty:index/userHandoffNotificationRule:UserHandoffNotificationRule")
public class UserHandoffNotificationRule extends com.pulumi.resources.CustomResource {
    /**
     * The contact method to notify the user. Contact method documented below.
     * 
     */
    @Export(name="contactMethod", refs={UserHandoffNotificationRuleContactMethod.class}, tree="[0]")
    private Output<UserHandoffNotificationRuleContactMethod> contactMethod;

    /**
     * @return The contact method to notify the user. Contact method documented below.
     * 
     */
    public Output<UserHandoffNotificationRuleContactMethod> contactMethod() {
        return this.contactMethod;
    }
    /**
     * The type of handoff to notify the user about. Possible values are `oncall`, `offcall`, `both`.
     * 
     */
    @Export(name="handoffType", refs={String.class}, tree="[0]")
    private Output<String> handoffType;

    /**
     * @return The type of handoff to notify the user about. Possible values are `oncall`, `offcall`, `both`.
     * 
     */
    public Output<String> handoffType() {
        return this.handoffType;
    }
    /**
     * The number of minutes before the handoff that the user should be notified. Must be a positive integer greater than or equal to 0.
     * 
     */
    @Export(name="notifyAdvanceInMinutes", refs={Integer.class}, tree="[0]")
    private Output<Integer> notifyAdvanceInMinutes;

    /**
     * @return The number of minutes before the handoff that the user should be notified. Must be a positive integer greater than or equal to 0.
     * 
     */
    public Output<Integer> notifyAdvanceInMinutes() {
        return this.notifyAdvanceInMinutes;
    }
    /**
     * The ID of the user.
     * 
     */
    @Export(name="userId", refs={String.class}, tree="[0]")
    private Output<String> userId;

    /**
     * @return The ID of the user.
     * 
     */
    public Output<String> userId() {
        return this.userId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public UserHandoffNotificationRule(String name) {
        this(name, UserHandoffNotificationRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public UserHandoffNotificationRule(String name, UserHandoffNotificationRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public UserHandoffNotificationRule(String name, UserHandoffNotificationRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("pagerduty:index/userHandoffNotificationRule:UserHandoffNotificationRule", name, args == null ? UserHandoffNotificationRuleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private UserHandoffNotificationRule(String name, Output<String> id, @Nullable UserHandoffNotificationRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("pagerduty:index/userHandoffNotificationRule:UserHandoffNotificationRule", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static UserHandoffNotificationRule get(String name, Output<String> id, @Nullable UserHandoffNotificationRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new UserHandoffNotificationRule(name, id, state, options);
    }
}
