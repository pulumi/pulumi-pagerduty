// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.pagerduty.UserNotificationRuleArgs;
import com.pulumi.pagerduty.Utilities;
import com.pulumi.pagerduty.inputs.UserNotificationRuleState;
import com.pulumi.pagerduty.outputs.UserNotificationRuleContactMethod;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A [notification rule](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODI0NQ-create-a-user-notification-rule) configures where and when a PagerDuty user is notified when a triggered incident is assigned to them. Unique notification rules can be created for both high and low-urgency incidents.
 * 
 * ## Import
 * 
 * User notification rules can be imported using the `user_id` and the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import pagerduty:index/userNotificationRule:UserNotificationRule main PXPGF42:PPSCXAN
 * ```
 * 
 */
@ResourceType(type="pagerduty:index/userNotificationRule:UserNotificationRule")
public class UserNotificationRule extends com.pulumi.resources.CustomResource {
    /**
     * A contact method block, configured as a block described below.
     * 
     */
    @Export(name="contactMethod", refs={UserNotificationRuleContactMethod.class}, tree="[0]")
    private Output</* @Nullable */ UserNotificationRuleContactMethod> contactMethod;

    /**
     * @return A contact method block, configured as a block described below.
     * 
     */
    public Output<Optional<UserNotificationRuleContactMethod>> contactMethod() {
        return Codegen.optional(this.contactMethod);
    }
    /**
     * The delay before firing the rule, in minutes.
     * 
     */
    @Export(name="startDelayInMinutes", refs={Integer.class}, tree="[0]")
    private Output<Integer> startDelayInMinutes;

    /**
     * @return The delay before firing the rule, in minutes.
     * 
     */
    public Output<Integer> startDelayInMinutes() {
        return this.startDelayInMinutes;
    }
    /**
     * Which incident urgency this rule is used for. Account must have the `urgencies` ability to have a low urgency notification rule. Can be `high` or `low`.
     * 
     */
    @Export(name="urgency", refs={String.class}, tree="[0]")
    private Output<String> urgency;

    /**
     * @return Which incident urgency this rule is used for. Account must have the `urgencies` ability to have a low urgency notification rule. Can be `high` or `low`.
     * 
     */
    public Output<String> urgency() {
        return this.urgency;
    }
    /**
     * The ID of the user.
     * 
     */
    @Export(name="userId", refs={String.class}, tree="[0]")
    private Output<String> userId;

    /**
     * @return The ID of the user.
     * 
     */
    public Output<String> userId() {
        return this.userId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public UserNotificationRule(java.lang.String name) {
        this(name, UserNotificationRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public UserNotificationRule(java.lang.String name, UserNotificationRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public UserNotificationRule(java.lang.String name, UserNotificationRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("pagerduty:index/userNotificationRule:UserNotificationRule", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private UserNotificationRule(java.lang.String name, Output<java.lang.String> id, @Nullable UserNotificationRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("pagerduty:index/userNotificationRule:UserNotificationRule", name, state, makeResourceOptions(options, id), false);
    }

    private static UserNotificationRuleArgs makeArgs(UserNotificationRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? UserNotificationRuleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static UserNotificationRule get(java.lang.String name, Output<java.lang.String> id, @Nullable UserNotificationRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new UserNotificationRule(name, id, state, options);
    }
}
