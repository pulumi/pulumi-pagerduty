// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.pagerduty.inputs.WebhookSubscriptionDeliveryMethodArgs;
import com.pulumi.pagerduty.inputs.WebhookSubscriptionFilterArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebhookSubscriptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebhookSubscriptionArgs Empty = new WebhookSubscriptionArgs();

    @Import(name="active")
    private @Nullable Output<Boolean> active;

    public Optional<Output<Boolean>> active() {
        return Optional.ofNullable(this.active);
    }

    @Import(name="deliveryMethods", required=true)
    private Output<List<WebhookSubscriptionDeliveryMethodArgs>> deliveryMethods;

    public Output<List<WebhookSubscriptionDeliveryMethodArgs>> deliveryMethods() {
        return this.deliveryMethods;
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="events", required=true)
    private Output<List<String>> events;

    public Output<List<String>> events() {
        return this.events;
    }

    @Import(name="filters", required=true)
    private Output<List<WebhookSubscriptionFilterArgs>> filters;

    public Output<List<WebhookSubscriptionFilterArgs>> filters() {
        return this.filters;
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private WebhookSubscriptionArgs() {}

    private WebhookSubscriptionArgs(WebhookSubscriptionArgs $) {
        this.active = $.active;
        this.deliveryMethods = $.deliveryMethods;
        this.description = $.description;
        this.events = $.events;
        this.filters = $.filters;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebhookSubscriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebhookSubscriptionArgs $;

        public Builder() {
            $ = new WebhookSubscriptionArgs();
        }

        public Builder(WebhookSubscriptionArgs defaults) {
            $ = new WebhookSubscriptionArgs(Objects.requireNonNull(defaults));
        }

        public Builder active(@Nullable Output<Boolean> active) {
            $.active = active;
            return this;
        }

        public Builder active(Boolean active) {
            return active(Output.of(active));
        }

        public Builder deliveryMethods(Output<List<WebhookSubscriptionDeliveryMethodArgs>> deliveryMethods) {
            $.deliveryMethods = deliveryMethods;
            return this;
        }

        public Builder deliveryMethods(List<WebhookSubscriptionDeliveryMethodArgs> deliveryMethods) {
            return deliveryMethods(Output.of(deliveryMethods));
        }

        public Builder deliveryMethods(WebhookSubscriptionDeliveryMethodArgs... deliveryMethods) {
            return deliveryMethods(List.of(deliveryMethods));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder events(Output<List<String>> events) {
            $.events = events;
            return this;
        }

        public Builder events(List<String> events) {
            return events(Output.of(events));
        }

        public Builder events(String... events) {
            return events(List.of(events));
        }

        public Builder filters(Output<List<WebhookSubscriptionFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<WebhookSubscriptionFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(WebhookSubscriptionFilterArgs... filters) {
            return filters(List.of(filters));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public WebhookSubscriptionArgs build() {
            if ($.deliveryMethods == null) {
                throw new MissingRequiredPropertyException("WebhookSubscriptionArgs", "deliveryMethods");
            }
            if ($.events == null) {
                throw new MissingRequiredPropertyException("WebhookSubscriptionArgs", "events");
            }
            if ($.filters == null) {
                throw new MissingRequiredPropertyException("WebhookSubscriptionArgs", "filters");
            }
            return $;
        }
    }

}
