// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutomationActionsActionActionDataReferenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutomationActionsActionActionDataReferenceArgs Empty = new AutomationActionsActionActionDataReferenceArgs();

    /**
     * The command to execute the script with.
     * 
     */
    @Import(name="invocationCommand")
    private @Nullable Output<String> invocationCommand;

    /**
     * @return The command to execute the script with.
     * 
     */
    public Optional<Output<String>> invocationCommand() {
        return Optional.ofNullable(this.invocationCommand);
    }

    /**
     * The arguments to pass to the Process Automation job execution.
     * 
     */
    @Import(name="processAutomationJobArguments")
    private @Nullable Output<String> processAutomationJobArguments;

    /**
     * @return The arguments to pass to the Process Automation job execution.
     * 
     */
    public Optional<Output<String>> processAutomationJobArguments() {
        return Optional.ofNullable(this.processAutomationJobArguments);
    }

    /**
     * The ID of the Process Automation job to execute.
     * 
     */
    @Import(name="processAutomationJobId")
    private @Nullable Output<String> processAutomationJobId;

    /**
     * @return The ID of the Process Automation job to execute.
     * 
     */
    public Optional<Output<String>> processAutomationJobId() {
        return Optional.ofNullable(this.processAutomationJobId);
    }

    /**
     * Body of the script to be executed on the Runner. Max length is 16777215 characters.
     * 
     */
    @Import(name="script")
    private @Nullable Output<String> script;

    /**
     * @return Body of the script to be executed on the Runner. Max length is 16777215 characters.
     * 
     */
    public Optional<Output<String>> script() {
        return Optional.ofNullable(this.script);
    }

    private AutomationActionsActionActionDataReferenceArgs() {}

    private AutomationActionsActionActionDataReferenceArgs(AutomationActionsActionActionDataReferenceArgs $) {
        this.invocationCommand = $.invocationCommand;
        this.processAutomationJobArguments = $.processAutomationJobArguments;
        this.processAutomationJobId = $.processAutomationJobId;
        this.script = $.script;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutomationActionsActionActionDataReferenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutomationActionsActionActionDataReferenceArgs $;

        public Builder() {
            $ = new AutomationActionsActionActionDataReferenceArgs();
        }

        public Builder(AutomationActionsActionActionDataReferenceArgs defaults) {
            $ = new AutomationActionsActionActionDataReferenceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param invocationCommand The command to execute the script with.
         * 
         * @return builder
         * 
         */
        public Builder invocationCommand(@Nullable Output<String> invocationCommand) {
            $.invocationCommand = invocationCommand;
            return this;
        }

        /**
         * @param invocationCommand The command to execute the script with.
         * 
         * @return builder
         * 
         */
        public Builder invocationCommand(String invocationCommand) {
            return invocationCommand(Output.of(invocationCommand));
        }

        /**
         * @param processAutomationJobArguments The arguments to pass to the Process Automation job execution.
         * 
         * @return builder
         * 
         */
        public Builder processAutomationJobArguments(@Nullable Output<String> processAutomationJobArguments) {
            $.processAutomationJobArguments = processAutomationJobArguments;
            return this;
        }

        /**
         * @param processAutomationJobArguments The arguments to pass to the Process Automation job execution.
         * 
         * @return builder
         * 
         */
        public Builder processAutomationJobArguments(String processAutomationJobArguments) {
            return processAutomationJobArguments(Output.of(processAutomationJobArguments));
        }

        /**
         * @param processAutomationJobId The ID of the Process Automation job to execute.
         * 
         * @return builder
         * 
         */
        public Builder processAutomationJobId(@Nullable Output<String> processAutomationJobId) {
            $.processAutomationJobId = processAutomationJobId;
            return this;
        }

        /**
         * @param processAutomationJobId The ID of the Process Automation job to execute.
         * 
         * @return builder
         * 
         */
        public Builder processAutomationJobId(String processAutomationJobId) {
            return processAutomationJobId(Output.of(processAutomationJobId));
        }

        /**
         * @param script Body of the script to be executed on the Runner. Max length is 16777215 characters.
         * 
         * @return builder
         * 
         */
        public Builder script(@Nullable Output<String> script) {
            $.script = script;
            return this;
        }

        /**
         * @param script Body of the script to be executed on the Runner. Max length is 16777215 characters.
         * 
         * @return builder
         * 
         */
        public Builder script(String script) {
            return script(Output.of(script));
        }

        public AutomationActionsActionActionDataReferenceArgs build() {
            return $;
        }
    }

}
