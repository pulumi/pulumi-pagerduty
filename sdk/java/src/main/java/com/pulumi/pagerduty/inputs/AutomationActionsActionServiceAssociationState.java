// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutomationActionsActionServiceAssociationState extends com.pulumi.resources.ResourceArgs {

    public static final AutomationActionsActionServiceAssociationState Empty = new AutomationActionsActionServiceAssociationState();

    /**
     * Id of the action.
     * 
     */
    @Import(name="actionId")
    private @Nullable Output<String> actionId;

    /**
     * @return Id of the action.
     * 
     */
    public Optional<Output<String>> actionId() {
        return Optional.ofNullable(this.actionId);
    }

    /**
     * Id of the service associated to the action.
     * 
     */
    @Import(name="serviceId")
    private @Nullable Output<String> serviceId;

    /**
     * @return Id of the service associated to the action.
     * 
     */
    public Optional<Output<String>> serviceId() {
        return Optional.ofNullable(this.serviceId);
    }

    private AutomationActionsActionServiceAssociationState() {}

    private AutomationActionsActionServiceAssociationState(AutomationActionsActionServiceAssociationState $) {
        this.actionId = $.actionId;
        this.serviceId = $.serviceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutomationActionsActionServiceAssociationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutomationActionsActionServiceAssociationState $;

        public Builder() {
            $ = new AutomationActionsActionServiceAssociationState();
        }

        public Builder(AutomationActionsActionServiceAssociationState defaults) {
            $ = new AutomationActionsActionServiceAssociationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param actionId Id of the action.
         * 
         * @return builder
         * 
         */
        public Builder actionId(@Nullable Output<String> actionId) {
            $.actionId = actionId;
            return this;
        }

        /**
         * @param actionId Id of the action.
         * 
         * @return builder
         * 
         */
        public Builder actionId(String actionId) {
            return actionId(Output.of(actionId));
        }

        /**
         * @param serviceId Id of the service associated to the action.
         * 
         * @return builder
         * 
         */
        public Builder serviceId(@Nullable Output<String> serviceId) {
            $.serviceId = serviceId;
            return this;
        }

        /**
         * @param serviceId Id of the service associated to the action.
         * 
         * @return builder
         * 
         */
        public Builder serviceId(String serviceId) {
            return serviceId(Output.of(serviceId));
        }

        public AutomationActionsActionServiceAssociationState build() {
            return $;
        }
    }

}
