// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.pagerduty.inputs.AutomationActionsActionActionDataReferenceArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutomationActionsActionState extends com.pulumi.resources.ResourceArgs {

    public static final AutomationActionsActionState Empty = new AutomationActionsActionState();

    @Import(name="actionClassification")
    private @Nullable Output<String> actionClassification;

    public Optional<Output<String>> actionClassification() {
        return Optional.ofNullable(this.actionClassification);
    }

    @Import(name="actionDataReference")
    private @Nullable Output<AutomationActionsActionActionDataReferenceArgs> actionDataReference;

    public Optional<Output<AutomationActionsActionActionDataReferenceArgs>> actionDataReference() {
        return Optional.ofNullable(this.actionDataReference);
    }

    @Import(name="actionType")
    private @Nullable Output<String> actionType;

    public Optional<Output<String>> actionType() {
        return Optional.ofNullable(this.actionType);
    }

    /**
     * The time action was created. Represented as an ISO 8601 timestamp.
     * 
     */
    @Import(name="creationTime")
    private @Nullable Output<String> creationTime;

    /**
     * @return The time action was created. Represented as an ISO 8601 timestamp.
     * 
     */
    public Optional<Output<String>> creationTime() {
        return Optional.ofNullable(this.creationTime);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Optional) The last time action has been modified. Represented as an ISO 8601 timestamp.
     * 
     */
    @Import(name="modifyTime")
    private @Nullable Output<String> modifyTime;

    /**
     * @return (Optional) The last time action has been modified. Represented as an ISO 8601 timestamp.
     * 
     */
    public Optional<Output<String>> modifyTime() {
        return Optional.ofNullable(this.modifyTime);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="runnerId")
    private @Nullable Output<String> runnerId;

    public Optional<Output<String>> runnerId() {
        return Optional.ofNullable(this.runnerId);
    }

    /**
     * (Optional) The type of the runner associated with the action.
     * 
     */
    @Import(name="runnerType")
    private @Nullable Output<String> runnerType;

    /**
     * @return (Optional) The type of the runner associated with the action.
     * 
     */
    public Optional<Output<String>> runnerType() {
        return Optional.ofNullable(this.runnerType);
    }

    /**
     * The type of object. The value returned will be `action`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of object. The value returned will be `action`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private AutomationActionsActionState() {}

    private AutomationActionsActionState(AutomationActionsActionState $) {
        this.actionClassification = $.actionClassification;
        this.actionDataReference = $.actionDataReference;
        this.actionType = $.actionType;
        this.creationTime = $.creationTime;
        this.description = $.description;
        this.modifyTime = $.modifyTime;
        this.name = $.name;
        this.runnerId = $.runnerId;
        this.runnerType = $.runnerType;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutomationActionsActionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutomationActionsActionState $;

        public Builder() {
            $ = new AutomationActionsActionState();
        }

        public Builder(AutomationActionsActionState defaults) {
            $ = new AutomationActionsActionState(Objects.requireNonNull(defaults));
        }

        public Builder actionClassification(@Nullable Output<String> actionClassification) {
            $.actionClassification = actionClassification;
            return this;
        }

        public Builder actionClassification(String actionClassification) {
            return actionClassification(Output.of(actionClassification));
        }

        public Builder actionDataReference(@Nullable Output<AutomationActionsActionActionDataReferenceArgs> actionDataReference) {
            $.actionDataReference = actionDataReference;
            return this;
        }

        public Builder actionDataReference(AutomationActionsActionActionDataReferenceArgs actionDataReference) {
            return actionDataReference(Output.of(actionDataReference));
        }

        public Builder actionType(@Nullable Output<String> actionType) {
            $.actionType = actionType;
            return this;
        }

        public Builder actionType(String actionType) {
            return actionType(Output.of(actionType));
        }

        /**
         * @param creationTime The time action was created. Represented as an ISO 8601 timestamp.
         * 
         * @return builder
         * 
         */
        public Builder creationTime(@Nullable Output<String> creationTime) {
            $.creationTime = creationTime;
            return this;
        }

        /**
         * @param creationTime The time action was created. Represented as an ISO 8601 timestamp.
         * 
         * @return builder
         * 
         */
        public Builder creationTime(String creationTime) {
            return creationTime(Output.of(creationTime));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param modifyTime (Optional) The last time action has been modified. Represented as an ISO 8601 timestamp.
         * 
         * @return builder
         * 
         */
        public Builder modifyTime(@Nullable Output<String> modifyTime) {
            $.modifyTime = modifyTime;
            return this;
        }

        /**
         * @param modifyTime (Optional) The last time action has been modified. Represented as an ISO 8601 timestamp.
         * 
         * @return builder
         * 
         */
        public Builder modifyTime(String modifyTime) {
            return modifyTime(Output.of(modifyTime));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder runnerId(@Nullable Output<String> runnerId) {
            $.runnerId = runnerId;
            return this;
        }

        public Builder runnerId(String runnerId) {
            return runnerId(Output.of(runnerId));
        }

        /**
         * @param runnerType (Optional) The type of the runner associated with the action.
         * 
         * @return builder
         * 
         */
        public Builder runnerType(@Nullable Output<String> runnerType) {
            $.runnerType = runnerType;
            return this;
        }

        /**
         * @param runnerType (Optional) The type of the runner associated with the action.
         * 
         * @return builder
         * 
         */
        public Builder runnerType(String runnerType) {
            return runnerType(Output.of(runnerType));
        }

        /**
         * @param type The type of object. The value returned will be `action`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of object. The value returned will be `action`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public AutomationActionsActionState build() {
            return $;
        }
    }

}
