// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutomationActionsRunnerState extends com.pulumi.resources.ResourceArgs {

    public static final AutomationActionsRunnerState Empty = new AutomationActionsRunnerState();

    /**
     * The time runner was created. Represented as an ISO 8601 timestamp.
     * 
     */
    @Import(name="creationTime")
    private @Nullable Output<String> creationTime;

    /**
     * @return The time runner was created. Represented as an ISO 8601 timestamp.
     * 
     */
    public Optional<Output<String>> creationTime() {
        return Optional.ofNullable(this.creationTime);
    }

    /**
     * The description of the runner. Max length is 1024 characters.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the runner. Max length is 1024 characters.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Optional) The last time runner has been seen. Represented as an ISO 8601 timestamp.
     * 
     */
    @Import(name="lastSeen")
    private @Nullable Output<String> lastSeen;

    /**
     * @return (Optional) The last time runner has been seen. Represented as an ISO 8601 timestamp.
     * 
     */
    public Optional<Output<String>> lastSeen() {
        return Optional.ofNullable(this.lastSeen);
    }

    /**
     * The name of the runner. Max length is 255 characters.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the runner. Max length is 255 characters.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The unique User API Token created in Runbook Automation.
     * 
     */
    @Import(name="runbookApiKey")
    private @Nullable Output<String> runbookApiKey;

    /**
     * @return The unique User API Token created in Runbook Automation.
     * 
     */
    public Optional<Output<String>> runbookApiKey() {
        return Optional.ofNullable(this.runbookApiKey);
    }

    /**
     * The subdomain for your Runbook Automation Instance.
     * 
     */
    @Import(name="runbookBaseUri")
    private @Nullable Output<String> runbookBaseUri;

    /**
     * @return The subdomain for your Runbook Automation Instance.
     * 
     */
    public Optional<Output<String>> runbookBaseUri() {
        return Optional.ofNullable(this.runbookBaseUri);
    }

    /**
     * The type of runner. The only allowed values is `runbook`.
     * 
     */
    @Import(name="runnerType")
    private @Nullable Output<String> runnerType;

    /**
     * @return The type of runner. The only allowed values is `runbook`.
     * 
     */
    public Optional<Output<String>> runnerType() {
        return Optional.ofNullable(this.runnerType);
    }

    /**
     * The type of object. The value returned will be `runner`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of object. The value returned will be `runner`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private AutomationActionsRunnerState() {}

    private AutomationActionsRunnerState(AutomationActionsRunnerState $) {
        this.creationTime = $.creationTime;
        this.description = $.description;
        this.lastSeen = $.lastSeen;
        this.name = $.name;
        this.runbookApiKey = $.runbookApiKey;
        this.runbookBaseUri = $.runbookBaseUri;
        this.runnerType = $.runnerType;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutomationActionsRunnerState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutomationActionsRunnerState $;

        public Builder() {
            $ = new AutomationActionsRunnerState();
        }

        public Builder(AutomationActionsRunnerState defaults) {
            $ = new AutomationActionsRunnerState(Objects.requireNonNull(defaults));
        }

        /**
         * @param creationTime The time runner was created. Represented as an ISO 8601 timestamp.
         * 
         * @return builder
         * 
         */
        public Builder creationTime(@Nullable Output<String> creationTime) {
            $.creationTime = creationTime;
            return this;
        }

        /**
         * @param creationTime The time runner was created. Represented as an ISO 8601 timestamp.
         * 
         * @return builder
         * 
         */
        public Builder creationTime(String creationTime) {
            return creationTime(Output.of(creationTime));
        }

        /**
         * @param description The description of the runner. Max length is 1024 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the runner. Max length is 1024 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param lastSeen (Optional) The last time runner has been seen. Represented as an ISO 8601 timestamp.
         * 
         * @return builder
         * 
         */
        public Builder lastSeen(@Nullable Output<String> lastSeen) {
            $.lastSeen = lastSeen;
            return this;
        }

        /**
         * @param lastSeen (Optional) The last time runner has been seen. Represented as an ISO 8601 timestamp.
         * 
         * @return builder
         * 
         */
        public Builder lastSeen(String lastSeen) {
            return lastSeen(Output.of(lastSeen));
        }

        /**
         * @param name The name of the runner. Max length is 255 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the runner. Max length is 255 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param runbookApiKey The unique User API Token created in Runbook Automation.
         * 
         * @return builder
         * 
         */
        public Builder runbookApiKey(@Nullable Output<String> runbookApiKey) {
            $.runbookApiKey = runbookApiKey;
            return this;
        }

        /**
         * @param runbookApiKey The unique User API Token created in Runbook Automation.
         * 
         * @return builder
         * 
         */
        public Builder runbookApiKey(String runbookApiKey) {
            return runbookApiKey(Output.of(runbookApiKey));
        }

        /**
         * @param runbookBaseUri The subdomain for your Runbook Automation Instance.
         * 
         * @return builder
         * 
         */
        public Builder runbookBaseUri(@Nullable Output<String> runbookBaseUri) {
            $.runbookBaseUri = runbookBaseUri;
            return this;
        }

        /**
         * @param runbookBaseUri The subdomain for your Runbook Automation Instance.
         * 
         * @return builder
         * 
         */
        public Builder runbookBaseUri(String runbookBaseUri) {
            return runbookBaseUri(Output.of(runbookBaseUri));
        }

        /**
         * @param runnerType The type of runner. The only allowed values is `runbook`.
         * 
         * @return builder
         * 
         */
        public Builder runnerType(@Nullable Output<String> runnerType) {
            $.runnerType = runnerType;
            return this;
        }

        /**
         * @param runnerType The type of runner. The only allowed values is `runbook`.
         * 
         * @return builder
         * 
         */
        public Builder runnerType(String runnerType) {
            return runnerType(Output.of(runnerType));
        }

        /**
         * @param type The type of object. The value returned will be `runner`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of object. The value returned will be `runner`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public AutomationActionsRunnerState build() {
            return $;
        }
    }

}
