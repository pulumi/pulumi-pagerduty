// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomFieldOptionState extends com.pulumi.resources.ResourceArgs {

    public static final CustomFieldOptionState Empty = new CustomFieldOptionState();

    /**
     * The datatype of the field option. Must be one of `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
     * 
     */
    @Import(name="datatype")
    private @Nullable Output<String> datatype;

    /**
     * @return The datatype of the field option. Must be one of `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
     * 
     */
    public Optional<Output<String>> datatype() {
        return Optional.ofNullable(this.datatype);
    }

    /**
     * The ID of the field.
     * 
     */
    @Import(name="field")
    private @Nullable Output<String> field;

    /**
     * @return The ID of the field.
     * 
     */
    public Optional<Output<String>> field() {
        return Optional.ofNullable(this.field);
    }

    /**
     * The allowed value.
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return The allowed value.
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private CustomFieldOptionState() {}

    private CustomFieldOptionState(CustomFieldOptionState $) {
        this.datatype = $.datatype;
        this.field = $.field;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomFieldOptionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomFieldOptionState $;

        public Builder() {
            $ = new CustomFieldOptionState();
        }

        public Builder(CustomFieldOptionState defaults) {
            $ = new CustomFieldOptionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param datatype The datatype of the field option. Must be one of `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
         * 
         * @return builder
         * 
         */
        public Builder datatype(@Nullable Output<String> datatype) {
            $.datatype = datatype;
            return this;
        }

        /**
         * @param datatype The datatype of the field option. Must be one of `string`, `integer`, `float`, `boolean`, `datetime`, or `url`.
         * 
         * @return builder
         * 
         */
        public Builder datatype(String datatype) {
            return datatype(Output.of(datatype));
        }

        /**
         * @param field The ID of the field.
         * 
         * @return builder
         * 
         */
        public Builder field(@Nullable Output<String> field) {
            $.field = field;
            return this;
        }

        /**
         * @param field The ID of the field.
         * 
         * @return builder
         * 
         */
        public Builder field(String field) {
            return field(Output.of(field));
        }

        /**
         * @param value The allowed value.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value The allowed value.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public CustomFieldOptionState build() {
            return $;
        }
    }

}
