// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.pagerduty.inputs.EscalationPolicyRuleEscalationRuleAssignmentStrategyArgs;
import com.pulumi.pagerduty.inputs.EscalationPolicyRuleTargetArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EscalationPolicyRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final EscalationPolicyRuleArgs Empty = new EscalationPolicyRuleArgs();

    @Import(name="escalationDelayInMinutes", required=true)
    private Output<Integer> escalationDelayInMinutes;

    public Output<Integer> escalationDelayInMinutes() {
        return this.escalationDelayInMinutes;
    }

    @Import(name="escalationRuleAssignmentStrategy")
    private @Nullable Output<EscalationPolicyRuleEscalationRuleAssignmentStrategyArgs> escalationRuleAssignmentStrategy;

    public Optional<Output<EscalationPolicyRuleEscalationRuleAssignmentStrategyArgs>> escalationRuleAssignmentStrategy() {
        return Optional.ofNullable(this.escalationRuleAssignmentStrategy);
    }

    /**
     * The ID of the escalation policy.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The ID of the escalation policy.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    @Import(name="targets", required=true)
    private Output<List<EscalationPolicyRuleTargetArgs>> targets;

    public Output<List<EscalationPolicyRuleTargetArgs>> targets() {
        return this.targets;
    }

    private EscalationPolicyRuleArgs() {}

    private EscalationPolicyRuleArgs(EscalationPolicyRuleArgs $) {
        this.escalationDelayInMinutes = $.escalationDelayInMinutes;
        this.escalationRuleAssignmentStrategy = $.escalationRuleAssignmentStrategy;
        this.id = $.id;
        this.targets = $.targets;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EscalationPolicyRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EscalationPolicyRuleArgs $;

        public Builder() {
            $ = new EscalationPolicyRuleArgs();
        }

        public Builder(EscalationPolicyRuleArgs defaults) {
            $ = new EscalationPolicyRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder escalationDelayInMinutes(Output<Integer> escalationDelayInMinutes) {
            $.escalationDelayInMinutes = escalationDelayInMinutes;
            return this;
        }

        public Builder escalationDelayInMinutes(Integer escalationDelayInMinutes) {
            return escalationDelayInMinutes(Output.of(escalationDelayInMinutes));
        }

        public Builder escalationRuleAssignmentStrategy(@Nullable Output<EscalationPolicyRuleEscalationRuleAssignmentStrategyArgs> escalationRuleAssignmentStrategy) {
            $.escalationRuleAssignmentStrategy = escalationRuleAssignmentStrategy;
            return this;
        }

        public Builder escalationRuleAssignmentStrategy(EscalationPolicyRuleEscalationRuleAssignmentStrategyArgs escalationRuleAssignmentStrategy) {
            return escalationRuleAssignmentStrategy(Output.of(escalationRuleAssignmentStrategy));
        }

        /**
         * @param id The ID of the escalation policy.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of the escalation policy.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder targets(Output<List<EscalationPolicyRuleTargetArgs>> targets) {
            $.targets = targets;
            return this;
        }

        public Builder targets(List<EscalationPolicyRuleTargetArgs> targets) {
            return targets(Output.of(targets));
        }

        public Builder targets(EscalationPolicyRuleTargetArgs... targets) {
            return targets(List.of(targets));
        }

        public EscalationPolicyRuleArgs build() {
            if ($.escalationDelayInMinutes == null) {
                throw new MissingRequiredPropertyException("EscalationPolicyRuleArgs", "escalationDelayInMinutes");
            }
            if ($.targets == null) {
                throw new MissingRequiredPropertyException("EscalationPolicyRuleArgs", "targets");
            }
            return $;
        }
    }

}
