// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EscalationPolicyRuleTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final EscalationPolicyRuleTargetArgs Empty = new EscalationPolicyRuleTargetArgs();

    /**
     * A target ID
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return A target ID
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * Can be `user_reference` or `schedule_reference`. Defaults to `user_reference`. For multiple users as example, repeat the target.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Can be `user_reference` or `schedule_reference`. Defaults to `user_reference`. For multiple users as example, repeat the target.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private EscalationPolicyRuleTargetArgs() {}

    private EscalationPolicyRuleTargetArgs(EscalationPolicyRuleTargetArgs $) {
        this.id = $.id;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EscalationPolicyRuleTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EscalationPolicyRuleTargetArgs $;

        public Builder() {
            $ = new EscalationPolicyRuleTargetArgs();
        }

        public Builder(EscalationPolicyRuleTargetArgs defaults) {
            $ = new EscalationPolicyRuleTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id A target ID
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id A target ID
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param type Can be `user_reference` or `schedule_reference`. Defaults to `user_reference`. For multiple users as example, repeat the target.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Can be `user_reference` or `schedule_reference`. Defaults to `user_reference`. For multiple users as example, repeat the target.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public EscalationPolicyRuleTargetArgs build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            return $;
        }
    }

}
