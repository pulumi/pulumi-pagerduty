// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.pagerduty.inputs.EventOrchestrationRouterCatchAllActionsArgs;
import java.util.Objects;


public final class EventOrchestrationRouterCatchAllArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventOrchestrationRouterCatchAllArgs Empty = new EventOrchestrationRouterCatchAllArgs();

    /**
     * These are the actions that will be taken to change the resulting alert and incident.
     * 
     */
    @Import(name="actions", required=true)
    private Output<EventOrchestrationRouterCatchAllActionsArgs> actions;

    /**
     * @return These are the actions that will be taken to change the resulting alert and incident.
     * 
     */
    public Output<EventOrchestrationRouterCatchAllActionsArgs> actions() {
        return this.actions;
    }

    private EventOrchestrationRouterCatchAllArgs() {}

    private EventOrchestrationRouterCatchAllArgs(EventOrchestrationRouterCatchAllArgs $) {
        this.actions = $.actions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventOrchestrationRouterCatchAllArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventOrchestrationRouterCatchAllArgs $;

        public Builder() {
            $ = new EventOrchestrationRouterCatchAllArgs();
        }

        public Builder(EventOrchestrationRouterCatchAllArgs defaults) {
            $ = new EventOrchestrationRouterCatchAllArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions These are the actions that will be taken to change the resulting alert and incident.
         * 
         * @return builder
         * 
         */
        public Builder actions(Output<EventOrchestrationRouterCatchAllActionsArgs> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions These are the actions that will be taken to change the resulting alert and incident.
         * 
         * @return builder
         * 
         */
        public Builder actions(EventOrchestrationRouterCatchAllActionsArgs actions) {
            return actions(Output.of(actions));
        }

        public EventOrchestrationRouterCatchAllArgs build() {
            if ($.actions == null) {
                throw new MissingRequiredPropertyException("EventOrchestrationRouterCatchAllArgs", "actions");
            }
            return $;
        }
    }

}
