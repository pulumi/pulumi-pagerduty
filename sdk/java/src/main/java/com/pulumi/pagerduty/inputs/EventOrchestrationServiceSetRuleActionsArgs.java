// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.pagerduty.inputs.EventOrchestrationServiceSetRuleActionsAutomationActionArgs;
import com.pulumi.pagerduty.inputs.EventOrchestrationServiceSetRuleActionsExtractionArgs;
import com.pulumi.pagerduty.inputs.EventOrchestrationServiceSetRuleActionsIncidentCustomFieldUpdateArgs;
import com.pulumi.pagerduty.inputs.EventOrchestrationServiceSetRuleActionsPagerdutyAutomationActionArgs;
import com.pulumi.pagerduty.inputs.EventOrchestrationServiceSetRuleActionsVariableArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventOrchestrationServiceSetRuleActionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventOrchestrationServiceSetRuleActionsArgs Empty = new EventOrchestrationServiceSetRuleActionsArgs();

    /**
     * Add this text as a note on the resulting incident.
     * 
     */
    @Import(name="annotate")
    private @Nullable Output<String> annotate;

    /**
     * @return Add this text as a note on the resulting incident.
     * 
     */
    public Optional<Output<String>> annotate() {
        return Optional.ofNullable(this.annotate);
    }

    /**
     * Create a [Webhook](https://support.pagerduty.com/docs/event-orchestration#webhooks) associated with the resulting incident.
     * 
     */
    @Import(name="automationAction")
    private @Nullable Output<EventOrchestrationServiceSetRuleActionsAutomationActionArgs> automationAction;

    /**
     * @return Create a [Webhook](https://support.pagerduty.com/docs/event-orchestration#webhooks) associated with the resulting incident.
     * 
     */
    public Optional<Output<EventOrchestrationServiceSetRuleActionsAutomationActionArgs>> automationAction() {
        return Optional.ofNullable(this.automationAction);
    }

    /**
     * The ID of the Escalation Policy you want to assign incidents to. Event rules with this action will override the Escalation Policy already set on a Service&#39;s settings, with what is configured by this action.
     * 
     */
    @Import(name="escalationPolicy")
    private @Nullable Output<String> escalationPolicy;

    /**
     * @return The ID of the Escalation Policy you want to assign incidents to. Event rules with this action will override the Escalation Policy already set on a Service&#39;s settings, with what is configured by this action.
     * 
     */
    public Optional<Output<String>> escalationPolicy() {
        return Optional.ofNullable(this.escalationPolicy);
    }

    /**
     * sets whether the resulting alert status is trigger or resolve. Allowed values are: `trigger`, `resolve`
     * 
     */
    @Import(name="eventAction")
    private @Nullable Output<String> eventAction;

    /**
     * @return sets whether the resulting alert status is trigger or resolve. Allowed values are: `trigger`, `resolve`
     * 
     */
    public Optional<Output<String>> eventAction() {
        return Optional.ofNullable(this.eventAction);
    }

    /**
     * Replace any CEF field or Custom Details object field using custom variables.
     * 
     */
    @Import(name="extractions")
    private @Nullable Output<List<EventOrchestrationServiceSetRuleActionsExtractionArgs>> extractions;

    /**
     * @return Replace any CEF field or Custom Details object field using custom variables.
     * 
     */
    public Optional<Output<List<EventOrchestrationServiceSetRuleActionsExtractionArgs>>> extractions() {
        return Optional.ofNullable(this.extractions);
    }

    /**
     * Assign a custom field to the resulting incident.
     * 
     */
    @Import(name="incidentCustomFieldUpdates")
    private @Nullable Output<List<EventOrchestrationServiceSetRuleActionsIncidentCustomFieldUpdateArgs>> incidentCustomFieldUpdates;

    /**
     * @return Assign a custom field to the resulting incident.
     * 
     */
    public Optional<Output<List<EventOrchestrationServiceSetRuleActionsIncidentCustomFieldUpdateArgs>>> incidentCustomFieldUpdates() {
        return Optional.ofNullable(this.incidentCustomFieldUpdates);
    }

    /**
     * Configure a [Process Automation](https://support.pagerduty.com/docs/event-orchestration#process-automation) associated with the resulting incident.
     * 
     */
    @Import(name="pagerdutyAutomationAction")
    private @Nullable Output<EventOrchestrationServiceSetRuleActionsPagerdutyAutomationActionArgs> pagerdutyAutomationAction;

    /**
     * @return Configure a [Process Automation](https://support.pagerduty.com/docs/event-orchestration#process-automation) associated with the resulting incident.
     * 
     */
    public Optional<Output<EventOrchestrationServiceSetRuleActionsPagerdutyAutomationActionArgs>> pagerdutyAutomationAction() {
        return Optional.ofNullable(this.pagerdutyAutomationAction);
    }

    /**
     * The ID of the priority you want to set on resulting incident. Consider using the `pagerduty.getPriority` data source.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<String> priority;

    /**
     * @return The ID of the priority you want to set on resulting incident. Consider using the `pagerduty.getPriority` data source.
     * 
     */
    public Optional<Output<String>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * The ID of a Set from this Service Orchestration whose rules you also want to use with events that match this rule.
     * 
     */
    @Import(name="routeTo")
    private @Nullable Output<String> routeTo;

    /**
     * @return The ID of a Set from this Service Orchestration whose rules you also want to use with events that match this rule.
     * 
     */
    public Optional<Output<String>> routeTo() {
        return Optional.ofNullable(this.routeTo);
    }

    /**
     * sets Severity of the resulting alert. Allowed values are: `info`, `error`, `warning`, `critical`
     * 
     */
    @Import(name="severity")
    private @Nullable Output<String> severity;

    /**
     * @return sets Severity of the resulting alert. Allowed values are: `info`, `error`, `warning`, `critical`
     * 
     */
    public Optional<Output<String>> severity() {
        return Optional.ofNullable(this.severity);
    }

    /**
     * Set whether the resulting alert is suppressed. Suppressed alerts will not trigger an incident.
     * 
     */
    @Import(name="suppress")
    private @Nullable Output<Boolean> suppress;

    /**
     * @return Set whether the resulting alert is suppressed. Suppressed alerts will not trigger an incident.
     * 
     */
    public Optional<Output<Boolean>> suppress() {
        return Optional.ofNullable(this.suppress);
    }

    /**
     * The number of seconds to suspend the resulting alert before triggering. This effectively pauses incident notifications. If a `resolve` event arrives before the alert triggers then PagerDuty won&#39;t create an incident for this alert.
     * 
     */
    @Import(name="suspend")
    private @Nullable Output<Integer> suspend;

    /**
     * @return The number of seconds to suspend the resulting alert before triggering. This effectively pauses incident notifications. If a `resolve` event arrives before the alert triggers then PagerDuty won&#39;t create an incident for this alert.
     * 
     */
    public Optional<Output<Integer>> suspend() {
        return Optional.ofNullable(this.suspend);
    }

    /**
     * Populate variables from event payloads and use those variables in other event actions.
     * 
     */
    @Import(name="variables")
    private @Nullable Output<List<EventOrchestrationServiceSetRuleActionsVariableArgs>> variables;

    /**
     * @return Populate variables from event payloads and use those variables in other event actions.
     * 
     */
    public Optional<Output<List<EventOrchestrationServiceSetRuleActionsVariableArgs>>> variables() {
        return Optional.ofNullable(this.variables);
    }

    private EventOrchestrationServiceSetRuleActionsArgs() {}

    private EventOrchestrationServiceSetRuleActionsArgs(EventOrchestrationServiceSetRuleActionsArgs $) {
        this.annotate = $.annotate;
        this.automationAction = $.automationAction;
        this.escalationPolicy = $.escalationPolicy;
        this.eventAction = $.eventAction;
        this.extractions = $.extractions;
        this.incidentCustomFieldUpdates = $.incidentCustomFieldUpdates;
        this.pagerdutyAutomationAction = $.pagerdutyAutomationAction;
        this.priority = $.priority;
        this.routeTo = $.routeTo;
        this.severity = $.severity;
        this.suppress = $.suppress;
        this.suspend = $.suspend;
        this.variables = $.variables;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventOrchestrationServiceSetRuleActionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventOrchestrationServiceSetRuleActionsArgs $;

        public Builder() {
            $ = new EventOrchestrationServiceSetRuleActionsArgs();
        }

        public Builder(EventOrchestrationServiceSetRuleActionsArgs defaults) {
            $ = new EventOrchestrationServiceSetRuleActionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param annotate Add this text as a note on the resulting incident.
         * 
         * @return builder
         * 
         */
        public Builder annotate(@Nullable Output<String> annotate) {
            $.annotate = annotate;
            return this;
        }

        /**
         * @param annotate Add this text as a note on the resulting incident.
         * 
         * @return builder
         * 
         */
        public Builder annotate(String annotate) {
            return annotate(Output.of(annotate));
        }

        /**
         * @param automationAction Create a [Webhook](https://support.pagerduty.com/docs/event-orchestration#webhooks) associated with the resulting incident.
         * 
         * @return builder
         * 
         */
        public Builder automationAction(@Nullable Output<EventOrchestrationServiceSetRuleActionsAutomationActionArgs> automationAction) {
            $.automationAction = automationAction;
            return this;
        }

        /**
         * @param automationAction Create a [Webhook](https://support.pagerduty.com/docs/event-orchestration#webhooks) associated with the resulting incident.
         * 
         * @return builder
         * 
         */
        public Builder automationAction(EventOrchestrationServiceSetRuleActionsAutomationActionArgs automationAction) {
            return automationAction(Output.of(automationAction));
        }

        /**
         * @param escalationPolicy The ID of the Escalation Policy you want to assign incidents to. Event rules with this action will override the Escalation Policy already set on a Service&#39;s settings, with what is configured by this action.
         * 
         * @return builder
         * 
         */
        public Builder escalationPolicy(@Nullable Output<String> escalationPolicy) {
            $.escalationPolicy = escalationPolicy;
            return this;
        }

        /**
         * @param escalationPolicy The ID of the Escalation Policy you want to assign incidents to. Event rules with this action will override the Escalation Policy already set on a Service&#39;s settings, with what is configured by this action.
         * 
         * @return builder
         * 
         */
        public Builder escalationPolicy(String escalationPolicy) {
            return escalationPolicy(Output.of(escalationPolicy));
        }

        /**
         * @param eventAction sets whether the resulting alert status is trigger or resolve. Allowed values are: `trigger`, `resolve`
         * 
         * @return builder
         * 
         */
        public Builder eventAction(@Nullable Output<String> eventAction) {
            $.eventAction = eventAction;
            return this;
        }

        /**
         * @param eventAction sets whether the resulting alert status is trigger or resolve. Allowed values are: `trigger`, `resolve`
         * 
         * @return builder
         * 
         */
        public Builder eventAction(String eventAction) {
            return eventAction(Output.of(eventAction));
        }

        /**
         * @param extractions Replace any CEF field or Custom Details object field using custom variables.
         * 
         * @return builder
         * 
         */
        public Builder extractions(@Nullable Output<List<EventOrchestrationServiceSetRuleActionsExtractionArgs>> extractions) {
            $.extractions = extractions;
            return this;
        }

        /**
         * @param extractions Replace any CEF field or Custom Details object field using custom variables.
         * 
         * @return builder
         * 
         */
        public Builder extractions(List<EventOrchestrationServiceSetRuleActionsExtractionArgs> extractions) {
            return extractions(Output.of(extractions));
        }

        /**
         * @param extractions Replace any CEF field or Custom Details object field using custom variables.
         * 
         * @return builder
         * 
         */
        public Builder extractions(EventOrchestrationServiceSetRuleActionsExtractionArgs... extractions) {
            return extractions(List.of(extractions));
        }

        /**
         * @param incidentCustomFieldUpdates Assign a custom field to the resulting incident.
         * 
         * @return builder
         * 
         */
        public Builder incidentCustomFieldUpdates(@Nullable Output<List<EventOrchestrationServiceSetRuleActionsIncidentCustomFieldUpdateArgs>> incidentCustomFieldUpdates) {
            $.incidentCustomFieldUpdates = incidentCustomFieldUpdates;
            return this;
        }

        /**
         * @param incidentCustomFieldUpdates Assign a custom field to the resulting incident.
         * 
         * @return builder
         * 
         */
        public Builder incidentCustomFieldUpdates(List<EventOrchestrationServiceSetRuleActionsIncidentCustomFieldUpdateArgs> incidentCustomFieldUpdates) {
            return incidentCustomFieldUpdates(Output.of(incidentCustomFieldUpdates));
        }

        /**
         * @param incidentCustomFieldUpdates Assign a custom field to the resulting incident.
         * 
         * @return builder
         * 
         */
        public Builder incidentCustomFieldUpdates(EventOrchestrationServiceSetRuleActionsIncidentCustomFieldUpdateArgs... incidentCustomFieldUpdates) {
            return incidentCustomFieldUpdates(List.of(incidentCustomFieldUpdates));
        }

        /**
         * @param pagerdutyAutomationAction Configure a [Process Automation](https://support.pagerduty.com/docs/event-orchestration#process-automation) associated with the resulting incident.
         * 
         * @return builder
         * 
         */
        public Builder pagerdutyAutomationAction(@Nullable Output<EventOrchestrationServiceSetRuleActionsPagerdutyAutomationActionArgs> pagerdutyAutomationAction) {
            $.pagerdutyAutomationAction = pagerdutyAutomationAction;
            return this;
        }

        /**
         * @param pagerdutyAutomationAction Configure a [Process Automation](https://support.pagerduty.com/docs/event-orchestration#process-automation) associated with the resulting incident.
         * 
         * @return builder
         * 
         */
        public Builder pagerdutyAutomationAction(EventOrchestrationServiceSetRuleActionsPagerdutyAutomationActionArgs pagerdutyAutomationAction) {
            return pagerdutyAutomationAction(Output.of(pagerdutyAutomationAction));
        }

        /**
         * @param priority The ID of the priority you want to set on resulting incident. Consider using the `pagerduty.getPriority` data source.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<String> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority The ID of the priority you want to set on resulting incident. Consider using the `pagerduty.getPriority` data source.
         * 
         * @return builder
         * 
         */
        public Builder priority(String priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param routeTo The ID of a Set from this Service Orchestration whose rules you also want to use with events that match this rule.
         * 
         * @return builder
         * 
         */
        public Builder routeTo(@Nullable Output<String> routeTo) {
            $.routeTo = routeTo;
            return this;
        }

        /**
         * @param routeTo The ID of a Set from this Service Orchestration whose rules you also want to use with events that match this rule.
         * 
         * @return builder
         * 
         */
        public Builder routeTo(String routeTo) {
            return routeTo(Output.of(routeTo));
        }

        /**
         * @param severity sets Severity of the resulting alert. Allowed values are: `info`, `error`, `warning`, `critical`
         * 
         * @return builder
         * 
         */
        public Builder severity(@Nullable Output<String> severity) {
            $.severity = severity;
            return this;
        }

        /**
         * @param severity sets Severity of the resulting alert. Allowed values are: `info`, `error`, `warning`, `critical`
         * 
         * @return builder
         * 
         */
        public Builder severity(String severity) {
            return severity(Output.of(severity));
        }

        /**
         * @param suppress Set whether the resulting alert is suppressed. Suppressed alerts will not trigger an incident.
         * 
         * @return builder
         * 
         */
        public Builder suppress(@Nullable Output<Boolean> suppress) {
            $.suppress = suppress;
            return this;
        }

        /**
         * @param suppress Set whether the resulting alert is suppressed. Suppressed alerts will not trigger an incident.
         * 
         * @return builder
         * 
         */
        public Builder suppress(Boolean suppress) {
            return suppress(Output.of(suppress));
        }

        /**
         * @param suspend The number of seconds to suspend the resulting alert before triggering. This effectively pauses incident notifications. If a `resolve` event arrives before the alert triggers then PagerDuty won&#39;t create an incident for this alert.
         * 
         * @return builder
         * 
         */
        public Builder suspend(@Nullable Output<Integer> suspend) {
            $.suspend = suspend;
            return this;
        }

        /**
         * @param suspend The number of seconds to suspend the resulting alert before triggering. This effectively pauses incident notifications. If a `resolve` event arrives before the alert triggers then PagerDuty won&#39;t create an incident for this alert.
         * 
         * @return builder
         * 
         */
        public Builder suspend(Integer suspend) {
            return suspend(Output.of(suspend));
        }

        /**
         * @param variables Populate variables from event payloads and use those variables in other event actions.
         * 
         * @return builder
         * 
         */
        public Builder variables(@Nullable Output<List<EventOrchestrationServiceSetRuleActionsVariableArgs>> variables) {
            $.variables = variables;
            return this;
        }

        /**
         * @param variables Populate variables from event payloads and use those variables in other event actions.
         * 
         * @return builder
         * 
         */
        public Builder variables(List<EventOrchestrationServiceSetRuleActionsVariableArgs> variables) {
            return variables(Output.of(variables));
        }

        /**
         * @param variables Populate variables from event payloads and use those variables in other event actions.
         * 
         * @return builder
         * 
         */
        public Builder variables(EventOrchestrationServiceSetRuleActionsVariableArgs... variables) {
            return variables(List.of(variables));
        }

        public EventOrchestrationServiceSetRuleActionsArgs build() {
            return $;
        }
    }

}
