// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExtensionState extends com.pulumi.resources.ResourceArgs {

    public static final ExtensionState Empty = new ExtensionState();

    @Import(name="config")
    private @Nullable Output<String> config;

    public Optional<Output<String>> config() {
        return Optional.ofNullable(this.config);
    }

    @Import(name="endpointUrl")
    private @Nullable Output<String> endpointUrl;

    public Optional<Output<String>> endpointUrl() {
        return Optional.ofNullable(this.endpointUrl);
    }

    @Import(name="extensionObjects")
    private @Nullable Output<List<String>> extensionObjects;

    public Optional<Output<List<String>>> extensionObjects() {
        return Optional.ofNullable(this.extensionObjects);
    }

    @Import(name="extensionSchema")
    private @Nullable Output<String> extensionSchema;

    public Optional<Output<String>> extensionSchema() {
        return Optional.ofNullable(this.extensionSchema);
    }

    /**
     * URL at which the entity is uniquely displayed in the Web app
     * 
     */
    @Import(name="htmlUrl")
    private @Nullable Output<String> htmlUrl;

    /**
     * @return URL at which the entity is uniquely displayed in the Web app
     * 
     */
    public Optional<Output<String>> htmlUrl() {
        return Optional.ofNullable(this.htmlUrl);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="summary")
    private @Nullable Output<String> summary;

    public Optional<Output<String>> summary() {
        return Optional.ofNullable(this.summary);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private ExtensionState() {}

    private ExtensionState(ExtensionState $) {
        this.config = $.config;
        this.endpointUrl = $.endpointUrl;
        this.extensionObjects = $.extensionObjects;
        this.extensionSchema = $.extensionSchema;
        this.htmlUrl = $.htmlUrl;
        this.name = $.name;
        this.summary = $.summary;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExtensionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExtensionState $;

        public Builder() {
            $ = new ExtensionState();
        }

        public Builder(ExtensionState defaults) {
            $ = new ExtensionState(Objects.requireNonNull(defaults));
        }

        public Builder config(@Nullable Output<String> config) {
            $.config = config;
            return this;
        }

        public Builder config(String config) {
            return config(Output.of(config));
        }

        public Builder endpointUrl(@Nullable Output<String> endpointUrl) {
            $.endpointUrl = endpointUrl;
            return this;
        }

        public Builder endpointUrl(String endpointUrl) {
            return endpointUrl(Output.of(endpointUrl));
        }

        public Builder extensionObjects(@Nullable Output<List<String>> extensionObjects) {
            $.extensionObjects = extensionObjects;
            return this;
        }

        public Builder extensionObjects(List<String> extensionObjects) {
            return extensionObjects(Output.of(extensionObjects));
        }

        public Builder extensionObjects(String... extensionObjects) {
            return extensionObjects(List.of(extensionObjects));
        }

        public Builder extensionSchema(@Nullable Output<String> extensionSchema) {
            $.extensionSchema = extensionSchema;
            return this;
        }

        public Builder extensionSchema(String extensionSchema) {
            return extensionSchema(Output.of(extensionSchema));
        }

        /**
         * @param htmlUrl URL at which the entity is uniquely displayed in the Web app
         * 
         * @return builder
         * 
         */
        public Builder htmlUrl(@Nullable Output<String> htmlUrl) {
            $.htmlUrl = htmlUrl;
            return this;
        }

        /**
         * @param htmlUrl URL at which the entity is uniquely displayed in the Web app
         * 
         * @return builder
         * 
         */
        public Builder htmlUrl(String htmlUrl) {
            return htmlUrl(Output.of(htmlUrl));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder summary(@Nullable Output<String> summary) {
            $.summary = summary;
            return this;
        }

        public Builder summary(String summary) {
            return summary(Output.of(summary));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ExtensionState build() {
            return $;
        }
    }

}
