// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAutomationActionsActionPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAutomationActionsActionPlainArgs Empty = new GetAutomationActionsActionPlainArgs();

    /**
     * (Optional) The category of the action. The only allowed values are `diagnostic` and `remediation`.
     * 
     */
    @Import(name="actionClassification")
    private @Nullable String actionClassification;

    /**
     * @return (Optional) The category of the action. The only allowed values are `diagnostic` and `remediation`.
     * 
     */
    public Optional<String> actionClassification() {
        return Optional.ofNullable(this.actionClassification);
    }

    /**
     * The time action was created. Represented as an ISO 8601 timestamp.
     * 
     */
    @Import(name="creationTime")
    private @Nullable String creationTime;

    /**
     * @return The time action was created. Represented as an ISO 8601 timestamp.
     * 
     */
    public Optional<String> creationTime() {
        return Optional.ofNullable(this.creationTime);
    }

    /**
     * (Optional) The description of the action.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return (Optional) The description of the action.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The id of the automation actions action in the PagerDuty API.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return The id of the automation actions action in the PagerDuty API.
     * 
     */
    public String id() {
        return this.id;
    }

    /**
     * (Optional) The last time action has been modified. Represented as an ISO 8601 timestamp.
     * 
     */
    @Import(name="modifyTime")
    private @Nullable String modifyTime;

    /**
     * @return (Optional) The last time action has been modified. Represented as an ISO 8601 timestamp.
     * 
     */
    public Optional<String> modifyTime() {
        return Optional.ofNullable(this.modifyTime);
    }

    /**
     * (Optional) The Process Automation Actions runner to associate the action with.
     * 
     */
    @Import(name="runnerId")
    private @Nullable String runnerId;

    /**
     * @return (Optional) The Process Automation Actions runner to associate the action with.
     * 
     */
    public Optional<String> runnerId() {
        return Optional.ofNullable(this.runnerId);
    }

    /**
     * (Optional) The type of the runner associated with the action.
     * 
     */
    @Import(name="runnerType")
    private @Nullable String runnerType;

    /**
     * @return (Optional) The type of the runner associated with the action.
     * 
     */
    public Optional<String> runnerType() {
        return Optional.ofNullable(this.runnerType);
    }

    /**
     * The type of object. The value returned will be `action`.
     * 
     */
    @Import(name="type")
    private @Nullable String type;

    /**
     * @return The type of object. The value returned will be `action`.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    private GetAutomationActionsActionPlainArgs() {}

    private GetAutomationActionsActionPlainArgs(GetAutomationActionsActionPlainArgs $) {
        this.actionClassification = $.actionClassification;
        this.creationTime = $.creationTime;
        this.description = $.description;
        this.id = $.id;
        this.modifyTime = $.modifyTime;
        this.runnerId = $.runnerId;
        this.runnerType = $.runnerType;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAutomationActionsActionPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAutomationActionsActionPlainArgs $;

        public Builder() {
            $ = new GetAutomationActionsActionPlainArgs();
        }

        public Builder(GetAutomationActionsActionPlainArgs defaults) {
            $ = new GetAutomationActionsActionPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actionClassification (Optional) The category of the action. The only allowed values are `diagnostic` and `remediation`.
         * 
         * @return builder
         * 
         */
        public Builder actionClassification(@Nullable String actionClassification) {
            $.actionClassification = actionClassification;
            return this;
        }

        /**
         * @param creationTime The time action was created. Represented as an ISO 8601 timestamp.
         * 
         * @return builder
         * 
         */
        public Builder creationTime(@Nullable String creationTime) {
            $.creationTime = creationTime;
            return this;
        }

        /**
         * @param description (Optional) The description of the action.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param id The id of the automation actions action in the PagerDuty API.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        /**
         * @param modifyTime (Optional) The last time action has been modified. Represented as an ISO 8601 timestamp.
         * 
         * @return builder
         * 
         */
        public Builder modifyTime(@Nullable String modifyTime) {
            $.modifyTime = modifyTime;
            return this;
        }

        /**
         * @param runnerId (Optional) The Process Automation Actions runner to associate the action with.
         * 
         * @return builder
         * 
         */
        public Builder runnerId(@Nullable String runnerId) {
            $.runnerId = runnerId;
            return this;
        }

        /**
         * @param runnerType (Optional) The type of the runner associated with the action.
         * 
         * @return builder
         * 
         */
        public Builder runnerType(@Nullable String runnerType) {
            $.runnerType = runnerType;
            return this;
        }

        /**
         * @param type The type of object. The value returned will be `action`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public GetAutomationActionsActionPlainArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetAutomationActionsActionPlainArgs", "id");
            }
            return $;
        }
    }

}
