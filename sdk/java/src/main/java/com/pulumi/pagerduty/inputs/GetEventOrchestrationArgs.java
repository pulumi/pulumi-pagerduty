// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.pagerduty.inputs.GetEventOrchestrationIntegrationArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetEventOrchestrationArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetEventOrchestrationArgs Empty = new GetEventOrchestrationArgs();

    /**
     * An integration for the Event Orchestration.
     * 
     */
    @Import(name="integrations")
    private @Nullable Output<List<GetEventOrchestrationIntegrationArgs>> integrations;

    /**
     * @return An integration for the Event Orchestration.
     * 
     */
    public Optional<Output<List<GetEventOrchestrationIntegrationArgs>>> integrations() {
        return Optional.ofNullable(this.integrations);
    }

    /**
     * The name of the Global Event orchestration to find in the PagerDuty API.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the Global Event orchestration to find in the PagerDuty API.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private GetEventOrchestrationArgs() {}

    private GetEventOrchestrationArgs(GetEventOrchestrationArgs $) {
        this.integrations = $.integrations;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEventOrchestrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEventOrchestrationArgs $;

        public Builder() {
            $ = new GetEventOrchestrationArgs();
        }

        public Builder(GetEventOrchestrationArgs defaults) {
            $ = new GetEventOrchestrationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param integrations An integration for the Event Orchestration.
         * 
         * @return builder
         * 
         */
        public Builder integrations(@Nullable Output<List<GetEventOrchestrationIntegrationArgs>> integrations) {
            $.integrations = integrations;
            return this;
        }

        /**
         * @param integrations An integration for the Event Orchestration.
         * 
         * @return builder
         * 
         */
        public Builder integrations(List<GetEventOrchestrationIntegrationArgs> integrations) {
            return integrations(Output.of(integrations));
        }

        /**
         * @param integrations An integration for the Event Orchestration.
         * 
         * @return builder
         * 
         */
        public Builder integrations(GetEventOrchestrationIntegrationArgs... integrations) {
            return integrations(List.of(integrations));
        }

        /**
         * @param name The name of the Global Event orchestration to find in the PagerDuty API.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Global Event orchestration to find in the PagerDuty API.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public GetEventOrchestrationArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
