// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetEventOrchestrationGlobalCacheVariableArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetEventOrchestrationGlobalCacheVariableArgs Empty = new GetEventOrchestrationGlobalCacheVariableArgs();

    /**
     * ID of the Global Event Orchestration to which this Cache Variable belongs.
     * 
     */
    @Import(name="eventOrchestration", required=true)
    private Output<String> eventOrchestration;

    /**
     * @return ID of the Global Event Orchestration to which this Cache Variable belongs.
     * 
     */
    public Output<String> eventOrchestration() {
        return this.eventOrchestration;
    }

    /**
     * ID of the Cache Variable associated with the Global Event Orchestration. Specify either `id` or `name`. If both are specified `id` takes precedence.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return ID of the Cache Variable associated with the Global Event Orchestration. Specify either `id` or `name`. If both are specified `id` takes precedence.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Name of the Cache Variable associated with the Global Event Orchestration. Specify either `id` or `name`. If both are specified `id` takes precedence.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the Cache Variable associated with the Global Event Orchestration. Specify either `id` or `name`. If both are specified `id` takes precedence.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private GetEventOrchestrationGlobalCacheVariableArgs() {}

    private GetEventOrchestrationGlobalCacheVariableArgs(GetEventOrchestrationGlobalCacheVariableArgs $) {
        this.eventOrchestration = $.eventOrchestration;
        this.id = $.id;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEventOrchestrationGlobalCacheVariableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEventOrchestrationGlobalCacheVariableArgs $;

        public Builder() {
            $ = new GetEventOrchestrationGlobalCacheVariableArgs();
        }

        public Builder(GetEventOrchestrationGlobalCacheVariableArgs defaults) {
            $ = new GetEventOrchestrationGlobalCacheVariableArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param eventOrchestration ID of the Global Event Orchestration to which this Cache Variable belongs.
         * 
         * @return builder
         * 
         */
        public Builder eventOrchestration(Output<String> eventOrchestration) {
            $.eventOrchestration = eventOrchestration;
            return this;
        }

        /**
         * @param eventOrchestration ID of the Global Event Orchestration to which this Cache Variable belongs.
         * 
         * @return builder
         * 
         */
        public Builder eventOrchestration(String eventOrchestration) {
            return eventOrchestration(Output.of(eventOrchestration));
        }

        /**
         * @param id ID of the Cache Variable associated with the Global Event Orchestration. Specify either `id` or `name`. If both are specified `id` takes precedence.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id ID of the Cache Variable associated with the Global Event Orchestration. Specify either `id` or `name`. If both are specified `id` takes precedence.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param name Name of the Cache Variable associated with the Global Event Orchestration. Specify either `id` or `name`. If both are specified `id` takes precedence.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Cache Variable associated with the Global Event Orchestration. Specify either `id` or `name`. If both are specified `id` takes precedence.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public GetEventOrchestrationGlobalCacheVariableArgs build() {
            if ($.eventOrchestration == null) {
                throw new MissingRequiredPropertyException("GetEventOrchestrationGlobalCacheVariableArgs", "eventOrchestration");
            }
            return $;
        }
    }

}
