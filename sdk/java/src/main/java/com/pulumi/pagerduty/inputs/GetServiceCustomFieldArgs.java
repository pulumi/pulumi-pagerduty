// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetServiceCustomFieldArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetServiceCustomFieldArgs Empty = new GetServiceCustomFieldArgs();

    /**
     * The human-readable name of the field to look up. This must be unique across an account.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return The human-readable name of the field to look up. This must be unique across an account.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    private GetServiceCustomFieldArgs() {}

    private GetServiceCustomFieldArgs(GetServiceCustomFieldArgs $) {
        this.displayName = $.displayName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetServiceCustomFieldArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetServiceCustomFieldArgs $;

        public Builder() {
            $ = new GetServiceCustomFieldArgs();
        }

        public Builder(GetServiceCustomFieldArgs defaults) {
            $ = new GetServiceCustomFieldArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayName The human-readable name of the field to look up. This must be unique across an account.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The human-readable name of the field to look up. This must be unique across an account.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public GetServiceCustomFieldArgs build() {
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("GetServiceCustomFieldArgs", "displayName");
            }
            return $;
        }
    }

}
