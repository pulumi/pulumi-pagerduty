// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetStandardsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetStandardsArgs Empty = new GetStandardsArgs();

    /**
     * Filter by `resourceType` the received standards. Allowed values are `technicalService`.
     * 
     */
    @Import(name="resourceType")
    private @Nullable Output<String> resourceType;

    /**
     * @return Filter by `resourceType` the received standards. Allowed values are `technicalService`.
     * 
     */
    public Optional<Output<String>> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    private GetStandardsArgs() {}

    private GetStandardsArgs(GetStandardsArgs $) {
        this.resourceType = $.resourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetStandardsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetStandardsArgs $;

        public Builder() {
            $ = new GetStandardsArgs();
        }

        public Builder(GetStandardsArgs defaults) {
            $ = new GetStandardsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resourceType Filter by `resourceType` the received standards. Allowed values are `technicalService`.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(@Nullable Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType Filter by `resourceType` the received standards. Allowed values are `technicalService`.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        public GetStandardsArgs build() {
            return $;
        }
    }

}
