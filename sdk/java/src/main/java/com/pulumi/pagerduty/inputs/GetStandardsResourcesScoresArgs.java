// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetStandardsResourcesScoresArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetStandardsResourcesScoresArgs Empty = new GetStandardsResourcesScoresArgs();

    /**
     * List of identifiers of the resources to query.
     * 
     */
    @Import(name="ids", required=true)
    private Output<List<String>> ids;

    /**
     * @return List of identifiers of the resources to query.
     * 
     */
    public Output<List<String>> ids() {
        return this.ids;
    }

    /**
     * Type of the object the standards are associated to. Allowed values are `technical_services`.
     * 
     */
    @Import(name="resourceType", required=true)
    private Output<String> resourceType;

    /**
     * @return Type of the object the standards are associated to. Allowed values are `technical_services`.
     * 
     */
    public Output<String> resourceType() {
        return this.resourceType;
    }

    private GetStandardsResourcesScoresArgs() {}

    private GetStandardsResourcesScoresArgs(GetStandardsResourcesScoresArgs $) {
        this.ids = $.ids;
        this.resourceType = $.resourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetStandardsResourcesScoresArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetStandardsResourcesScoresArgs $;

        public Builder() {
            $ = new GetStandardsResourcesScoresArgs();
        }

        public Builder(GetStandardsResourcesScoresArgs defaults) {
            $ = new GetStandardsResourcesScoresArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ids List of identifiers of the resources to query.
         * 
         * @return builder
         * 
         */
        public Builder ids(Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids List of identifiers of the resources to query.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids List of identifiers of the resources to query.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param resourceType Type of the object the standards are associated to. Allowed values are `technical_services`.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType Type of the object the standards are associated to. Allowed values are `technical_services`.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        public GetStandardsResourcesScoresArgs build() {
            if ($.ids == null) {
                throw new MissingRequiredPropertyException("GetStandardsResourcesScoresArgs", "ids");
            }
            if ($.resourceType == null) {
                throw new MissingRequiredPropertyException("GetStandardsResourcesScoresArgs", "resourceType");
            }
            return $;
        }
    }

}
