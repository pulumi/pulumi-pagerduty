// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetUsersArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetUsersArgs Empty = new GetUsersArgs();

    /**
     * List of team IDs. Only results related to these teams will be returned. Account must have the `teams` ability to use this parameter.
     * 
     */
    @Import(name="teamIds")
    private @Nullable Output<List<String>> teamIds;

    /**
     * @return List of team IDs. Only results related to these teams will be returned. Account must have the `teams` ability to use this parameter.
     * 
     */
    public Optional<Output<List<String>>> teamIds() {
        return Optional.ofNullable(this.teamIds);
    }

    private GetUsersArgs() {}

    private GetUsersArgs(GetUsersArgs $) {
        this.teamIds = $.teamIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetUsersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetUsersArgs $;

        public Builder() {
            $ = new GetUsersArgs();
        }

        public Builder(GetUsersArgs defaults) {
            $ = new GetUsersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param teamIds List of team IDs. Only results related to these teams will be returned. Account must have the `teams` ability to use this parameter.
         * 
         * @return builder
         * 
         */
        public Builder teamIds(@Nullable Output<List<String>> teamIds) {
            $.teamIds = teamIds;
            return this;
        }

        /**
         * @param teamIds List of team IDs. Only results related to these teams will be returned. Account must have the `teams` ability to use this parameter.
         * 
         * @return builder
         * 
         */
        public Builder teamIds(List<String> teamIds) {
            return teamIds(Output.of(teamIds));
        }

        /**
         * @param teamIds List of team IDs. Only results related to these teams will be returned. Account must have the `teams` ability to use this parameter.
         * 
         * @return builder
         * 
         */
        public Builder teamIds(String... teamIds) {
            return teamIds(List.of(teamIds));
        }

        public GetUsersArgs build() {
            return $;
        }
    }

}
