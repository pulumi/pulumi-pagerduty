// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class JiraCloudAccountMappingRuleConfigJiraProjectArgs extends com.pulumi.resources.ResourceArgs {

    public static final JiraCloudAccountMappingRuleConfigJiraProjectArgs Empty = new JiraCloudAccountMappingRuleConfigJiraProjectArgs();

    /**
     * Unique identifier for the Jira project.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return Unique identifier for the Jira project.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * The short key name of the Jira project.
     * 
     */
    @Import(name="key", required=true)
    private Output<String> key;

    /**
     * @return The short key name of the Jira project.
     * 
     */
    public Output<String> key() {
        return this.key;
    }

    /**
     * The name of the Jira project.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the Jira project.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private JiraCloudAccountMappingRuleConfigJiraProjectArgs() {}

    private JiraCloudAccountMappingRuleConfigJiraProjectArgs(JiraCloudAccountMappingRuleConfigJiraProjectArgs $) {
        this.id = $.id;
        this.key = $.key;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JiraCloudAccountMappingRuleConfigJiraProjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JiraCloudAccountMappingRuleConfigJiraProjectArgs $;

        public Builder() {
            $ = new JiraCloudAccountMappingRuleConfigJiraProjectArgs();
        }

        public Builder(JiraCloudAccountMappingRuleConfigJiraProjectArgs defaults) {
            $ = new JiraCloudAccountMappingRuleConfigJiraProjectArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id Unique identifier for the Jira project.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Unique identifier for the Jira project.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param key The short key name of the Jira project.
         * 
         * @return builder
         * 
         */
        public Builder key(Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key The short key name of the Jira project.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param name The name of the Jira project.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Jira project.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public JiraCloudAccountMappingRuleConfigJiraProjectArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("JiraCloudAccountMappingRuleConfigJiraProjectArgs", "id");
            }
            if ($.key == null) {
                throw new MissingRequiredPropertyException("JiraCloudAccountMappingRuleConfigJiraProjectArgs", "key");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("JiraCloudAccountMappingRuleConfigJiraProjectArgs", "name");
            }
            return $;
        }
    }

}
