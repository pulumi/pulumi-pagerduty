// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.pagerduty.inputs.ResponsePlayResponderEscalationRuleTargetArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResponsePlayResponderEscalationRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResponsePlayResponderEscalationRuleArgs Empty = new ResponsePlayResponderEscalationRuleArgs();

    /**
     * The number of minutes before an unacknowledged incident escalates away from this rule.
     * 
     */
    @Import(name="escalationDelayInMinutes")
    private @Nullable Output<Integer> escalationDelayInMinutes;

    /**
     * @return The number of minutes before an unacknowledged incident escalates away from this rule.
     * 
     */
    public Optional<Output<Integer>> escalationDelayInMinutes() {
        return Optional.ofNullable(this.escalationDelayInMinutes);
    }

    /**
     * The ID of the response play.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The ID of the response play.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The targets an incident should be assigned to upon reaching this rule.
     * 
     */
    @Import(name="targets", required=true)
    private Output<List<ResponsePlayResponderEscalationRuleTargetArgs>> targets;

    /**
     * @return The targets an incident should be assigned to upon reaching this rule.
     * 
     */
    public Output<List<ResponsePlayResponderEscalationRuleTargetArgs>> targets() {
        return this.targets;
    }

    private ResponsePlayResponderEscalationRuleArgs() {}

    private ResponsePlayResponderEscalationRuleArgs(ResponsePlayResponderEscalationRuleArgs $) {
        this.escalationDelayInMinutes = $.escalationDelayInMinutes;
        this.id = $.id;
        this.targets = $.targets;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResponsePlayResponderEscalationRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResponsePlayResponderEscalationRuleArgs $;

        public Builder() {
            $ = new ResponsePlayResponderEscalationRuleArgs();
        }

        public Builder(ResponsePlayResponderEscalationRuleArgs defaults) {
            $ = new ResponsePlayResponderEscalationRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param escalationDelayInMinutes The number of minutes before an unacknowledged incident escalates away from this rule.
         * 
         * @return builder
         * 
         */
        public Builder escalationDelayInMinutes(@Nullable Output<Integer> escalationDelayInMinutes) {
            $.escalationDelayInMinutes = escalationDelayInMinutes;
            return this;
        }

        /**
         * @param escalationDelayInMinutes The number of minutes before an unacknowledged incident escalates away from this rule.
         * 
         * @return builder
         * 
         */
        public Builder escalationDelayInMinutes(Integer escalationDelayInMinutes) {
            return escalationDelayInMinutes(Output.of(escalationDelayInMinutes));
        }

        /**
         * @param id The ID of the response play.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of the response play.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param targets The targets an incident should be assigned to upon reaching this rule.
         * 
         * @return builder
         * 
         */
        public Builder targets(Output<List<ResponsePlayResponderEscalationRuleTargetArgs>> targets) {
            $.targets = targets;
            return this;
        }

        /**
         * @param targets The targets an incident should be assigned to upon reaching this rule.
         * 
         * @return builder
         * 
         */
        public Builder targets(List<ResponsePlayResponderEscalationRuleTargetArgs> targets) {
            return targets(Output.of(targets));
        }

        /**
         * @param targets The targets an incident should be assigned to upon reaching this rule.
         * 
         * @return builder
         * 
         */
        public Builder targets(ResponsePlayResponderEscalationRuleTargetArgs... targets) {
            return targets(List.of(targets));
        }

        public ResponsePlayResponderEscalationRuleArgs build() {
            if ($.targets == null) {
                throw new MissingRequiredPropertyException("ResponsePlayResponderEscalationRuleArgs", "targets");
            }
            return $;
        }
    }

}
