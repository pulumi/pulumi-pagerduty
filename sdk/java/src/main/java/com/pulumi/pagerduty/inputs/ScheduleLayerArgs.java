// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.pagerduty.inputs.ScheduleLayerRestrictionArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScheduleLayerArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScheduleLayerArgs Empty = new ScheduleLayerArgs();

    /**
     * The end time of the schedule layer. If not specified, the layer does not end.
     * 
     */
    @Import(name="end")
    private @Nullable Output<String> end;

    /**
     * @return The end time of the schedule layer. If not specified, the layer does not end.
     * 
     */
    public Optional<Output<String>> end() {
        return Optional.ofNullable(this.end);
    }

    /**
     * The ID of the schedule.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The ID of the schedule.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The name of the schedule layer.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the schedule layer.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="renderedCoveragePercentage")
    private @Nullable Output<String> renderedCoveragePercentage;

    public Optional<Output<String>> renderedCoveragePercentage() {
        return Optional.ofNullable(this.renderedCoveragePercentage);
    }

    /**
     * A schedule layer restriction block. Restriction blocks documented below.
     * 
     */
    @Import(name="restrictions")
    private @Nullable Output<List<ScheduleLayerRestrictionArgs>> restrictions;

    /**
     * @return A schedule layer restriction block. Restriction blocks documented below.
     * 
     */
    public Optional<Output<List<ScheduleLayerRestrictionArgs>>> restrictions() {
        return Optional.ofNullable(this.restrictions);
    }

    /**
     * The duration of each on-call shift in `seconds`.
     * 
     */
    @Import(name="rotationTurnLengthSeconds", required=true)
    private Output<Integer> rotationTurnLengthSeconds;

    /**
     * @return The duration of each on-call shift in `seconds`.
     * 
     */
    public Output<Integer> rotationTurnLengthSeconds() {
        return this.rotationTurnLengthSeconds;
    }

    /**
     * The effective start time of the schedule layer. This can be before the start time of the schedule.
     * 
     */
    @Import(name="rotationVirtualStart", required=true)
    private Output<String> rotationVirtualStart;

    /**
     * @return The effective start time of the schedule layer. This can be before the start time of the schedule.
     * 
     */
    public Output<String> rotationVirtualStart() {
        return this.rotationVirtualStart;
    }

    /**
     * The start time of the schedule layer.
     * 
     */
    @Import(name="start", required=true)
    private Output<String> start;

    /**
     * @return The start time of the schedule layer.
     * 
     */
    public Output<String> start() {
        return this.start;
    }

    /**
     * The ordered list of users on this layer. The position of the user on the list determines their order in the layer.
     * 
     */
    @Import(name="users", required=true)
    private Output<List<String>> users;

    /**
     * @return The ordered list of users on this layer. The position of the user on the list determines their order in the layer.
     * 
     */
    public Output<List<String>> users() {
        return this.users;
    }

    private ScheduleLayerArgs() {}

    private ScheduleLayerArgs(ScheduleLayerArgs $) {
        this.end = $.end;
        this.id = $.id;
        this.name = $.name;
        this.renderedCoveragePercentage = $.renderedCoveragePercentage;
        this.restrictions = $.restrictions;
        this.rotationTurnLengthSeconds = $.rotationTurnLengthSeconds;
        this.rotationVirtualStart = $.rotationVirtualStart;
        this.start = $.start;
        this.users = $.users;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduleLayerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduleLayerArgs $;

        public Builder() {
            $ = new ScheduleLayerArgs();
        }

        public Builder(ScheduleLayerArgs defaults) {
            $ = new ScheduleLayerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param end The end time of the schedule layer. If not specified, the layer does not end.
         * 
         * @return builder
         * 
         */
        public Builder end(@Nullable Output<String> end) {
            $.end = end;
            return this;
        }

        /**
         * @param end The end time of the schedule layer. If not specified, the layer does not end.
         * 
         * @return builder
         * 
         */
        public Builder end(String end) {
            return end(Output.of(end));
        }

        /**
         * @param id The ID of the schedule.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of the schedule.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param name The name of the schedule layer.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the schedule layer.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder renderedCoveragePercentage(@Nullable Output<String> renderedCoveragePercentage) {
            $.renderedCoveragePercentage = renderedCoveragePercentage;
            return this;
        }

        public Builder renderedCoveragePercentage(String renderedCoveragePercentage) {
            return renderedCoveragePercentage(Output.of(renderedCoveragePercentage));
        }

        /**
         * @param restrictions A schedule layer restriction block. Restriction blocks documented below.
         * 
         * @return builder
         * 
         */
        public Builder restrictions(@Nullable Output<List<ScheduleLayerRestrictionArgs>> restrictions) {
            $.restrictions = restrictions;
            return this;
        }

        /**
         * @param restrictions A schedule layer restriction block. Restriction blocks documented below.
         * 
         * @return builder
         * 
         */
        public Builder restrictions(List<ScheduleLayerRestrictionArgs> restrictions) {
            return restrictions(Output.of(restrictions));
        }

        /**
         * @param restrictions A schedule layer restriction block. Restriction blocks documented below.
         * 
         * @return builder
         * 
         */
        public Builder restrictions(ScheduleLayerRestrictionArgs... restrictions) {
            return restrictions(List.of(restrictions));
        }

        /**
         * @param rotationTurnLengthSeconds The duration of each on-call shift in `seconds`.
         * 
         * @return builder
         * 
         */
        public Builder rotationTurnLengthSeconds(Output<Integer> rotationTurnLengthSeconds) {
            $.rotationTurnLengthSeconds = rotationTurnLengthSeconds;
            return this;
        }

        /**
         * @param rotationTurnLengthSeconds The duration of each on-call shift in `seconds`.
         * 
         * @return builder
         * 
         */
        public Builder rotationTurnLengthSeconds(Integer rotationTurnLengthSeconds) {
            return rotationTurnLengthSeconds(Output.of(rotationTurnLengthSeconds));
        }

        /**
         * @param rotationVirtualStart The effective start time of the schedule layer. This can be before the start time of the schedule.
         * 
         * @return builder
         * 
         */
        public Builder rotationVirtualStart(Output<String> rotationVirtualStart) {
            $.rotationVirtualStart = rotationVirtualStart;
            return this;
        }

        /**
         * @param rotationVirtualStart The effective start time of the schedule layer. This can be before the start time of the schedule.
         * 
         * @return builder
         * 
         */
        public Builder rotationVirtualStart(String rotationVirtualStart) {
            return rotationVirtualStart(Output.of(rotationVirtualStart));
        }

        /**
         * @param start The start time of the schedule layer.
         * 
         * @return builder
         * 
         */
        public Builder start(Output<String> start) {
            $.start = start;
            return this;
        }

        /**
         * @param start The start time of the schedule layer.
         * 
         * @return builder
         * 
         */
        public Builder start(String start) {
            return start(Output.of(start));
        }

        /**
         * @param users The ordered list of users on this layer. The position of the user on the list determines their order in the layer.
         * 
         * @return builder
         * 
         */
        public Builder users(Output<List<String>> users) {
            $.users = users;
            return this;
        }

        /**
         * @param users The ordered list of users on this layer. The position of the user on the list determines their order in the layer.
         * 
         * @return builder
         * 
         */
        public Builder users(List<String> users) {
            return users(Output.of(users));
        }

        /**
         * @param users The ordered list of users on this layer. The position of the user on the list determines their order in the layer.
         * 
         * @return builder
         * 
         */
        public Builder users(String... users) {
            return users(List.of(users));
        }

        public ScheduleLayerArgs build() {
            if ($.rotationTurnLengthSeconds == null) {
                throw new MissingRequiredPropertyException("ScheduleLayerArgs", "rotationTurnLengthSeconds");
            }
            if ($.rotationVirtualStart == null) {
                throw new MissingRequiredPropertyException("ScheduleLayerArgs", "rotationVirtualStart");
            }
            if ($.start == null) {
                throw new MissingRequiredPropertyException("ScheduleLayerArgs", "start");
            }
            if ($.users == null) {
                throw new MissingRequiredPropertyException("ScheduleLayerArgs", "users");
            }
            return $;
        }
    }

}
