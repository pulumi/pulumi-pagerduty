// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceCustomFieldFieldOptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceCustomFieldFieldOptionArgs Empty = new ServiceCustomFieldFieldOptionArgs();

    /**
     * Must be `string`.
     * 
     */
    @Import(name="dataType", required=true)
    private Output<String> dataType;

    /**
     * @return Must be `string`.
     * 
     */
    public Output<String> dataType() {
        return this.dataType;
    }

    /**
     * The ID of the service custom field.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The ID of the service custom field.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The value of the option.
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return The value of the option.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private ServiceCustomFieldFieldOptionArgs() {}

    private ServiceCustomFieldFieldOptionArgs(ServiceCustomFieldFieldOptionArgs $) {
        this.dataType = $.dataType;
        this.id = $.id;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceCustomFieldFieldOptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceCustomFieldFieldOptionArgs $;

        public Builder() {
            $ = new ServiceCustomFieldFieldOptionArgs();
        }

        public Builder(ServiceCustomFieldFieldOptionArgs defaults) {
            $ = new ServiceCustomFieldFieldOptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataType Must be `string`.
         * 
         * @return builder
         * 
         */
        public Builder dataType(Output<String> dataType) {
            $.dataType = dataType;
            return this;
        }

        /**
         * @param dataType Must be `string`.
         * 
         * @return builder
         * 
         */
        public Builder dataType(String dataType) {
            return dataType(Output.of(dataType));
        }

        /**
         * @param id The ID of the service custom field.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of the service custom field.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param value The value of the option.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value The value of the option.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public ServiceCustomFieldFieldOptionArgs build() {
            if ($.dataType == null) {
                throw new MissingRequiredPropertyException("ServiceCustomFieldFieldOptionArgs", "dataType");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("ServiceCustomFieldFieldOptionArgs", "value");
            }
            return $;
        }
    }

}
