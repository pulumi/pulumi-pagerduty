// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.pagerduty.inputs.ServiceEventRuleActionsAnnotateArgs;
import com.pulumi.pagerduty.inputs.ServiceEventRuleActionsEventActionArgs;
import com.pulumi.pagerduty.inputs.ServiceEventRuleActionsExtractionArgs;
import com.pulumi.pagerduty.inputs.ServiceEventRuleActionsPriorityArgs;
import com.pulumi.pagerduty.inputs.ServiceEventRuleActionsSeverityArgs;
import com.pulumi.pagerduty.inputs.ServiceEventRuleActionsSuppressArgs;
import com.pulumi.pagerduty.inputs.ServiceEventRuleActionsSuspendArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceEventRuleActionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceEventRuleActionsArgs Empty = new ServiceEventRuleActionsArgs();

    /**
     * Note added to the event.
     * 
     */
    @Import(name="annotates")
    private @Nullable Output<List<ServiceEventRuleActionsAnnotateArgs>> annotates;

    /**
     * @return Note added to the event.
     * 
     */
    public Optional<Output<List<ServiceEventRuleActionsAnnotateArgs>>> annotates() {
        return Optional.ofNullable(this.annotates);
    }

    /**
     * An object with a single `value` field. The value sets whether the resulting alert status is `trigger` or `resolve`.
     * 
     */
    @Import(name="eventActions")
    private @Nullable Output<List<ServiceEventRuleActionsEventActionArgs>> eventActions;

    /**
     * @return An object with a single `value` field. The value sets whether the resulting alert status is `trigger` or `resolve`.
     * 
     */
    public Optional<Output<List<ServiceEventRuleActionsEventActionArgs>>> eventActions() {
        return Optional.ofNullable(this.eventActions);
    }

    /**
     * Allows you to copy important data from one event field to another. Extraction objects may use *either* of the following field structures:
     * 
     */
    @Import(name="extractions")
    private @Nullable Output<List<ServiceEventRuleActionsExtractionArgs>> extractions;

    /**
     * @return Allows you to copy important data from one event field to another. Extraction objects may use *either* of the following field structures:
     * 
     */
    public Optional<Output<List<ServiceEventRuleActionsExtractionArgs>>> extractions() {
        return Optional.ofNullable(this.extractions);
    }

    /**
     * The ID of the priority applied to the event.
     * 
     */
    @Import(name="priorities")
    private @Nullable Output<List<ServiceEventRuleActionsPriorityArgs>> priorities;

    /**
     * @return The ID of the priority applied to the event.
     * 
     */
    public Optional<Output<List<ServiceEventRuleActionsPriorityArgs>>> priorities() {
        return Optional.ofNullable(this.priorities);
    }

    /**
     * The [severity level](https://support.pagerduty.com/docs/rulesets#section-set-severity-with-event-rules) of the event. Can be either `info`,`error`,`warning`, or `critical`.
     * 
     */
    @Import(name="severities")
    private @Nullable Output<List<ServiceEventRuleActionsSeverityArgs>> severities;

    /**
     * @return The [severity level](https://support.pagerduty.com/docs/rulesets#section-set-severity-with-event-rules) of the event. Can be either `info`,`error`,`warning`, or `critical`.
     * 
     */
    public Optional<Output<List<ServiceEventRuleActionsSeverityArgs>>> severities() {
        return Optional.ofNullable(this.severities);
    }

    /**
     * Controls whether an alert is [suppressed](https://support.pagerduty.com/docs/rulesets#section-suppress-but-create-triggering-thresholds-with-event-rules) (does not create an incident).
     * 
     */
    @Import(name="suppresses")
    private @Nullable Output<List<ServiceEventRuleActionsSuppressArgs>> suppresses;

    /**
     * @return Controls whether an alert is [suppressed](https://support.pagerduty.com/docs/rulesets#section-suppress-but-create-triggering-thresholds-with-event-rules) (does not create an incident).
     * 
     */
    public Optional<Output<List<ServiceEventRuleActionsSuppressArgs>>> suppresses() {
        return Optional.ofNullable(this.suppresses);
    }

    /**
     * An object with a single `value` field. The value sets the length of time to suspend the resulting alert before triggering.
     * 
     */
    @Import(name="suspends")
    private @Nullable Output<List<ServiceEventRuleActionsSuspendArgs>> suspends;

    /**
     * @return An object with a single `value` field. The value sets the length of time to suspend the resulting alert before triggering.
     * 
     */
    public Optional<Output<List<ServiceEventRuleActionsSuspendArgs>>> suspends() {
        return Optional.ofNullable(this.suspends);
    }

    private ServiceEventRuleActionsArgs() {}

    private ServiceEventRuleActionsArgs(ServiceEventRuleActionsArgs $) {
        this.annotates = $.annotates;
        this.eventActions = $.eventActions;
        this.extractions = $.extractions;
        this.priorities = $.priorities;
        this.severities = $.severities;
        this.suppresses = $.suppresses;
        this.suspends = $.suspends;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceEventRuleActionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceEventRuleActionsArgs $;

        public Builder() {
            $ = new ServiceEventRuleActionsArgs();
        }

        public Builder(ServiceEventRuleActionsArgs defaults) {
            $ = new ServiceEventRuleActionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param annotates Note added to the event.
         * 
         * @return builder
         * 
         */
        public Builder annotates(@Nullable Output<List<ServiceEventRuleActionsAnnotateArgs>> annotates) {
            $.annotates = annotates;
            return this;
        }

        /**
         * @param annotates Note added to the event.
         * 
         * @return builder
         * 
         */
        public Builder annotates(List<ServiceEventRuleActionsAnnotateArgs> annotates) {
            return annotates(Output.of(annotates));
        }

        /**
         * @param annotates Note added to the event.
         * 
         * @return builder
         * 
         */
        public Builder annotates(ServiceEventRuleActionsAnnotateArgs... annotates) {
            return annotates(List.of(annotates));
        }

        /**
         * @param eventActions An object with a single `value` field. The value sets whether the resulting alert status is `trigger` or `resolve`.
         * 
         * @return builder
         * 
         */
        public Builder eventActions(@Nullable Output<List<ServiceEventRuleActionsEventActionArgs>> eventActions) {
            $.eventActions = eventActions;
            return this;
        }

        /**
         * @param eventActions An object with a single `value` field. The value sets whether the resulting alert status is `trigger` or `resolve`.
         * 
         * @return builder
         * 
         */
        public Builder eventActions(List<ServiceEventRuleActionsEventActionArgs> eventActions) {
            return eventActions(Output.of(eventActions));
        }

        /**
         * @param eventActions An object with a single `value` field. The value sets whether the resulting alert status is `trigger` or `resolve`.
         * 
         * @return builder
         * 
         */
        public Builder eventActions(ServiceEventRuleActionsEventActionArgs... eventActions) {
            return eventActions(List.of(eventActions));
        }

        /**
         * @param extractions Allows you to copy important data from one event field to another. Extraction objects may use *either* of the following field structures:
         * 
         * @return builder
         * 
         */
        public Builder extractions(@Nullable Output<List<ServiceEventRuleActionsExtractionArgs>> extractions) {
            $.extractions = extractions;
            return this;
        }

        /**
         * @param extractions Allows you to copy important data from one event field to another. Extraction objects may use *either* of the following field structures:
         * 
         * @return builder
         * 
         */
        public Builder extractions(List<ServiceEventRuleActionsExtractionArgs> extractions) {
            return extractions(Output.of(extractions));
        }

        /**
         * @param extractions Allows you to copy important data from one event field to another. Extraction objects may use *either* of the following field structures:
         * 
         * @return builder
         * 
         */
        public Builder extractions(ServiceEventRuleActionsExtractionArgs... extractions) {
            return extractions(List.of(extractions));
        }

        /**
         * @param priorities The ID of the priority applied to the event.
         * 
         * @return builder
         * 
         */
        public Builder priorities(@Nullable Output<List<ServiceEventRuleActionsPriorityArgs>> priorities) {
            $.priorities = priorities;
            return this;
        }

        /**
         * @param priorities The ID of the priority applied to the event.
         * 
         * @return builder
         * 
         */
        public Builder priorities(List<ServiceEventRuleActionsPriorityArgs> priorities) {
            return priorities(Output.of(priorities));
        }

        /**
         * @param priorities The ID of the priority applied to the event.
         * 
         * @return builder
         * 
         */
        public Builder priorities(ServiceEventRuleActionsPriorityArgs... priorities) {
            return priorities(List.of(priorities));
        }

        /**
         * @param severities The [severity level](https://support.pagerduty.com/docs/rulesets#section-set-severity-with-event-rules) of the event. Can be either `info`,`error`,`warning`, or `critical`.
         * 
         * @return builder
         * 
         */
        public Builder severities(@Nullable Output<List<ServiceEventRuleActionsSeverityArgs>> severities) {
            $.severities = severities;
            return this;
        }

        /**
         * @param severities The [severity level](https://support.pagerduty.com/docs/rulesets#section-set-severity-with-event-rules) of the event. Can be either `info`,`error`,`warning`, or `critical`.
         * 
         * @return builder
         * 
         */
        public Builder severities(List<ServiceEventRuleActionsSeverityArgs> severities) {
            return severities(Output.of(severities));
        }

        /**
         * @param severities The [severity level](https://support.pagerduty.com/docs/rulesets#section-set-severity-with-event-rules) of the event. Can be either `info`,`error`,`warning`, or `critical`.
         * 
         * @return builder
         * 
         */
        public Builder severities(ServiceEventRuleActionsSeverityArgs... severities) {
            return severities(List.of(severities));
        }

        /**
         * @param suppresses Controls whether an alert is [suppressed](https://support.pagerduty.com/docs/rulesets#section-suppress-but-create-triggering-thresholds-with-event-rules) (does not create an incident).
         * 
         * @return builder
         * 
         */
        public Builder suppresses(@Nullable Output<List<ServiceEventRuleActionsSuppressArgs>> suppresses) {
            $.suppresses = suppresses;
            return this;
        }

        /**
         * @param suppresses Controls whether an alert is [suppressed](https://support.pagerduty.com/docs/rulesets#section-suppress-but-create-triggering-thresholds-with-event-rules) (does not create an incident).
         * 
         * @return builder
         * 
         */
        public Builder suppresses(List<ServiceEventRuleActionsSuppressArgs> suppresses) {
            return suppresses(Output.of(suppresses));
        }

        /**
         * @param suppresses Controls whether an alert is [suppressed](https://support.pagerduty.com/docs/rulesets#section-suppress-but-create-triggering-thresholds-with-event-rules) (does not create an incident).
         * 
         * @return builder
         * 
         */
        public Builder suppresses(ServiceEventRuleActionsSuppressArgs... suppresses) {
            return suppresses(List.of(suppresses));
        }

        /**
         * @param suspends An object with a single `value` field. The value sets the length of time to suspend the resulting alert before triggering.
         * 
         * @return builder
         * 
         */
        public Builder suspends(@Nullable Output<List<ServiceEventRuleActionsSuspendArgs>> suspends) {
            $.suspends = suspends;
            return this;
        }

        /**
         * @param suspends An object with a single `value` field. The value sets the length of time to suspend the resulting alert before triggering.
         * 
         * @return builder
         * 
         */
        public Builder suspends(List<ServiceEventRuleActionsSuspendArgs> suspends) {
            return suspends(Output.of(suspends));
        }

        /**
         * @param suspends An object with a single `value` field. The value sets the length of time to suspend the resulting alert before triggering.
         * 
         * @return builder
         * 
         */
        public Builder suspends(ServiceEventRuleActionsSuspendArgs... suspends) {
            return suspends(List.of(suspends));
        }

        public ServiceEventRuleActionsArgs build() {
            return $;
        }
    }

}
