// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.pagerduty.inputs.ServiceEventRuleTimeFrameActiveBetweenArgs;
import com.pulumi.pagerduty.inputs.ServiceEventRuleTimeFrameScheduledWeeklyArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceEventRuleTimeFrameArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceEventRuleTimeFrameArgs Empty = new ServiceEventRuleTimeFrameArgs();

    /**
     * Values for executing the rule during a specific time period.
     * 
     */
    @Import(name="activeBetweens")
    private @Nullable Output<List<ServiceEventRuleTimeFrameActiveBetweenArgs>> activeBetweens;

    /**
     * @return Values for executing the rule during a specific time period.
     * 
     */
    public Optional<Output<List<ServiceEventRuleTimeFrameActiveBetweenArgs>>> activeBetweens() {
        return Optional.ofNullable(this.activeBetweens);
    }

    /**
     * Values for executing the rule on a recurring schedule.
     * 
     */
    @Import(name="scheduledWeeklies")
    private @Nullable Output<List<ServiceEventRuleTimeFrameScheduledWeeklyArgs>> scheduledWeeklies;

    /**
     * @return Values for executing the rule on a recurring schedule.
     * 
     */
    public Optional<Output<List<ServiceEventRuleTimeFrameScheduledWeeklyArgs>>> scheduledWeeklies() {
        return Optional.ofNullable(this.scheduledWeeklies);
    }

    private ServiceEventRuleTimeFrameArgs() {}

    private ServiceEventRuleTimeFrameArgs(ServiceEventRuleTimeFrameArgs $) {
        this.activeBetweens = $.activeBetweens;
        this.scheduledWeeklies = $.scheduledWeeklies;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceEventRuleTimeFrameArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceEventRuleTimeFrameArgs $;

        public Builder() {
            $ = new ServiceEventRuleTimeFrameArgs();
        }

        public Builder(ServiceEventRuleTimeFrameArgs defaults) {
            $ = new ServiceEventRuleTimeFrameArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param activeBetweens Values for executing the rule during a specific time period.
         * 
         * @return builder
         * 
         */
        public Builder activeBetweens(@Nullable Output<List<ServiceEventRuleTimeFrameActiveBetweenArgs>> activeBetweens) {
            $.activeBetweens = activeBetweens;
            return this;
        }

        /**
         * @param activeBetweens Values for executing the rule during a specific time period.
         * 
         * @return builder
         * 
         */
        public Builder activeBetweens(List<ServiceEventRuleTimeFrameActiveBetweenArgs> activeBetweens) {
            return activeBetweens(Output.of(activeBetweens));
        }

        /**
         * @param activeBetweens Values for executing the rule during a specific time period.
         * 
         * @return builder
         * 
         */
        public Builder activeBetweens(ServiceEventRuleTimeFrameActiveBetweenArgs... activeBetweens) {
            return activeBetweens(List.of(activeBetweens));
        }

        /**
         * @param scheduledWeeklies Values for executing the rule on a recurring schedule.
         * 
         * @return builder
         * 
         */
        public Builder scheduledWeeklies(@Nullable Output<List<ServiceEventRuleTimeFrameScheduledWeeklyArgs>> scheduledWeeklies) {
            $.scheduledWeeklies = scheduledWeeklies;
            return this;
        }

        /**
         * @param scheduledWeeklies Values for executing the rule on a recurring schedule.
         * 
         * @return builder
         * 
         */
        public Builder scheduledWeeklies(List<ServiceEventRuleTimeFrameScheduledWeeklyArgs> scheduledWeeklies) {
            return scheduledWeeklies(Output.of(scheduledWeeklies));
        }

        /**
         * @param scheduledWeeklies Values for executing the rule on a recurring schedule.
         * 
         * @return builder
         * 
         */
        public Builder scheduledWeeklies(ServiceEventRuleTimeFrameScheduledWeeklyArgs... scheduledWeeklies) {
            return scheduledWeeklies(List.of(scheduledWeeklies));
        }

        public ServiceEventRuleTimeFrameArgs build() {
            return $;
        }
    }

}
