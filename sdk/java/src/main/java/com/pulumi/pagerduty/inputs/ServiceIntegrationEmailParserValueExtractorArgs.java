// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceIntegrationEmailParserValueExtractorArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceIntegrationEmailParserValueExtractorArgs Empty = new ServiceIntegrationEmailParserValueExtractorArgs();

    @Import(name="endsBefore")
    private @Nullable Output<String> endsBefore;

    public Optional<Output<String>> endsBefore() {
        return Optional.ofNullable(this.endsBefore);
    }

    @Import(name="part", required=true)
    private Output<String> part;

    public Output<String> part() {
        return this.part;
    }

    @Import(name="regex")
    private @Nullable Output<String> regex;

    public Optional<Output<String>> regex() {
        return Optional.ofNullable(this.regex);
    }

    @Import(name="startsAfter")
    private @Nullable Output<String> startsAfter;

    public Optional<Output<String>> startsAfter() {
        return Optional.ofNullable(this.startsAfter);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    @Import(name="valueName", required=true)
    private Output<String> valueName;

    public Output<String> valueName() {
        return this.valueName;
    }

    private ServiceIntegrationEmailParserValueExtractorArgs() {}

    private ServiceIntegrationEmailParserValueExtractorArgs(ServiceIntegrationEmailParserValueExtractorArgs $) {
        this.endsBefore = $.endsBefore;
        this.part = $.part;
        this.regex = $.regex;
        this.startsAfter = $.startsAfter;
        this.type = $.type;
        this.valueName = $.valueName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceIntegrationEmailParserValueExtractorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceIntegrationEmailParserValueExtractorArgs $;

        public Builder() {
            $ = new ServiceIntegrationEmailParserValueExtractorArgs();
        }

        public Builder(ServiceIntegrationEmailParserValueExtractorArgs defaults) {
            $ = new ServiceIntegrationEmailParserValueExtractorArgs(Objects.requireNonNull(defaults));
        }

        public Builder endsBefore(@Nullable Output<String> endsBefore) {
            $.endsBefore = endsBefore;
            return this;
        }

        public Builder endsBefore(String endsBefore) {
            return endsBefore(Output.of(endsBefore));
        }

        public Builder part(Output<String> part) {
            $.part = part;
            return this;
        }

        public Builder part(String part) {
            return part(Output.of(part));
        }

        public Builder regex(@Nullable Output<String> regex) {
            $.regex = regex;
            return this;
        }

        public Builder regex(String regex) {
            return regex(Output.of(regex));
        }

        public Builder startsAfter(@Nullable Output<String> startsAfter) {
            $.startsAfter = startsAfter;
            return this;
        }

        public Builder startsAfter(String startsAfter) {
            return startsAfter(Output.of(startsAfter));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder valueName(Output<String> valueName) {
            $.valueName = valueName;
            return this;
        }

        public Builder valueName(String valueName) {
            return valueName(Output.of(valueName));
        }

        public ServiceIntegrationEmailParserValueExtractorArgs build() {
            if ($.part == null) {
                throw new MissingRequiredPropertyException("ServiceIntegrationEmailParserValueExtractorArgs", "part");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("ServiceIntegrationEmailParserValueExtractorArgs", "type");
            }
            if ($.valueName == null) {
                throw new MissingRequiredPropertyException("ServiceIntegrationEmailParserValueExtractorArgs", "valueName");
            }
            return $;
        }
    }

}
