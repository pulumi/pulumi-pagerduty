// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.pagerduty.inputs.ServiceAlertGroupingParametersArgs;
import com.pulumi.pagerduty.inputs.ServiceAutoPauseNotificationsParametersArgs;
import com.pulumi.pagerduty.inputs.ServiceIncidentUrgencyRuleArgs;
import com.pulumi.pagerduty.inputs.ServiceScheduledActionArgs;
import com.pulumi.pagerduty.inputs.ServiceSupportHoursArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceState extends com.pulumi.resources.ResourceArgs {

    public static final ServiceState Empty = new ServiceState();

    @Import(name="acknowledgementTimeout")
    private @Nullable Output<String> acknowledgementTimeout;

    public Optional<Output<String>> acknowledgementTimeout() {
        return Optional.ofNullable(this.acknowledgementTimeout);
    }

    @Import(name="alertCreation")
    private @Nullable Output<String> alertCreation;

    public Optional<Output<String>> alertCreation() {
        return Optional.ofNullable(this.alertCreation);
    }

    /**
     * @deprecated
     * Use `alert_grouping_parameters.type`
     * 
     */
    @Deprecated /* Use `alert_grouping_parameters.type` */
    @Import(name="alertGrouping")
    private @Nullable Output<String> alertGrouping;

    /**
     * @deprecated
     * Use `alert_grouping_parameters.type`
     * 
     */
    @Deprecated /* Use `alert_grouping_parameters.type` */
    public Optional<Output<String>> alertGrouping() {
        return Optional.ofNullable(this.alertGrouping);
    }

    @Import(name="alertGroupingParameters")
    private @Nullable Output<ServiceAlertGroupingParametersArgs> alertGroupingParameters;

    public Optional<Output<ServiceAlertGroupingParametersArgs>> alertGroupingParameters() {
        return Optional.ofNullable(this.alertGroupingParameters);
    }

    /**
     * @deprecated
     * Use `alert_grouping_parameters.config.timeout`
     * 
     */
    @Deprecated /* Use `alert_grouping_parameters.config.timeout` */
    @Import(name="alertGroupingTimeout")
    private @Nullable Output<String> alertGroupingTimeout;

    /**
     * @deprecated
     * Use `alert_grouping_parameters.config.timeout`
     * 
     */
    @Deprecated /* Use `alert_grouping_parameters.config.timeout` */
    public Optional<Output<String>> alertGroupingTimeout() {
        return Optional.ofNullable(this.alertGroupingTimeout);
    }

    @Import(name="autoPauseNotificationsParameters")
    private @Nullable Output<ServiceAutoPauseNotificationsParametersArgs> autoPauseNotificationsParameters;

    public Optional<Output<ServiceAutoPauseNotificationsParametersArgs>> autoPauseNotificationsParameters() {
        return Optional.ofNullable(this.autoPauseNotificationsParameters);
    }

    @Import(name="autoResolveTimeout")
    private @Nullable Output<String> autoResolveTimeout;

    public Optional<Output<String>> autoResolveTimeout() {
        return Optional.ofNullable(this.autoResolveTimeout);
    }

    /**
     * Creation timestamp of the service.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return Creation timestamp of the service.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="escalationPolicy")
    private @Nullable Output<String> escalationPolicy;

    public Optional<Output<String>> escalationPolicy() {
        return Optional.ofNullable(this.escalationPolicy);
    }

    /**
     * URL at which the entity is uniquely displayed in the Web app.
     * 
     */
    @Import(name="htmlUrl")
    private @Nullable Output<String> htmlUrl;

    /**
     * @return URL at which the entity is uniquely displayed in the Web app.
     * 
     */
    public Optional<Output<String>> htmlUrl() {
        return Optional.ofNullable(this.htmlUrl);
    }

    @Import(name="incidentUrgencyRule")
    private @Nullable Output<ServiceIncidentUrgencyRuleArgs> incidentUrgencyRule;

    public Optional<Output<ServiceIncidentUrgencyRuleArgs>> incidentUrgencyRule() {
        return Optional.ofNullable(this.incidentUrgencyRule);
    }

    /**
     * Last incident timestamp of the service.
     * 
     */
    @Import(name="lastIncidentTimestamp")
    private @Nullable Output<String> lastIncidentTimestamp;

    /**
     * @return Last incident timestamp of the service.
     * 
     */
    public Optional<Output<String>> lastIncidentTimestamp() {
        return Optional.ofNullable(this.lastIncidentTimestamp);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="responsePlay")
    private @Nullable Output<String> responsePlay;

    public Optional<Output<String>> responsePlay() {
        return Optional.ofNullable(this.responsePlay);
    }

    @Import(name="scheduledActions")
    private @Nullable Output<List<ServiceScheduledActionArgs>> scheduledActions;

    public Optional<Output<List<ServiceScheduledActionArgs>>> scheduledActions() {
        return Optional.ofNullable(this.scheduledActions);
    }

    /**
     * The status of the service.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the service.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="supportHours")
    private @Nullable Output<ServiceSupportHoursArgs> supportHours;

    public Optional<Output<ServiceSupportHoursArgs>> supportHours() {
        return Optional.ofNullable(this.supportHours);
    }

    /**
     * The type of object. The value returned will be `service`. Can be used for passing to a service dependency.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of object. The value returned will be `service`. Can be used for passing to a service dependency.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private ServiceState() {}

    private ServiceState(ServiceState $) {
        this.acknowledgementTimeout = $.acknowledgementTimeout;
        this.alertCreation = $.alertCreation;
        this.alertGrouping = $.alertGrouping;
        this.alertGroupingParameters = $.alertGroupingParameters;
        this.alertGroupingTimeout = $.alertGroupingTimeout;
        this.autoPauseNotificationsParameters = $.autoPauseNotificationsParameters;
        this.autoResolveTimeout = $.autoResolveTimeout;
        this.createdAt = $.createdAt;
        this.description = $.description;
        this.escalationPolicy = $.escalationPolicy;
        this.htmlUrl = $.htmlUrl;
        this.incidentUrgencyRule = $.incidentUrgencyRule;
        this.lastIncidentTimestamp = $.lastIncidentTimestamp;
        this.name = $.name;
        this.responsePlay = $.responsePlay;
        this.scheduledActions = $.scheduledActions;
        this.status = $.status;
        this.supportHours = $.supportHours;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceState $;

        public Builder() {
            $ = new ServiceState();
        }

        public Builder(ServiceState defaults) {
            $ = new ServiceState(Objects.requireNonNull(defaults));
        }

        public Builder acknowledgementTimeout(@Nullable Output<String> acknowledgementTimeout) {
            $.acknowledgementTimeout = acknowledgementTimeout;
            return this;
        }

        public Builder acknowledgementTimeout(String acknowledgementTimeout) {
            return acknowledgementTimeout(Output.of(acknowledgementTimeout));
        }

        public Builder alertCreation(@Nullable Output<String> alertCreation) {
            $.alertCreation = alertCreation;
            return this;
        }

        public Builder alertCreation(String alertCreation) {
            return alertCreation(Output.of(alertCreation));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alert_grouping_parameters.type`
         * 
         */
        @Deprecated /* Use `alert_grouping_parameters.type` */
        public Builder alertGrouping(@Nullable Output<String> alertGrouping) {
            $.alertGrouping = alertGrouping;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alert_grouping_parameters.type`
         * 
         */
        @Deprecated /* Use `alert_grouping_parameters.type` */
        public Builder alertGrouping(String alertGrouping) {
            return alertGrouping(Output.of(alertGrouping));
        }

        public Builder alertGroupingParameters(@Nullable Output<ServiceAlertGroupingParametersArgs> alertGroupingParameters) {
            $.alertGroupingParameters = alertGroupingParameters;
            return this;
        }

        public Builder alertGroupingParameters(ServiceAlertGroupingParametersArgs alertGroupingParameters) {
            return alertGroupingParameters(Output.of(alertGroupingParameters));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alert_grouping_parameters.config.timeout`
         * 
         */
        @Deprecated /* Use `alert_grouping_parameters.config.timeout` */
        public Builder alertGroupingTimeout(@Nullable Output<String> alertGroupingTimeout) {
            $.alertGroupingTimeout = alertGroupingTimeout;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use `alert_grouping_parameters.config.timeout`
         * 
         */
        @Deprecated /* Use `alert_grouping_parameters.config.timeout` */
        public Builder alertGroupingTimeout(String alertGroupingTimeout) {
            return alertGroupingTimeout(Output.of(alertGroupingTimeout));
        }

        public Builder autoPauseNotificationsParameters(@Nullable Output<ServiceAutoPauseNotificationsParametersArgs> autoPauseNotificationsParameters) {
            $.autoPauseNotificationsParameters = autoPauseNotificationsParameters;
            return this;
        }

        public Builder autoPauseNotificationsParameters(ServiceAutoPauseNotificationsParametersArgs autoPauseNotificationsParameters) {
            return autoPauseNotificationsParameters(Output.of(autoPauseNotificationsParameters));
        }

        public Builder autoResolveTimeout(@Nullable Output<String> autoResolveTimeout) {
            $.autoResolveTimeout = autoResolveTimeout;
            return this;
        }

        public Builder autoResolveTimeout(String autoResolveTimeout) {
            return autoResolveTimeout(Output.of(autoResolveTimeout));
        }

        /**
         * @param createdAt Creation timestamp of the service.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Creation timestamp of the service.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder escalationPolicy(@Nullable Output<String> escalationPolicy) {
            $.escalationPolicy = escalationPolicy;
            return this;
        }

        public Builder escalationPolicy(String escalationPolicy) {
            return escalationPolicy(Output.of(escalationPolicy));
        }

        /**
         * @param htmlUrl URL at which the entity is uniquely displayed in the Web app.
         * 
         * @return builder
         * 
         */
        public Builder htmlUrl(@Nullable Output<String> htmlUrl) {
            $.htmlUrl = htmlUrl;
            return this;
        }

        /**
         * @param htmlUrl URL at which the entity is uniquely displayed in the Web app.
         * 
         * @return builder
         * 
         */
        public Builder htmlUrl(String htmlUrl) {
            return htmlUrl(Output.of(htmlUrl));
        }

        public Builder incidentUrgencyRule(@Nullable Output<ServiceIncidentUrgencyRuleArgs> incidentUrgencyRule) {
            $.incidentUrgencyRule = incidentUrgencyRule;
            return this;
        }

        public Builder incidentUrgencyRule(ServiceIncidentUrgencyRuleArgs incidentUrgencyRule) {
            return incidentUrgencyRule(Output.of(incidentUrgencyRule));
        }

        /**
         * @param lastIncidentTimestamp Last incident timestamp of the service.
         * 
         * @return builder
         * 
         */
        public Builder lastIncidentTimestamp(@Nullable Output<String> lastIncidentTimestamp) {
            $.lastIncidentTimestamp = lastIncidentTimestamp;
            return this;
        }

        /**
         * @param lastIncidentTimestamp Last incident timestamp of the service.
         * 
         * @return builder
         * 
         */
        public Builder lastIncidentTimestamp(String lastIncidentTimestamp) {
            return lastIncidentTimestamp(Output.of(lastIncidentTimestamp));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder responsePlay(@Nullable Output<String> responsePlay) {
            $.responsePlay = responsePlay;
            return this;
        }

        public Builder responsePlay(String responsePlay) {
            return responsePlay(Output.of(responsePlay));
        }

        public Builder scheduledActions(@Nullable Output<List<ServiceScheduledActionArgs>> scheduledActions) {
            $.scheduledActions = scheduledActions;
            return this;
        }

        public Builder scheduledActions(List<ServiceScheduledActionArgs> scheduledActions) {
            return scheduledActions(Output.of(scheduledActions));
        }

        public Builder scheduledActions(ServiceScheduledActionArgs... scheduledActions) {
            return scheduledActions(List.of(scheduledActions));
        }

        /**
         * @param status The status of the service.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the service.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder supportHours(@Nullable Output<ServiceSupportHoursArgs> supportHours) {
            $.supportHours = supportHours;
            return this;
        }

        public Builder supportHours(ServiceSupportHoursArgs supportHours) {
            return supportHours(Output.of(supportHours));
        }

        /**
         * @param type The type of object. The value returned will be `service`. Can be used for passing to a service dependency.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of object. The value returned will be `service`. Can be used for passing to a service dependency.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ServiceState build() {
            $.description = Codegen.stringProp("description").output().arg($.description).def("Managed by Pulumi").getNullable();
            return $;
        }
    }

}
