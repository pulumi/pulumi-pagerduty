// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.pagerduty.inputs.SlackConnectionConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SlackConnectionState extends com.pulumi.resources.ResourceArgs {

    public static final SlackConnectionState Empty = new SlackConnectionState();

    @Import(name="channelId")
    private @Nullable Output<String> channelId;

    public Optional<Output<String>> channelId() {
        return Optional.ofNullable(this.channelId);
    }

    /**
     * Name of the Slack channel in Slack connection.
     * 
     */
    @Import(name="channelName")
    private @Nullable Output<String> channelName;

    /**
     * @return Name of the Slack channel in Slack connection.
     * 
     */
    public Optional<Output<String>> channelName() {
        return Optional.ofNullable(this.channelName);
    }

    @Import(name="configs")
    private @Nullable Output<List<SlackConnectionConfigArgs>> configs;

    public Optional<Output<List<SlackConnectionConfigArgs>>> configs() {
        return Optional.ofNullable(this.configs);
    }

    @Import(name="notificationType")
    private @Nullable Output<String> notificationType;

    public Optional<Output<String>> notificationType() {
        return Optional.ofNullable(this.notificationType);
    }

    @Import(name="sourceId")
    private @Nullable Output<String> sourceId;

    public Optional<Output<String>> sourceId() {
        return Optional.ofNullable(this.sourceId);
    }

    /**
     * Name of the source (team or service) in Slack connection.
     * 
     */
    @Import(name="sourceName")
    private @Nullable Output<String> sourceName;

    /**
     * @return Name of the source (team or service) in Slack connection.
     * 
     */
    public Optional<Output<String>> sourceName() {
        return Optional.ofNullable(this.sourceName);
    }

    @Import(name="sourceType")
    private @Nullable Output<String> sourceType;

    public Optional<Output<String>> sourceType() {
        return Optional.ofNullable(this.sourceType);
    }

    @Import(name="workspaceId")
    private @Nullable Output<String> workspaceId;

    public Optional<Output<String>> workspaceId() {
        return Optional.ofNullable(this.workspaceId);
    }

    private SlackConnectionState() {}

    private SlackConnectionState(SlackConnectionState $) {
        this.channelId = $.channelId;
        this.channelName = $.channelName;
        this.configs = $.configs;
        this.notificationType = $.notificationType;
        this.sourceId = $.sourceId;
        this.sourceName = $.sourceName;
        this.sourceType = $.sourceType;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SlackConnectionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SlackConnectionState $;

        public Builder() {
            $ = new SlackConnectionState();
        }

        public Builder(SlackConnectionState defaults) {
            $ = new SlackConnectionState(Objects.requireNonNull(defaults));
        }

        public Builder channelId(@Nullable Output<String> channelId) {
            $.channelId = channelId;
            return this;
        }

        public Builder channelId(String channelId) {
            return channelId(Output.of(channelId));
        }

        /**
         * @param channelName Name of the Slack channel in Slack connection.
         * 
         * @return builder
         * 
         */
        public Builder channelName(@Nullable Output<String> channelName) {
            $.channelName = channelName;
            return this;
        }

        /**
         * @param channelName Name of the Slack channel in Slack connection.
         * 
         * @return builder
         * 
         */
        public Builder channelName(String channelName) {
            return channelName(Output.of(channelName));
        }

        public Builder configs(@Nullable Output<List<SlackConnectionConfigArgs>> configs) {
            $.configs = configs;
            return this;
        }

        public Builder configs(List<SlackConnectionConfigArgs> configs) {
            return configs(Output.of(configs));
        }

        public Builder configs(SlackConnectionConfigArgs... configs) {
            return configs(List.of(configs));
        }

        public Builder notificationType(@Nullable Output<String> notificationType) {
            $.notificationType = notificationType;
            return this;
        }

        public Builder notificationType(String notificationType) {
            return notificationType(Output.of(notificationType));
        }

        public Builder sourceId(@Nullable Output<String> sourceId) {
            $.sourceId = sourceId;
            return this;
        }

        public Builder sourceId(String sourceId) {
            return sourceId(Output.of(sourceId));
        }

        /**
         * @param sourceName Name of the source (team or service) in Slack connection.
         * 
         * @return builder
         * 
         */
        public Builder sourceName(@Nullable Output<String> sourceName) {
            $.sourceName = sourceName;
            return this;
        }

        /**
         * @param sourceName Name of the source (team or service) in Slack connection.
         * 
         * @return builder
         * 
         */
        public Builder sourceName(String sourceName) {
            return sourceName(Output.of(sourceName));
        }

        public Builder sourceType(@Nullable Output<String> sourceType) {
            $.sourceType = sourceType;
            return this;
        }

        public Builder sourceType(String sourceType) {
            return sourceType(Output.of(sourceType));
        }

        public Builder workspaceId(@Nullable Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public SlackConnectionState build() {
            return $;
        }
    }

}
