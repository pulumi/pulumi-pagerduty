// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class UserHandoffNotificationRuleContactMethodArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserHandoffNotificationRuleContactMethodArgs Empty = new UserHandoffNotificationRuleContactMethodArgs();

    /**
     * The ID of the contact method.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The ID of the contact method.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * The type of the contact method. May be (`email_contact_method`, `email_contact_method_reference`, `phone_contact_method`, `phone_contact_method_reference`, `push_notification_contact_method`, `push_notification_contact_method_reference`, `sms_contact_method`, `sms_contact_method_reference`).
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of the contact method. May be (`email_contact_method`, `email_contact_method_reference`, `phone_contact_method`, `phone_contact_method_reference`, `push_notification_contact_method`, `push_notification_contact_method_reference`, `sms_contact_method`, `sms_contact_method_reference`).
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private UserHandoffNotificationRuleContactMethodArgs() {}

    private UserHandoffNotificationRuleContactMethodArgs(UserHandoffNotificationRuleContactMethodArgs $) {
        this.id = $.id;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserHandoffNotificationRuleContactMethodArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserHandoffNotificationRuleContactMethodArgs $;

        public Builder() {
            $ = new UserHandoffNotificationRuleContactMethodArgs();
        }

        public Builder(UserHandoffNotificationRuleContactMethodArgs defaults) {
            $ = new UserHandoffNotificationRuleContactMethodArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The ID of the contact method.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of the contact method.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param type The type of the contact method. May be (`email_contact_method`, `email_contact_method_reference`, `phone_contact_method`, `phone_contact_method_reference`, `push_notification_contact_method`, `push_notification_contact_method_reference`, `sms_contact_method`, `sms_contact_method_reference`).
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the contact method. May be (`email_contact_method`, `email_contact_method_reference`, `phone_contact_method`, `phone_contact_method_reference`, `push_notification_contact_method`, `push_notification_contact_method_reference`, `sms_contact_method`, `sms_contact_method_reference`).
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public UserHandoffNotificationRuleContactMethodArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("UserHandoffNotificationRuleContactMethodArgs", "id");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("UserHandoffNotificationRuleContactMethodArgs", "type");
            }
            return $;
        }
    }

}
