// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserNotificationRuleState extends com.pulumi.resources.ResourceArgs {

    public static final UserNotificationRuleState Empty = new UserNotificationRuleState();

    @Import(name="contactMethod")
    private @Nullable Output<Map<String,String>> contactMethod;

    public Optional<Output<Map<String,String>>> contactMethod() {
        return Optional.ofNullable(this.contactMethod);
    }

    @Import(name="startDelayInMinutes")
    private @Nullable Output<Integer> startDelayInMinutes;

    public Optional<Output<Integer>> startDelayInMinutes() {
        return Optional.ofNullable(this.startDelayInMinutes);
    }

    @Import(name="urgency")
    private @Nullable Output<String> urgency;

    public Optional<Output<String>> urgency() {
        return Optional.ofNullable(this.urgency);
    }

    @Import(name="userId")
    private @Nullable Output<String> userId;

    public Optional<Output<String>> userId() {
        return Optional.ofNullable(this.userId);
    }

    private UserNotificationRuleState() {}

    private UserNotificationRuleState(UserNotificationRuleState $) {
        this.contactMethod = $.contactMethod;
        this.startDelayInMinutes = $.startDelayInMinutes;
        this.urgency = $.urgency;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserNotificationRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserNotificationRuleState $;

        public Builder() {
            $ = new UserNotificationRuleState();
        }

        public Builder(UserNotificationRuleState defaults) {
            $ = new UserNotificationRuleState(Objects.requireNonNull(defaults));
        }

        public Builder contactMethod(@Nullable Output<Map<String,String>> contactMethod) {
            $.contactMethod = contactMethod;
            return this;
        }

        public Builder contactMethod(Map<String,String> contactMethod) {
            return contactMethod(Output.of(contactMethod));
        }

        public Builder startDelayInMinutes(@Nullable Output<Integer> startDelayInMinutes) {
            $.startDelayInMinutes = startDelayInMinutes;
            return this;
        }

        public Builder startDelayInMinutes(Integer startDelayInMinutes) {
            return startDelayInMinutes(Output.of(startDelayInMinutes));
        }

        public Builder urgency(@Nullable Output<String> urgency) {
            $.urgency = urgency;
            return this;
        }

        public Builder urgency(String urgency) {
            return urgency(Output.of(urgency));
        }

        public Builder userId(@Nullable Output<String> userId) {
            $.userId = userId;
            return this;
        }

        public Builder userId(String userId) {
            return userId(Output.of(userId));
        }

        public UserNotificationRuleState build() {
            return $;
        }
    }

}
