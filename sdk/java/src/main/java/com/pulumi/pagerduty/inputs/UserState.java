// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserState extends com.pulumi.resources.ResourceArgs {

    public static final UserState Empty = new UserState();

    /**
     * The URL of the user&#39;s avatar.
     * 
     */
    @Import(name="avatarUrl")
    private @Nullable Output<String> avatarUrl;

    /**
     * @return The URL of the user&#39;s avatar.
     * 
     */
    public Optional<Output<String>> avatarUrl() {
        return Optional.ofNullable(this.avatarUrl);
    }

    @Import(name="color")
    private @Nullable Output<String> color;

    public Optional<Output<String>> color() {
        return Optional.ofNullable(this.color);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="email")
    private @Nullable Output<String> email;

    public Optional<Output<String>> email() {
        return Optional.ofNullable(this.email);
    }

    /**
     * URL at which the entity is uniquely displayed in the Web app
     * 
     */
    @Import(name="htmlUrl")
    private @Nullable Output<String> htmlUrl;

    /**
     * @return URL at which the entity is uniquely displayed in the Web app
     * 
     */
    public Optional<Output<String>> htmlUrl() {
        return Optional.ofNullable(this.htmlUrl);
    }

    /**
     * If true, the user has an outstanding invitation.
     * 
     */
    @Import(name="invitationSent")
    private @Nullable Output<Boolean> invitationSent;

    /**
     * @return If true, the user has an outstanding invitation.
     * 
     */
    public Optional<Output<Boolean>> invitationSent() {
        return Optional.ofNullable(this.invitationSent);
    }

    @Import(name="jobTitle")
    private @Nullable Output<String> jobTitle;

    public Optional<Output<String>> jobTitle() {
        return Optional.ofNullable(this.jobTitle);
    }

    @Import(name="license")
    private @Nullable Output<String> license;

    public Optional<Output<String>> license() {
        return Optional.ofNullable(this.license);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="role")
    private @Nullable Output<String> role;

    public Optional<Output<String>> role() {
        return Optional.ofNullable(this.role);
    }

    /**
     * @deprecated
     * Use the &#39;pagerduty_team_membership&#39; resource instead.
     * 
     */
    @Deprecated /* Use the 'pagerduty_team_membership' resource instead. */
    @Import(name="teams")
    private @Nullable Output<List<String>> teams;

    /**
     * @deprecated
     * Use the &#39;pagerduty_team_membership&#39; resource instead.
     * 
     */
    @Deprecated /* Use the 'pagerduty_team_membership' resource instead. */
    public Optional<Output<List<String>>> teams() {
        return Optional.ofNullable(this.teams);
    }

    /**
     * The timezone of the user.
     * 
     */
    @Import(name="timeZone")
    private @Nullable Output<String> timeZone;

    /**
     * @return The timezone of the user.
     * 
     */
    public Optional<Output<String>> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }

    private UserState() {}

    private UserState(UserState $) {
        this.avatarUrl = $.avatarUrl;
        this.color = $.color;
        this.description = $.description;
        this.email = $.email;
        this.htmlUrl = $.htmlUrl;
        this.invitationSent = $.invitationSent;
        this.jobTitle = $.jobTitle;
        this.license = $.license;
        this.name = $.name;
        this.role = $.role;
        this.teams = $.teams;
        this.timeZone = $.timeZone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserState $;

        public Builder() {
            $ = new UserState();
        }

        public Builder(UserState defaults) {
            $ = new UserState(Objects.requireNonNull(defaults));
        }

        /**
         * @param avatarUrl The URL of the user&#39;s avatar.
         * 
         * @return builder
         * 
         */
        public Builder avatarUrl(@Nullable Output<String> avatarUrl) {
            $.avatarUrl = avatarUrl;
            return this;
        }

        /**
         * @param avatarUrl The URL of the user&#39;s avatar.
         * 
         * @return builder
         * 
         */
        public Builder avatarUrl(String avatarUrl) {
            return avatarUrl(Output.of(avatarUrl));
        }

        public Builder color(@Nullable Output<String> color) {
            $.color = color;
            return this;
        }

        public Builder color(String color) {
            return color(Output.of(color));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder email(@Nullable Output<String> email) {
            $.email = email;
            return this;
        }

        public Builder email(String email) {
            return email(Output.of(email));
        }

        /**
         * @param htmlUrl URL at which the entity is uniquely displayed in the Web app
         * 
         * @return builder
         * 
         */
        public Builder htmlUrl(@Nullable Output<String> htmlUrl) {
            $.htmlUrl = htmlUrl;
            return this;
        }

        /**
         * @param htmlUrl URL at which the entity is uniquely displayed in the Web app
         * 
         * @return builder
         * 
         */
        public Builder htmlUrl(String htmlUrl) {
            return htmlUrl(Output.of(htmlUrl));
        }

        /**
         * @param invitationSent If true, the user has an outstanding invitation.
         * 
         * @return builder
         * 
         */
        public Builder invitationSent(@Nullable Output<Boolean> invitationSent) {
            $.invitationSent = invitationSent;
            return this;
        }

        /**
         * @param invitationSent If true, the user has an outstanding invitation.
         * 
         * @return builder
         * 
         */
        public Builder invitationSent(Boolean invitationSent) {
            return invitationSent(Output.of(invitationSent));
        }

        public Builder jobTitle(@Nullable Output<String> jobTitle) {
            $.jobTitle = jobTitle;
            return this;
        }

        public Builder jobTitle(String jobTitle) {
            return jobTitle(Output.of(jobTitle));
        }

        public Builder license(@Nullable Output<String> license) {
            $.license = license;
            return this;
        }

        public Builder license(String license) {
            return license(Output.of(license));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder role(@Nullable Output<String> role) {
            $.role = role;
            return this;
        }

        public Builder role(String role) {
            return role(Output.of(role));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use the &#39;pagerduty_team_membership&#39; resource instead.
         * 
         */
        @Deprecated /* Use the 'pagerduty_team_membership' resource instead. */
        public Builder teams(@Nullable Output<List<String>> teams) {
            $.teams = teams;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use the &#39;pagerduty_team_membership&#39; resource instead.
         * 
         */
        @Deprecated /* Use the 'pagerduty_team_membership' resource instead. */
        public Builder teams(List<String> teams) {
            return teams(Output.of(teams));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use the &#39;pagerduty_team_membership&#39; resource instead.
         * 
         */
        @Deprecated /* Use the 'pagerduty_team_membership' resource instead. */
        public Builder teams(String... teams) {
            return teams(List.of(teams));
        }

        /**
         * @param timeZone The timezone of the user.
         * 
         * @return builder
         * 
         */
        public Builder timeZone(@Nullable Output<String> timeZone) {
            $.timeZone = timeZone;
            return this;
        }

        /**
         * @param timeZone The timezone of the user.
         * 
         * @return builder
         * 
         */
        public Builder timeZone(String timeZone) {
            return timeZone(Output.of(timeZone));
        }

        public UserState build() {
            $.description = Codegen.stringProp("description").output().arg($.description).def("Managed by Pulumi").getNullable();
            return $;
        }
    }

}
