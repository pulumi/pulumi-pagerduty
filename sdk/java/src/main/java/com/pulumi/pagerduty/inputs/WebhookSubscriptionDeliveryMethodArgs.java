// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.pagerduty.inputs.WebhookSubscriptionDeliveryMethodCustomHeaderArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebhookSubscriptionDeliveryMethodArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebhookSubscriptionDeliveryMethodArgs Empty = new WebhookSubscriptionDeliveryMethodArgs();

    /**
     * The customHeader of a webhook subscription define any optional headers that will be passed along with the payload to the destination URL.
     * 
     */
    @Import(name="customHeaders")
    private @Nullable Output<List<WebhookSubscriptionDeliveryMethodCustomHeaderArgs>> customHeaders;

    /**
     * @return The customHeader of a webhook subscription define any optional headers that will be passed along with the payload to the destination URL.
     * 
     */
    public Optional<Output<List<WebhookSubscriptionDeliveryMethodCustomHeaderArgs>>> customHeaders() {
        return Optional.ofNullable(this.customHeaders);
    }

    /**
     * Whether this webhook subscription is temporarily disabled. Becomes true if the delivery method URL is repeatedly rejected by the server.
     * 
     */
    @Import(name="temporarilyDisabled")
    private @Nullable Output<Boolean> temporarilyDisabled;

    /**
     * @return Whether this webhook subscription is temporarily disabled. Becomes true if the delivery method URL is repeatedly rejected by the server.
     * 
     */
    public Optional<Output<Boolean>> temporarilyDisabled() {
        return Optional.ofNullable(this.temporarilyDisabled);
    }

    /**
     * Indicates the type of the delivery method. Allowed and default value: `httpDeliveryMethod`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Indicates the type of the delivery method. Allowed and default value: `httpDeliveryMethod`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * The destination URL for webhook delivery.
     * 
     */
    @Import(name="url")
    private @Nullable Output<String> url;

    /**
     * @return The destination URL for webhook delivery.
     * 
     */
    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    private WebhookSubscriptionDeliveryMethodArgs() {}

    private WebhookSubscriptionDeliveryMethodArgs(WebhookSubscriptionDeliveryMethodArgs $) {
        this.customHeaders = $.customHeaders;
        this.temporarilyDisabled = $.temporarilyDisabled;
        this.type = $.type;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebhookSubscriptionDeliveryMethodArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebhookSubscriptionDeliveryMethodArgs $;

        public Builder() {
            $ = new WebhookSubscriptionDeliveryMethodArgs();
        }

        public Builder(WebhookSubscriptionDeliveryMethodArgs defaults) {
            $ = new WebhookSubscriptionDeliveryMethodArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customHeaders The customHeader of a webhook subscription define any optional headers that will be passed along with the payload to the destination URL.
         * 
         * @return builder
         * 
         */
        public Builder customHeaders(@Nullable Output<List<WebhookSubscriptionDeliveryMethodCustomHeaderArgs>> customHeaders) {
            $.customHeaders = customHeaders;
            return this;
        }

        /**
         * @param customHeaders The customHeader of a webhook subscription define any optional headers that will be passed along with the payload to the destination URL.
         * 
         * @return builder
         * 
         */
        public Builder customHeaders(List<WebhookSubscriptionDeliveryMethodCustomHeaderArgs> customHeaders) {
            return customHeaders(Output.of(customHeaders));
        }

        /**
         * @param customHeaders The customHeader of a webhook subscription define any optional headers that will be passed along with the payload to the destination URL.
         * 
         * @return builder
         * 
         */
        public Builder customHeaders(WebhookSubscriptionDeliveryMethodCustomHeaderArgs... customHeaders) {
            return customHeaders(List.of(customHeaders));
        }

        /**
         * @param temporarilyDisabled Whether this webhook subscription is temporarily disabled. Becomes true if the delivery method URL is repeatedly rejected by the server.
         * 
         * @return builder
         * 
         */
        public Builder temporarilyDisabled(@Nullable Output<Boolean> temporarilyDisabled) {
            $.temporarilyDisabled = temporarilyDisabled;
            return this;
        }

        /**
         * @param temporarilyDisabled Whether this webhook subscription is temporarily disabled. Becomes true if the delivery method URL is repeatedly rejected by the server.
         * 
         * @return builder
         * 
         */
        public Builder temporarilyDisabled(Boolean temporarilyDisabled) {
            return temporarilyDisabled(Output.of(temporarilyDisabled));
        }

        /**
         * @param type Indicates the type of the delivery method. Allowed and default value: `httpDeliveryMethod`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Indicates the type of the delivery method. Allowed and default value: `httpDeliveryMethod`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param url The destination URL for webhook delivery.
         * 
         * @return builder
         * 
         */
        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url The destination URL for webhook delivery.
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        public WebhookSubscriptionDeliveryMethodArgs build() {
            return $;
        }
    }

}
