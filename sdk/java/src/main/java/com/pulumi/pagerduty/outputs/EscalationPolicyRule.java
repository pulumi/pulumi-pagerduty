// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.pagerduty.outputs.EscalationPolicyRuleEscalationRuleAssignmentStrategy;
import com.pulumi.pagerduty.outputs.EscalationPolicyRuleTarget;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EscalationPolicyRule {
    /**
     * @return The number of minutes before an unacknowledged incident escalates away from this rule.
     * 
     */
    private Integer escalationDelayInMinutes;
    /**
     * @return The strategy used to assign the escalation rule to an incident. Documented below.
     * 
     */
    private @Nullable EscalationPolicyRuleEscalationRuleAssignmentStrategy escalationRuleAssignmentStrategy;
    /**
     * @return A target ID
     * 
     */
    private @Nullable String id;
    private List<EscalationPolicyRuleTarget> targets;

    private EscalationPolicyRule() {}
    /**
     * @return The number of minutes before an unacknowledged incident escalates away from this rule.
     * 
     */
    public Integer escalationDelayInMinutes() {
        return this.escalationDelayInMinutes;
    }
    /**
     * @return The strategy used to assign the escalation rule to an incident. Documented below.
     * 
     */
    public Optional<EscalationPolicyRuleEscalationRuleAssignmentStrategy> escalationRuleAssignmentStrategy() {
        return Optional.ofNullable(this.escalationRuleAssignmentStrategy);
    }
    /**
     * @return A target ID
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public List<EscalationPolicyRuleTarget> targets() {
        return this.targets;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EscalationPolicyRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer escalationDelayInMinutes;
        private @Nullable EscalationPolicyRuleEscalationRuleAssignmentStrategy escalationRuleAssignmentStrategy;
        private @Nullable String id;
        private List<EscalationPolicyRuleTarget> targets;
        public Builder() {}
        public Builder(EscalationPolicyRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.escalationDelayInMinutes = defaults.escalationDelayInMinutes;
    	      this.escalationRuleAssignmentStrategy = defaults.escalationRuleAssignmentStrategy;
    	      this.id = defaults.id;
    	      this.targets = defaults.targets;
        }

        @CustomType.Setter
        public Builder escalationDelayInMinutes(Integer escalationDelayInMinutes) {
            if (escalationDelayInMinutes == null) {
              throw new MissingRequiredPropertyException("EscalationPolicyRule", "escalationDelayInMinutes");
            }
            this.escalationDelayInMinutes = escalationDelayInMinutes;
            return this;
        }
        @CustomType.Setter
        public Builder escalationRuleAssignmentStrategy(@Nullable EscalationPolicyRuleEscalationRuleAssignmentStrategy escalationRuleAssignmentStrategy) {

            this.escalationRuleAssignmentStrategy = escalationRuleAssignmentStrategy;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder targets(List<EscalationPolicyRuleTarget> targets) {
            if (targets == null) {
              throw new MissingRequiredPropertyException("EscalationPolicyRule", "targets");
            }
            this.targets = targets;
            return this;
        }
        public Builder targets(EscalationPolicyRuleTarget... targets) {
            return targets(List.of(targets));
        }
        public EscalationPolicyRule build() {
            final var _resultValue = new EscalationPolicyRule();
            _resultValue.escalationDelayInMinutes = escalationDelayInMinutes;
            _resultValue.escalationRuleAssignmentStrategy = escalationRuleAssignmentStrategy;
            _resultValue.id = id;
            _resultValue.targets = targets;
            return _resultValue;
        }
    }
}
