// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EventOrchestrationGlobalCacheVariableConfiguration {
    /**
     * @return The type of data that will eventually be set for the Cache Variable via an API request. This field is only used when type is `externalData`
     * 
     */
    private @Nullable String dataType;
    /**
     * @return A [RE2 regular expression][4] that will be matched against the field specified via the `source` argument. This field is only used when `type` is `recentValue`
     * 
     */
    private @Nullable String regex;
    /**
     * @return The path to the event field where the `regex` will be applied to extract a value. You can use any valid [PCL path](https://developer.pagerduty.com/docs/ZG9jOjM1NTE0MDc0-pcl-overview#paths). This field is only used when `type` is `recentValue`
     * 
     */
    private @Nullable String source;
    /**
     * @return The number of seconds indicating how long to count incoming trigger events for. This field is only used when `type` is `triggerEventCount` or `externalData`
     * 
     */
    private @Nullable Integer ttlSeconds;
    /**
     * @return The [type of value](https://support.pagerduty.com/docs/event-orchestration-variables) to store into the Cache Variable. Can be one of: `recentValue`, `triggerEventCount` or `externalData`.
     * 
     */
    private String type;

    private EventOrchestrationGlobalCacheVariableConfiguration() {}
    /**
     * @return The type of data that will eventually be set for the Cache Variable via an API request. This field is only used when type is `externalData`
     * 
     */
    public Optional<String> dataType() {
        return Optional.ofNullable(this.dataType);
    }
    /**
     * @return A [RE2 regular expression][4] that will be matched against the field specified via the `source` argument. This field is only used when `type` is `recentValue`
     * 
     */
    public Optional<String> regex() {
        return Optional.ofNullable(this.regex);
    }
    /**
     * @return The path to the event field where the `regex` will be applied to extract a value. You can use any valid [PCL path](https://developer.pagerduty.com/docs/ZG9jOjM1NTE0MDc0-pcl-overview#paths). This field is only used when `type` is `recentValue`
     * 
     */
    public Optional<String> source() {
        return Optional.ofNullable(this.source);
    }
    /**
     * @return The number of seconds indicating how long to count incoming trigger events for. This field is only used when `type` is `triggerEventCount` or `externalData`
     * 
     */
    public Optional<Integer> ttlSeconds() {
        return Optional.ofNullable(this.ttlSeconds);
    }
    /**
     * @return The [type of value](https://support.pagerduty.com/docs/event-orchestration-variables) to store into the Cache Variable. Can be one of: `recentValue`, `triggerEventCount` or `externalData`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventOrchestrationGlobalCacheVariableConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String dataType;
        private @Nullable String regex;
        private @Nullable String source;
        private @Nullable Integer ttlSeconds;
        private String type;
        public Builder() {}
        public Builder(EventOrchestrationGlobalCacheVariableConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataType = defaults.dataType;
    	      this.regex = defaults.regex;
    	      this.source = defaults.source;
    	      this.ttlSeconds = defaults.ttlSeconds;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder dataType(@Nullable String dataType) {

            this.dataType = dataType;
            return this;
        }
        @CustomType.Setter
        public Builder regex(@Nullable String regex) {

            this.regex = regex;
            return this;
        }
        @CustomType.Setter
        public Builder source(@Nullable String source) {

            this.source = source;
            return this;
        }
        @CustomType.Setter
        public Builder ttlSeconds(@Nullable Integer ttlSeconds) {

            this.ttlSeconds = ttlSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("EventOrchestrationGlobalCacheVariableConfiguration", "type");
            }
            this.type = type;
            return this;
        }
        public EventOrchestrationGlobalCacheVariableConfiguration build() {
            final var _resultValue = new EventOrchestrationGlobalCacheVariableConfiguration();
            _resultValue.dataType = dataType;
            _resultValue.regex = regex;
            _resultValue.source = source;
            _resultValue.ttlSeconds = ttlSeconds;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
