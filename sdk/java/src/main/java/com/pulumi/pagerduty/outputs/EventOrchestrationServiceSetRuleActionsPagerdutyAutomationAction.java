// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EventOrchestrationServiceSetRuleActionsPagerdutyAutomationAction {
    /**
     * @return Id of the Process Automation action to be triggered.
     * 
     */
    private String actionId;
    /**
     * @return The Automation Action will be triggered whenever an alert reaches the specified state. Allowed values are: `[&#34;alert_triggered&#34;]`, `[&#34;alert_suspended&#34;]`, `[&#34;alert_suppressed&#34;]`
     * 
     */
    private @Nullable String triggerTypes;

    private EventOrchestrationServiceSetRuleActionsPagerdutyAutomationAction() {}
    /**
     * @return Id of the Process Automation action to be triggered.
     * 
     */
    public String actionId() {
        return this.actionId;
    }
    /**
     * @return The Automation Action will be triggered whenever an alert reaches the specified state. Allowed values are: `[&#34;alert_triggered&#34;]`, `[&#34;alert_suspended&#34;]`, `[&#34;alert_suppressed&#34;]`
     * 
     */
    public Optional<String> triggerTypes() {
        return Optional.ofNullable(this.triggerTypes);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventOrchestrationServiceSetRuleActionsPagerdutyAutomationAction defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String actionId;
        private @Nullable String triggerTypes;
        public Builder() {}
        public Builder(EventOrchestrationServiceSetRuleActionsPagerdutyAutomationAction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionId = defaults.actionId;
    	      this.triggerTypes = defaults.triggerTypes;
        }

        @CustomType.Setter
        public Builder actionId(String actionId) {
            if (actionId == null) {
              throw new MissingRequiredPropertyException("EventOrchestrationServiceSetRuleActionsPagerdutyAutomationAction", "actionId");
            }
            this.actionId = actionId;
            return this;
        }
        @CustomType.Setter
        public Builder triggerTypes(@Nullable String triggerTypes) {

            this.triggerTypes = triggerTypes;
            return this;
        }
        public EventOrchestrationServiceSetRuleActionsPagerdutyAutomationAction build() {
            final var _resultValue = new EventOrchestrationServiceSetRuleActionsPagerdutyAutomationAction();
            _resultValue.actionId = actionId;
            _resultValue.triggerTypes = triggerTypes;
            return _resultValue;
        }
    }
}
