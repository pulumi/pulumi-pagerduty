// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.pagerduty.outputs.EventOrchestrationUnroutedCatchAllActionsExtraction;
import com.pulumi.pagerduty.outputs.EventOrchestrationUnroutedCatchAllActionsVariable;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EventOrchestrationUnroutedCatchAllActions {
    /**
     * @return sets whether the resulting alert status is trigger or resolve. Allowed values are: `trigger`, `resolve`
     * 
     */
    private @Nullable String eventAction;
    /**
     * @return Replace any CEF field or Custom Details object field using custom variables.
     * 
     */
    private @Nullable List<EventOrchestrationUnroutedCatchAllActionsExtraction> extractions;
    /**
     * @return sets Severity of the resulting alert. Allowed values are: `info`, `error`, `warning`, `critical`
     * 
     */
    private @Nullable String severity;
    private @Nullable Boolean suppress;
    /**
     * @return Populate variables from event payloads and use those variables in other event actions.
     * 
     */
    private @Nullable List<EventOrchestrationUnroutedCatchAllActionsVariable> variables;

    private EventOrchestrationUnroutedCatchAllActions() {}
    /**
     * @return sets whether the resulting alert status is trigger or resolve. Allowed values are: `trigger`, `resolve`
     * 
     */
    public Optional<String> eventAction() {
        return Optional.ofNullable(this.eventAction);
    }
    /**
     * @return Replace any CEF field or Custom Details object field using custom variables.
     * 
     */
    public List<EventOrchestrationUnroutedCatchAllActionsExtraction> extractions() {
        return this.extractions == null ? List.of() : this.extractions;
    }
    /**
     * @return sets Severity of the resulting alert. Allowed values are: `info`, `error`, `warning`, `critical`
     * 
     */
    public Optional<String> severity() {
        return Optional.ofNullable(this.severity);
    }
    public Optional<Boolean> suppress() {
        return Optional.ofNullable(this.suppress);
    }
    /**
     * @return Populate variables from event payloads and use those variables in other event actions.
     * 
     */
    public List<EventOrchestrationUnroutedCatchAllActionsVariable> variables() {
        return this.variables == null ? List.of() : this.variables;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventOrchestrationUnroutedCatchAllActions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String eventAction;
        private @Nullable List<EventOrchestrationUnroutedCatchAllActionsExtraction> extractions;
        private @Nullable String severity;
        private @Nullable Boolean suppress;
        private @Nullable List<EventOrchestrationUnroutedCatchAllActionsVariable> variables;
        public Builder() {}
        public Builder(EventOrchestrationUnroutedCatchAllActions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eventAction = defaults.eventAction;
    	      this.extractions = defaults.extractions;
    	      this.severity = defaults.severity;
    	      this.suppress = defaults.suppress;
    	      this.variables = defaults.variables;
        }

        @CustomType.Setter
        public Builder eventAction(@Nullable String eventAction) {

            this.eventAction = eventAction;
            return this;
        }
        @CustomType.Setter
        public Builder extractions(@Nullable List<EventOrchestrationUnroutedCatchAllActionsExtraction> extractions) {

            this.extractions = extractions;
            return this;
        }
        public Builder extractions(EventOrchestrationUnroutedCatchAllActionsExtraction... extractions) {
            return extractions(List.of(extractions));
        }
        @CustomType.Setter
        public Builder severity(@Nullable String severity) {

            this.severity = severity;
            return this;
        }
        @CustomType.Setter
        public Builder suppress(@Nullable Boolean suppress) {

            this.suppress = suppress;
            return this;
        }
        @CustomType.Setter
        public Builder variables(@Nullable List<EventOrchestrationUnroutedCatchAllActionsVariable> variables) {

            this.variables = variables;
            return this;
        }
        public Builder variables(EventOrchestrationUnroutedCatchAllActionsVariable... variables) {
            return variables(List.of(variables));
        }
        public EventOrchestrationUnroutedCatchAllActions build() {
            final var _resultValue = new EventOrchestrationUnroutedCatchAllActions();
            _resultValue.eventAction = eventAction;
            _resultValue.extractions = extractions;
            _resultValue.severity = severity;
            _resultValue.suppress = suppress;
            _resultValue.variables = variables;
            return _resultValue;
        }
    }
}
