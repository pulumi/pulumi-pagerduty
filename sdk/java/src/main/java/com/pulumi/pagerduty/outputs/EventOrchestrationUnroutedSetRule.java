// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.pagerduty.outputs.EventOrchestrationUnroutedSetRuleActions;
import com.pulumi.pagerduty.outputs.EventOrchestrationUnroutedSetRuleCondition;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EventOrchestrationUnroutedSetRule {
    /**
     * @return Actions that will be taken to change the resulting alert and incident, when an event matches this rule.
     * 
     */
    private final EventOrchestrationUnroutedSetRuleActions actions;
    /**
     * @return Each of these conditions is evaluated to check if an event matches this rule. The rule is considered a match if any of these conditions match. If none are provided, the event will `always` match against the rule.
     * 
     */
    private final @Nullable List<EventOrchestrationUnroutedSetRuleCondition> conditions;
    /**
     * @return Indicates whether the rule is disabled and would therefore not be evaluated.
     * 
     */
    private final @Nullable Boolean disabled;
    /**
     * @return The ID of this set of rules. Rules in other sets can route events into this set using the rule&#39;s `route_to` property.
     * 
     */
    private final @Nullable String id;
    /**
     * @return A description of this rule&#39;s purpose.
     * 
     */
    private final @Nullable String label;

    @CustomType.Constructor
    private EventOrchestrationUnroutedSetRule(
        @CustomType.Parameter("actions") EventOrchestrationUnroutedSetRuleActions actions,
        @CustomType.Parameter("conditions") @Nullable List<EventOrchestrationUnroutedSetRuleCondition> conditions,
        @CustomType.Parameter("disabled") @Nullable Boolean disabled,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("label") @Nullable String label) {
        this.actions = actions;
        this.conditions = conditions;
        this.disabled = disabled;
        this.id = id;
        this.label = label;
    }

    /**
     * @return Actions that will be taken to change the resulting alert and incident, when an event matches this rule.
     * 
     */
    public EventOrchestrationUnroutedSetRuleActions actions() {
        return this.actions;
    }
    /**
     * @return Each of these conditions is evaluated to check if an event matches this rule. The rule is considered a match if any of these conditions match. If none are provided, the event will `always` match against the rule.
     * 
     */
    public List<EventOrchestrationUnroutedSetRuleCondition> conditions() {
        return this.conditions == null ? List.of() : this.conditions;
    }
    /**
     * @return Indicates whether the rule is disabled and would therefore not be evaluated.
     * 
     */
    public Optional<Boolean> disabled() {
        return Optional.ofNullable(this.disabled);
    }
    /**
     * @return The ID of this set of rules. Rules in other sets can route events into this set using the rule&#39;s `route_to` property.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return A description of this rule&#39;s purpose.
     * 
     */
    public Optional<String> label() {
        return Optional.ofNullable(this.label);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventOrchestrationUnroutedSetRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventOrchestrationUnroutedSetRuleActions actions;
        private @Nullable List<EventOrchestrationUnroutedSetRuleCondition> conditions;
        private @Nullable Boolean disabled;
        private @Nullable String id;
        private @Nullable String label;

        public Builder() {
    	      // Empty
        }

        public Builder(EventOrchestrationUnroutedSetRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.conditions = defaults.conditions;
    	      this.disabled = defaults.disabled;
    	      this.id = defaults.id;
    	      this.label = defaults.label;
        }

        public Builder actions(EventOrchestrationUnroutedSetRuleActions actions) {
            this.actions = Objects.requireNonNull(actions);
            return this;
        }
        public Builder conditions(@Nullable List<EventOrchestrationUnroutedSetRuleCondition> conditions) {
            this.conditions = conditions;
            return this;
        }
        public Builder conditions(EventOrchestrationUnroutedSetRuleCondition... conditions) {
            return conditions(List.of(conditions));
        }
        public Builder disabled(@Nullable Boolean disabled) {
            this.disabled = disabled;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder label(@Nullable String label) {
            this.label = label;
            return this;
        }        public EventOrchestrationUnroutedSetRule build() {
            return new EventOrchestrationUnroutedSetRule(actions, conditions, disabled, id, label);
        }
    }
}
