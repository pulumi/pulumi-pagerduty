// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.pagerduty.outputs.GetAlertGroupingSettingConfig;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAlertGroupingSettingResult {
    /**
     * @return The values for the configuration setup for this setting.
     * 
     */
    private @Nullable GetAlertGroupingSettingConfig config;
    /**
     * @return A description of this alert grouping setting.
     * 
     */
    private String description;
    /**
     * @return The ID of the found alert grouping setting.
     * 
     */
    private String id;
    /**
     * @return The short name of the found alert grouping setting.
     * 
     */
    private String name;
    /**
     * @return A list of string containing the IDs of services associated with this setting.
     * 
     */
    private List<String> services;
    /**
     * @return The type of object. The value returned will be one of `contentBased`, `contentBasedIntelligent`, `intelligent` or `time`.
     * 
     */
    private String type;

    private GetAlertGroupingSettingResult() {}
    /**
     * @return The values for the configuration setup for this setting.
     * 
     */
    public Optional<GetAlertGroupingSettingConfig> config() {
        return Optional.ofNullable(this.config);
    }
    /**
     * @return A description of this alert grouping setting.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The ID of the found alert grouping setting.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The short name of the found alert grouping setting.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A list of string containing the IDs of services associated with this setting.
     * 
     */
    public List<String> services() {
        return this.services;
    }
    /**
     * @return The type of object. The value returned will be one of `contentBased`, `contentBasedIntelligent`, `intelligent` or `time`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAlertGroupingSettingResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GetAlertGroupingSettingConfig config;
        private String description;
        private String id;
        private String name;
        private List<String> services;
        private String type;
        public Builder() {}
        public Builder(GetAlertGroupingSettingResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.config = defaults.config;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.services = defaults.services;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder config(@Nullable GetAlertGroupingSettingConfig config) {

            this.config = config;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetAlertGroupingSettingResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAlertGroupingSettingResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetAlertGroupingSettingResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder services(List<String> services) {
            if (services == null) {
              throw new MissingRequiredPropertyException("GetAlertGroupingSettingResult", "services");
            }
            this.services = services;
            return this;
        }
        public Builder services(String... services) {
            return services(List.of(services));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetAlertGroupingSettingResult", "type");
            }
            this.type = type;
            return this;
        }
        public GetAlertGroupingSettingResult build() {
            final var _resultValue = new GetAlertGroupingSettingResult();
            _resultValue.config = config;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.services = services;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
