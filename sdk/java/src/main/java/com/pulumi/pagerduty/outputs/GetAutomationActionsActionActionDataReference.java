// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAutomationActionsActionActionDataReference {
    /**
     * @return (Optional) The command to execute the script with.
     * 
     */
    private String invocationCommand;
    /**
     * @return (Optional) The arguments to pass to the Process Automation job execution.
     * 
     */
    private String processAutomationJobArguments;
    /**
     * @return (Required for `process_automation` action_type) The ID of the Process Automation job to execute.
     * 
     */
    private String processAutomationJobId;
    /**
     * @return (Required for `script` action_type) Body of the script to be executed on the Runner. Max length is 16777215 characters.
     * 
     */
    private String script;

    private GetAutomationActionsActionActionDataReference() {}
    /**
     * @return (Optional) The command to execute the script with.
     * 
     */
    public String invocationCommand() {
        return this.invocationCommand;
    }
    /**
     * @return (Optional) The arguments to pass to the Process Automation job execution.
     * 
     */
    public String processAutomationJobArguments() {
        return this.processAutomationJobArguments;
    }
    /**
     * @return (Required for `process_automation` action_type) The ID of the Process Automation job to execute.
     * 
     */
    public String processAutomationJobId() {
        return this.processAutomationJobId;
    }
    /**
     * @return (Required for `script` action_type) Body of the script to be executed on the Runner. Max length is 16777215 characters.
     * 
     */
    public String script() {
        return this.script;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutomationActionsActionActionDataReference defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String invocationCommand;
        private String processAutomationJobArguments;
        private String processAutomationJobId;
        private String script;
        public Builder() {}
        public Builder(GetAutomationActionsActionActionDataReference defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.invocationCommand = defaults.invocationCommand;
    	      this.processAutomationJobArguments = defaults.processAutomationJobArguments;
    	      this.processAutomationJobId = defaults.processAutomationJobId;
    	      this.script = defaults.script;
        }

        @CustomType.Setter
        public Builder invocationCommand(String invocationCommand) {
            this.invocationCommand = Objects.requireNonNull(invocationCommand);
            return this;
        }
        @CustomType.Setter
        public Builder processAutomationJobArguments(String processAutomationJobArguments) {
            this.processAutomationJobArguments = Objects.requireNonNull(processAutomationJobArguments);
            return this;
        }
        @CustomType.Setter
        public Builder processAutomationJobId(String processAutomationJobId) {
            this.processAutomationJobId = Objects.requireNonNull(processAutomationJobId);
            return this;
        }
        @CustomType.Setter
        public Builder script(String script) {
            this.script = Objects.requireNonNull(script);
            return this;
        }
        public GetAutomationActionsActionActionDataReference build() {
            final var o = new GetAutomationActionsActionActionDataReference();
            o.invocationCommand = invocationCommand;
            o.processAutomationJobArguments = processAutomationJobArguments;
            o.processAutomationJobId = processAutomationJobId;
            o.script = script;
            return o;
        }
    }
}
