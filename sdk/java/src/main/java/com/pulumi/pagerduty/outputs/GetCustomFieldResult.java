// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCustomFieldResult {
    private String datatype;
    private String description;
    private String displayName;
    private Boolean fixedOptions;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private Boolean multiValue;
    private String name;

    private GetCustomFieldResult() {}
    public String datatype() {
        return this.datatype;
    }
    public String description() {
        return this.description;
    }
    public String displayName() {
        return this.displayName;
    }
    public Boolean fixedOptions() {
        return this.fixedOptions;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Boolean multiValue() {
        return this.multiValue;
    }
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCustomFieldResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String datatype;
        private String description;
        private String displayName;
        private Boolean fixedOptions;
        private String id;
        private Boolean multiValue;
        private String name;
        public Builder() {}
        public Builder(GetCustomFieldResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datatype = defaults.datatype;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.fixedOptions = defaults.fixedOptions;
    	      this.id = defaults.id;
    	      this.multiValue = defaults.multiValue;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder datatype(String datatype) {
            this.datatype = Objects.requireNonNull(datatype);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder fixedOptions(Boolean fixedOptions) {
            this.fixedOptions = Objects.requireNonNull(fixedOptions);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder multiValue(Boolean multiValue) {
            this.multiValue = Objects.requireNonNull(multiValue);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public GetCustomFieldResult build() {
            final var o = new GetCustomFieldResult();
            o.datatype = datatype;
            o.description = description;
            o.displayName = displayName;
            o.fixedOptions = fixedOptions;
            o.id = id;
            o.multiValue = multiValue;
            o.name = name;
            return o;
        }
    }
}
