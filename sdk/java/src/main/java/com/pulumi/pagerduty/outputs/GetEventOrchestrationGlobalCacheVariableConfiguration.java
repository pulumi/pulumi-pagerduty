// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetEventOrchestrationGlobalCacheVariableConfiguration {
    /**
     * @return A [RE2 regular expression][4] that will be matched against the field specified via the `source` argument. This field is only used when `type` is `recent_value`
     * 
     */
    private String regex;
    /**
     * @return The path to the event field where the `regex` will be applied to extract a value. You can use any valid [PCL path](https://developer.pagerduty.com/docs/ZG9jOjM1NTE0MDc0-pcl-overview#paths). This field is only used when `type` is `recent_value`
     * 
     */
    private String source;
    /**
     * @return The number of seconds indicating how long to count incoming trigger events for. This field is only used when `type` is `trigger_event_count`
     * 
     */
    private Integer ttlSeconds;
    /**
     * @return The [type of value](https://support.pagerduty.com/docs/event-orchestration-variables) to store into the Cache Variable. Can be one of: `recent_value` or `trigger_event_count`.
     * 
     */
    private String type;

    private GetEventOrchestrationGlobalCacheVariableConfiguration() {}
    /**
     * @return A [RE2 regular expression][4] that will be matched against the field specified via the `source` argument. This field is only used when `type` is `recent_value`
     * 
     */
    public String regex() {
        return this.regex;
    }
    /**
     * @return The path to the event field where the `regex` will be applied to extract a value. You can use any valid [PCL path](https://developer.pagerduty.com/docs/ZG9jOjM1NTE0MDc0-pcl-overview#paths). This field is only used when `type` is `recent_value`
     * 
     */
    public String source() {
        return this.source;
    }
    /**
     * @return The number of seconds indicating how long to count incoming trigger events for. This field is only used when `type` is `trigger_event_count`
     * 
     */
    public Integer ttlSeconds() {
        return this.ttlSeconds;
    }
    /**
     * @return The [type of value](https://support.pagerduty.com/docs/event-orchestration-variables) to store into the Cache Variable. Can be one of: `recent_value` or `trigger_event_count`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEventOrchestrationGlobalCacheVariableConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String regex;
        private String source;
        private Integer ttlSeconds;
        private String type;
        public Builder() {}
        public Builder(GetEventOrchestrationGlobalCacheVariableConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.regex = defaults.regex;
    	      this.source = defaults.source;
    	      this.ttlSeconds = defaults.ttlSeconds;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder regex(String regex) {
            if (regex == null) {
              throw new MissingRequiredPropertyException("GetEventOrchestrationGlobalCacheVariableConfiguration", "regex");
            }
            this.regex = regex;
            return this;
        }
        @CustomType.Setter
        public Builder source(String source) {
            if (source == null) {
              throw new MissingRequiredPropertyException("GetEventOrchestrationGlobalCacheVariableConfiguration", "source");
            }
            this.source = source;
            return this;
        }
        @CustomType.Setter
        public Builder ttlSeconds(Integer ttlSeconds) {
            if (ttlSeconds == null) {
              throw new MissingRequiredPropertyException("GetEventOrchestrationGlobalCacheVariableConfiguration", "ttlSeconds");
            }
            this.ttlSeconds = ttlSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetEventOrchestrationGlobalCacheVariableConfiguration", "type");
            }
            this.type = type;
            return this;
        }
        public GetEventOrchestrationGlobalCacheVariableConfiguration build() {
            final var _resultValue = new GetEventOrchestrationGlobalCacheVariableConfiguration();
            _resultValue.regex = regex;
            _resultValue.source = source;
            _resultValue.ttlSeconds = ttlSeconds;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
