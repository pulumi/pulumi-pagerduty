// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.pagerduty.outputs.GetEventOrchestrationIntegrationParameter;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetEventOrchestrationIntegration {
    /**
     * @return ID of the integration
     * * `parameters`
     * 
     */
    private final String id;
    private final List<GetEventOrchestrationIntegrationParameter> parameters;

    @CustomType.Constructor
    private GetEventOrchestrationIntegration(
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("parameters") List<GetEventOrchestrationIntegrationParameter> parameters) {
        this.id = id;
        this.parameters = parameters;
    }

    /**
     * @return ID of the integration
     * * `parameters`
     * 
     */
    public String id() {
        return this.id;
    }
    public List<GetEventOrchestrationIntegrationParameter> parameters() {
        return this.parameters;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEventOrchestrationIntegration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String id;
        private List<GetEventOrchestrationIntegrationParameter> parameters;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEventOrchestrationIntegration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.parameters = defaults.parameters;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder parameters(List<GetEventOrchestrationIntegrationParameter> parameters) {
            this.parameters = Objects.requireNonNull(parameters);
            return this;
        }
        public Builder parameters(GetEventOrchestrationIntegrationParameter... parameters) {
            return parameters(List.of(parameters));
        }        public GetEventOrchestrationIntegration build() {
            return new GetEventOrchestrationIntegration(id, parameters);
        }
    }
}
