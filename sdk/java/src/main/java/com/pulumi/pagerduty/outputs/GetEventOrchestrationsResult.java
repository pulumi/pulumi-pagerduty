// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.pagerduty.outputs.GetEventOrchestrationsEventOrchestration;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetEventOrchestrationsResult {
    private List<GetEventOrchestrationsEventOrchestration> eventOrchestrations;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of the Event Orchestrations which name match `name_filter` argument.
     * 
     */
    private String nameFilter;

    private GetEventOrchestrationsResult() {}
    public List<GetEventOrchestrationsEventOrchestration> eventOrchestrations() {
        return this.eventOrchestrations;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of the Event Orchestrations which name match `name_filter` argument.
     * 
     */
    public String nameFilter() {
        return this.nameFilter;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEventOrchestrationsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetEventOrchestrationsEventOrchestration> eventOrchestrations;
        private String id;
        private String nameFilter;
        public Builder() {}
        public Builder(GetEventOrchestrationsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eventOrchestrations = defaults.eventOrchestrations;
    	      this.id = defaults.id;
    	      this.nameFilter = defaults.nameFilter;
        }

        @CustomType.Setter
        public Builder eventOrchestrations(List<GetEventOrchestrationsEventOrchestration> eventOrchestrations) {
            if (eventOrchestrations == null) {
              throw new MissingRequiredPropertyException("GetEventOrchestrationsResult", "eventOrchestrations");
            }
            this.eventOrchestrations = eventOrchestrations;
            return this;
        }
        public Builder eventOrchestrations(GetEventOrchestrationsEventOrchestration... eventOrchestrations) {
            return eventOrchestrations(List.of(eventOrchestrations));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetEventOrchestrationsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder nameFilter(String nameFilter) {
            if (nameFilter == null) {
              throw new MissingRequiredPropertyException("GetEventOrchestrationsResult", "nameFilter");
            }
            this.nameFilter = nameFilter;
            return this;
        }
        public GetEventOrchestrationsResult build() {
            final var _resultValue = new GetEventOrchestrationsResult();
            _resultValue.eventOrchestrations = eventOrchestrations;
            _resultValue.id = id;
            _resultValue.nameFilter = nameFilter;
            return _resultValue;
        }
    }
}
