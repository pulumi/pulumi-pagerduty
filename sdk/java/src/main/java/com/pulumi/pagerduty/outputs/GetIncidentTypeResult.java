// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetIncidentTypeResult {
    private String description;
    private String displayName;
    private Boolean enabled;
    private String id;
    private String name;
    private String parentType;
    private String type;

    private GetIncidentTypeResult() {}
    public String description() {
        return this.description;
    }
    public String displayName() {
        return this.displayName;
    }
    public Boolean enabled() {
        return this.enabled;
    }
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public String parentType() {
        return this.parentType;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIncidentTypeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String displayName;
        private Boolean enabled;
        private String id;
        private String name;
        private String parentType;
        private String type;
        public Builder() {}
        public Builder(GetIncidentTypeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.enabled = defaults.enabled;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.parentType = defaults.parentType;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetIncidentTypeResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetIncidentTypeResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetIncidentTypeResult", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIncidentTypeResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetIncidentTypeResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder parentType(String parentType) {
            if (parentType == null) {
              throw new MissingRequiredPropertyException("GetIncidentTypeResult", "parentType");
            }
            this.parentType = parentType;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetIncidentTypeResult", "type");
            }
            this.type = type;
            return this;
        }
        public GetIncidentTypeResult build() {
            final var _resultValue = new GetIncidentTypeResult();
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.enabled = enabled;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.parentType = parentType;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
