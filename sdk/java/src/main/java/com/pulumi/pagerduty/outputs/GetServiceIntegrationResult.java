// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetServiceIntegrationResult {
    private String id;
    /**
     * @return The integration key for the integration. This can be used to configure alerts.
     * 
     */
    private String integrationKey;
    private String integrationSummary;
    private String serviceName;

    private GetServiceIntegrationResult() {}
    public String id() {
        return this.id;
    }
    /**
     * @return The integration key for the integration. This can be used to configure alerts.
     * 
     */
    public String integrationKey() {
        return this.integrationKey;
    }
    public String integrationSummary() {
        return this.integrationSummary;
    }
    public String serviceName() {
        return this.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceIntegrationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String integrationKey;
        private String integrationSummary;
        private String serviceName;
        public Builder() {}
        public Builder(GetServiceIntegrationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.integrationKey = defaults.integrationKey;
    	      this.integrationSummary = defaults.integrationSummary;
    	      this.serviceName = defaults.serviceName;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder integrationKey(String integrationKey) {
            if (integrationKey == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "integrationKey");
            }
            this.integrationKey = integrationKey;
            return this;
        }
        @CustomType.Setter
        public Builder integrationSummary(String integrationSummary) {
            if (integrationSummary == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "integrationSummary");
            }
            this.integrationSummary = integrationSummary;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            if (serviceName == null) {
              throw new MissingRequiredPropertyException("GetServiceIntegrationResult", "serviceName");
            }
            this.serviceName = serviceName;
            return this;
        }
        public GetServiceIntegrationResult build() {
            final var _resultValue = new GetServiceIntegrationResult();
            _resultValue.id = id;
            _resultValue.integrationKey = integrationKey;
            _resultValue.integrationSummary = integrationSummary;
            _resultValue.serviceName = serviceName;
            return _resultValue;
        }
    }
}
