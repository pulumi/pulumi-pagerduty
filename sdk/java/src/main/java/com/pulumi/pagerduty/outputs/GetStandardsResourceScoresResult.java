// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.pagerduty.outputs.GetStandardsResourceScoresScore;
import com.pulumi.pagerduty.outputs.GetStandardsResourceScoresStandard;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetStandardsResourceScoresResult {
    /**
     * @return A unique identifier for the standard.
     * 
     */
    private String id;
    /**
     * @return Specifies the type of resource to which the standard applies.
     * 
     */
    private String resourceType;
    /**
     * @return Summary of the scores for standards associated with this resource.
     * 
     */
    private GetStandardsResourceScoresScore score;
    /**
     * @return The list of standards evaluated against.
     * 
     */
    private List<GetStandardsResourceScoresStandard> standards;

    private GetStandardsResourceScoresResult() {}
    /**
     * @return A unique identifier for the standard.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Specifies the type of resource to which the standard applies.
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }
    /**
     * @return Summary of the scores for standards associated with this resource.
     * 
     */
    public GetStandardsResourceScoresScore score() {
        return this.score;
    }
    /**
     * @return The list of standards evaluated against.
     * 
     */
    public List<GetStandardsResourceScoresStandard> standards() {
        return this.standards;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStandardsResourceScoresResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String resourceType;
        private GetStandardsResourceScoresScore score;
        private List<GetStandardsResourceScoresStandard> standards;
        public Builder() {}
        public Builder(GetStandardsResourceScoresResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.resourceType = defaults.resourceType;
    	      this.score = defaults.score;
    	      this.standards = defaults.standards;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetStandardsResourceScoresResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(String resourceType) {
            if (resourceType == null) {
              throw new MissingRequiredPropertyException("GetStandardsResourceScoresResult", "resourceType");
            }
            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder score(GetStandardsResourceScoresScore score) {
            if (score == null) {
              throw new MissingRequiredPropertyException("GetStandardsResourceScoresResult", "score");
            }
            this.score = score;
            return this;
        }
        @CustomType.Setter
        public Builder standards(List<GetStandardsResourceScoresStandard> standards) {
            if (standards == null) {
              throw new MissingRequiredPropertyException("GetStandardsResourceScoresResult", "standards");
            }
            this.standards = standards;
            return this;
        }
        public Builder standards(GetStandardsResourceScoresStandard... standards) {
            return standards(List.of(standards));
        }
        public GetStandardsResourceScoresResult build() {
            final var _resultValue = new GetStandardsResourceScoresResult();
            _resultValue.id = id;
            _resultValue.resourceType = resourceType;
            _resultValue.score = score;
            _resultValue.standards = standards;
            return _resultValue;
        }
    }
}
