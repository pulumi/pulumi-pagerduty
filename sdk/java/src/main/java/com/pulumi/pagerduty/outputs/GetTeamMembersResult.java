// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.pagerduty.outputs.GetTeamMembersMember;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTeamMembersResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The users of the found team.
     * 
     */
    private List<GetTeamMembersMember> members;
    private String teamId;

    private GetTeamMembersResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The users of the found team.
     * 
     */
    public List<GetTeamMembersMember> members() {
        return this.members;
    }
    public String teamId() {
        return this.teamId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTeamMembersResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<GetTeamMembersMember> members;
        private String teamId;
        public Builder() {}
        public Builder(GetTeamMembersResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.members = defaults.members;
    	      this.teamId = defaults.teamId;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetTeamMembersResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder members(List<GetTeamMembersMember> members) {
            if (members == null) {
              throw new MissingRequiredPropertyException("GetTeamMembersResult", "members");
            }
            this.members = members;
            return this;
        }
        public Builder members(GetTeamMembersMember... members) {
            return members(List.of(members));
        }
        @CustomType.Setter
        public Builder teamId(String teamId) {
            if (teamId == null) {
              throw new MissingRequiredPropertyException("GetTeamMembersResult", "teamId");
            }
            this.teamId = teamId;
            return this;
        }
        public GetTeamMembersResult build() {
            final var _resultValue = new GetTeamMembersResult();
            _resultValue.id = id;
            _resultValue.members = members;
            _resultValue.teamId = teamId;
            return _resultValue;
        }
    }
}
