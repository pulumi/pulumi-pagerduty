// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JiraCloudAccountMappingRuleConfigJiraCustomField {
    /**
     * @return The PagerDuty incident field from which the value will be extracted (only applicable if `type` is `attribute`); one of `incidentNumber`, `incidentTitle`, `incidentDescription`, `incidentStatus`, `incidentCreatedAt`, `incidentService`, `incidentEscalationPolicy`, `incidentImpactedServices`, `incidentHtmlUrl`, `incidentAssignees`, `incidentAcknowledgers`, `incidentLastStatusChangeAt`, `incidentLastStatusChangeBy`, `incidentUrgency` or `incidentPriority`.
     * 
     */
    private @Nullable String sourceIncidentField;
    /**
     * @return The unique identifier key of the Jira field that will be set.
     * 
     */
    private String targetIssueField;
    /**
     * @return The human-readable name of the Jira field.
     * 
     */
    private String targetIssueFieldName;
    /**
     * @return The type of the value that will be set; one of `attribute`, `const` or `jiraValue`.
     * 
     */
    private String type;
    /**
     * @return The value to be set for the Jira field (only applicable if `type` is `const` or `jiraValue`). It must be set as a JSON string.
     * 
     */
    private @Nullable String value;

    private JiraCloudAccountMappingRuleConfigJiraCustomField() {}
    /**
     * @return The PagerDuty incident field from which the value will be extracted (only applicable if `type` is `attribute`); one of `incidentNumber`, `incidentTitle`, `incidentDescription`, `incidentStatus`, `incidentCreatedAt`, `incidentService`, `incidentEscalationPolicy`, `incidentImpactedServices`, `incidentHtmlUrl`, `incidentAssignees`, `incidentAcknowledgers`, `incidentLastStatusChangeAt`, `incidentLastStatusChangeBy`, `incidentUrgency` or `incidentPriority`.
     * 
     */
    public Optional<String> sourceIncidentField() {
        return Optional.ofNullable(this.sourceIncidentField);
    }
    /**
     * @return The unique identifier key of the Jira field that will be set.
     * 
     */
    public String targetIssueField() {
        return this.targetIssueField;
    }
    /**
     * @return The human-readable name of the Jira field.
     * 
     */
    public String targetIssueFieldName() {
        return this.targetIssueFieldName;
    }
    /**
     * @return The type of the value that will be set; one of `attribute`, `const` or `jiraValue`.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The value to be set for the Jira field (only applicable if `type` is `const` or `jiraValue`). It must be set as a JSON string.
     * 
     */
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JiraCloudAccountMappingRuleConfigJiraCustomField defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String sourceIncidentField;
        private String targetIssueField;
        private String targetIssueFieldName;
        private String type;
        private @Nullable String value;
        public Builder() {}
        public Builder(JiraCloudAccountMappingRuleConfigJiraCustomField defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sourceIncidentField = defaults.sourceIncidentField;
    	      this.targetIssueField = defaults.targetIssueField;
    	      this.targetIssueFieldName = defaults.targetIssueFieldName;
    	      this.type = defaults.type;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder sourceIncidentField(@Nullable String sourceIncidentField) {

            this.sourceIncidentField = sourceIncidentField;
            return this;
        }
        @CustomType.Setter
        public Builder targetIssueField(String targetIssueField) {
            if (targetIssueField == null) {
              throw new MissingRequiredPropertyException("JiraCloudAccountMappingRuleConfigJiraCustomField", "targetIssueField");
            }
            this.targetIssueField = targetIssueField;
            return this;
        }
        @CustomType.Setter
        public Builder targetIssueFieldName(String targetIssueFieldName) {
            if (targetIssueFieldName == null) {
              throw new MissingRequiredPropertyException("JiraCloudAccountMappingRuleConfigJiraCustomField", "targetIssueFieldName");
            }
            this.targetIssueFieldName = targetIssueFieldName;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("JiraCloudAccountMappingRuleConfigJiraCustomField", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder value(@Nullable String value) {

            this.value = value;
            return this;
        }
        public JiraCloudAccountMappingRuleConfigJiraCustomField build() {
            final var _resultValue = new JiraCloudAccountMappingRuleConfigJiraCustomField();
            _resultValue.sourceIncidentField = sourceIncidentField;
            _resultValue.targetIssueField = targetIssueField;
            _resultValue.targetIssueFieldName = targetIssueFieldName;
            _resultValue.type = type;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
