// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RulesetRuleActionsSuppress {
    /**
     * @return The number value of the `threshold_time_unit` before an incident is created. Must be greater than 0.
     * 
     */
    private final @Nullable Integer thresholdTimeAmount;
    /**
     * @return The `seconds`,`minutes`, or `hours` the `threshold_time_amount` should be measured.
     * 
     */
    private final @Nullable String thresholdTimeUnit;
    /**
     * @return The number of alerts that should be suppressed. Must be greater than 0.
     * 
     */
    private final @Nullable Integer thresholdValue;
    /**
     * @return Boolean value that indicates if the alert should be suppressed before the indicated threshold values are met.
     * 
     */
    private final @Nullable Boolean value;

    @CustomType.Constructor
    private RulesetRuleActionsSuppress(
        @CustomType.Parameter("thresholdTimeAmount") @Nullable Integer thresholdTimeAmount,
        @CustomType.Parameter("thresholdTimeUnit") @Nullable String thresholdTimeUnit,
        @CustomType.Parameter("thresholdValue") @Nullable Integer thresholdValue,
        @CustomType.Parameter("value") @Nullable Boolean value) {
        this.thresholdTimeAmount = thresholdTimeAmount;
        this.thresholdTimeUnit = thresholdTimeUnit;
        this.thresholdValue = thresholdValue;
        this.value = value;
    }

    /**
     * @return The number value of the `threshold_time_unit` before an incident is created. Must be greater than 0.
     * 
     */
    public Optional<Integer> thresholdTimeAmount() {
        return Optional.ofNullable(this.thresholdTimeAmount);
    }
    /**
     * @return The `seconds`,`minutes`, or `hours` the `threshold_time_amount` should be measured.
     * 
     */
    public Optional<String> thresholdTimeUnit() {
        return Optional.ofNullable(this.thresholdTimeUnit);
    }
    /**
     * @return The number of alerts that should be suppressed. Must be greater than 0.
     * 
     */
    public Optional<Integer> thresholdValue() {
        return Optional.ofNullable(this.thresholdValue);
    }
    /**
     * @return Boolean value that indicates if the alert should be suppressed before the indicated threshold values are met.
     * 
     */
    public Optional<Boolean> value() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RulesetRuleActionsSuppress defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer thresholdTimeAmount;
        private @Nullable String thresholdTimeUnit;
        private @Nullable Integer thresholdValue;
        private @Nullable Boolean value;

        public Builder() {
    	      // Empty
        }

        public Builder(RulesetRuleActionsSuppress defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.thresholdTimeAmount = defaults.thresholdTimeAmount;
    	      this.thresholdTimeUnit = defaults.thresholdTimeUnit;
    	      this.thresholdValue = defaults.thresholdValue;
    	      this.value = defaults.value;
        }

        public Builder thresholdTimeAmount(@Nullable Integer thresholdTimeAmount) {
            this.thresholdTimeAmount = thresholdTimeAmount;
            return this;
        }
        public Builder thresholdTimeUnit(@Nullable String thresholdTimeUnit) {
            this.thresholdTimeUnit = thresholdTimeUnit;
            return this;
        }
        public Builder thresholdValue(@Nullable Integer thresholdValue) {
            this.thresholdValue = thresholdValue;
            return this;
        }
        public Builder value(@Nullable Boolean value) {
            this.value = value;
            return this;
        }        public RulesetRuleActionsSuppress build() {
            return new RulesetRuleActionsSuppress(thresholdTimeAmount, thresholdTimeUnit, thresholdValue, value);
        }
    }
}
