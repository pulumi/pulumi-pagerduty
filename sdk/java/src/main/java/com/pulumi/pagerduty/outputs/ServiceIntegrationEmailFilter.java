// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceIntegrationEmailFilter {
    /**
     * @return Can be `always` or `match`.
     * 
     */
    private @Nullable String bodyMode;
    /**
     * @return Should be a valid regex or `null`
     * 
     */
    private @Nullable String bodyRegex;
    /**
     * @return Can be `always` or `match`.
     * 
     */
    private @Nullable String fromEmailMode;
    /**
     * @return Should be a valid regex or `null`
     * 
     */
    private @Nullable String fromEmailRegex;
    /**
     * @return The ID of the service integration.
     * 
     */
    private @Nullable String id;
    /**
     * @return Can be `always` or `match`.
     * 
     */
    private @Nullable String subjectMode;
    /**
     * @return Should be a valid regex or `null`
     * 
     */
    private @Nullable String subjectRegex;

    private ServiceIntegrationEmailFilter() {}
    /**
     * @return Can be `always` or `match`.
     * 
     */
    public Optional<String> bodyMode() {
        return Optional.ofNullable(this.bodyMode);
    }
    /**
     * @return Should be a valid regex or `null`
     * 
     */
    public Optional<String> bodyRegex() {
        return Optional.ofNullable(this.bodyRegex);
    }
    /**
     * @return Can be `always` or `match`.
     * 
     */
    public Optional<String> fromEmailMode() {
        return Optional.ofNullable(this.fromEmailMode);
    }
    /**
     * @return Should be a valid regex or `null`
     * 
     */
    public Optional<String> fromEmailRegex() {
        return Optional.ofNullable(this.fromEmailRegex);
    }
    /**
     * @return The ID of the service integration.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Can be `always` or `match`.
     * 
     */
    public Optional<String> subjectMode() {
        return Optional.ofNullable(this.subjectMode);
    }
    /**
     * @return Should be a valid regex or `null`
     * 
     */
    public Optional<String> subjectRegex() {
        return Optional.ofNullable(this.subjectRegex);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceIntegrationEmailFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bodyMode;
        private @Nullable String bodyRegex;
        private @Nullable String fromEmailMode;
        private @Nullable String fromEmailRegex;
        private @Nullable String id;
        private @Nullable String subjectMode;
        private @Nullable String subjectRegex;
        public Builder() {}
        public Builder(ServiceIntegrationEmailFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bodyMode = defaults.bodyMode;
    	      this.bodyRegex = defaults.bodyRegex;
    	      this.fromEmailMode = defaults.fromEmailMode;
    	      this.fromEmailRegex = defaults.fromEmailRegex;
    	      this.id = defaults.id;
    	      this.subjectMode = defaults.subjectMode;
    	      this.subjectRegex = defaults.subjectRegex;
        }

        @CustomType.Setter
        public Builder bodyMode(@Nullable String bodyMode) {

            this.bodyMode = bodyMode;
            return this;
        }
        @CustomType.Setter
        public Builder bodyRegex(@Nullable String bodyRegex) {

            this.bodyRegex = bodyRegex;
            return this;
        }
        @CustomType.Setter
        public Builder fromEmailMode(@Nullable String fromEmailMode) {

            this.fromEmailMode = fromEmailMode;
            return this;
        }
        @CustomType.Setter
        public Builder fromEmailRegex(@Nullable String fromEmailRegex) {

            this.fromEmailRegex = fromEmailRegex;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder subjectMode(@Nullable String subjectMode) {

            this.subjectMode = subjectMode;
            return this;
        }
        @CustomType.Setter
        public Builder subjectRegex(@Nullable String subjectRegex) {

            this.subjectRegex = subjectRegex;
            return this;
        }
        public ServiceIntegrationEmailFilter build() {
            final var _resultValue = new ServiceIntegrationEmailFilter();
            _resultValue.bodyMode = bodyMode;
            _resultValue.bodyRegex = bodyRegex;
            _resultValue.fromEmailMode = fromEmailMode;
            _resultValue.fromEmailRegex = fromEmailRegex;
            _resultValue.id = id;
            _resultValue.subjectMode = subjectMode;
            _resultValue.subjectRegex = subjectRegex;
            return _resultValue;
        }
    }
}
