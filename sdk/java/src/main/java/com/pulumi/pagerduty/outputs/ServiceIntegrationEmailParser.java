// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.pagerduty.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.pagerduty.outputs.ServiceIntegrationEmailParserMatchPredicate;
import com.pulumi.pagerduty.outputs.ServiceIntegrationEmailParserValueExtractor;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceIntegrationEmailParser {
    /**
     * @return Can be `resolve` or `trigger`.
     * 
     */
    private String action;
    /**
     * @return The ID of the service integration.
     * 
     */
    private @Nullable Integer id;
    private ServiceIntegrationEmailParserMatchPredicate matchPredicate;
    private @Nullable List<ServiceIntegrationEmailParserValueExtractor> valueExtractors;

    private ServiceIntegrationEmailParser() {}
    /**
     * @return Can be `resolve` or `trigger`.
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return The ID of the service integration.
     * 
     */
    public Optional<Integer> id() {
        return Optional.ofNullable(this.id);
    }
    public ServiceIntegrationEmailParserMatchPredicate matchPredicate() {
        return this.matchPredicate;
    }
    public List<ServiceIntegrationEmailParserValueExtractor> valueExtractors() {
        return this.valueExtractors == null ? List.of() : this.valueExtractors;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceIntegrationEmailParser defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private @Nullable Integer id;
        private ServiceIntegrationEmailParserMatchPredicate matchPredicate;
        private @Nullable List<ServiceIntegrationEmailParserValueExtractor> valueExtractors;
        public Builder() {}
        public Builder(ServiceIntegrationEmailParser defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.id = defaults.id;
    	      this.matchPredicate = defaults.matchPredicate;
    	      this.valueExtractors = defaults.valueExtractors;
        }

        @CustomType.Setter
        public Builder action(String action) {
            if (action == null) {
              throw new MissingRequiredPropertyException("ServiceIntegrationEmailParser", "action");
            }
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable Integer id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder matchPredicate(ServiceIntegrationEmailParserMatchPredicate matchPredicate) {
            if (matchPredicate == null) {
              throw new MissingRequiredPropertyException("ServiceIntegrationEmailParser", "matchPredicate");
            }
            this.matchPredicate = matchPredicate;
            return this;
        }
        @CustomType.Setter
        public Builder valueExtractors(@Nullable List<ServiceIntegrationEmailParserValueExtractor> valueExtractors) {

            this.valueExtractors = valueExtractors;
            return this;
        }
        public Builder valueExtractors(ServiceIntegrationEmailParserValueExtractor... valueExtractors) {
            return valueExtractors(List.of(valueExtractors));
        }
        public ServiceIntegrationEmailParser build() {
            final var _resultValue = new ServiceIntegrationEmailParser();
            _resultValue.action = action;
            _resultValue.id = id;
            _resultValue.matchPredicate = matchPredicate;
            _resultValue.valueExtractors = valueExtractors;
            return _resultValue;
        }
    }
}
