// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * An Automation Actions [action](https://developer.pagerduty.com/api-reference/d64584a4371d3-create-an-automation-action) invokes jobs and workflows that are staged in Runbook Automation or Process Automation. It may also execute a command line script run by a Process Automation runner installed in your infrastructure.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pagerduty from "@pulumi/pagerduty";
 *
 * const paActionExample = new pagerduty.AutomationActionsAction("pa_action_example", {
 *     name: "PA Action created via TF",
 *     description: "Description of the PA Action created via TF",
 *     actionType: "process_automation",
 *     actionDataReference: {
 *         processAutomationJobId: "P123456",
 *     },
 * });
 * const scriptActionExample = new pagerduty.AutomationActionsAction("script_action_example", {
 *     name: "Script Action created via TF",
 *     description: "Description of the Script Action created via TF",
 *     actionType: "script",
 *     actionDataReference: {
 *         script: "print(\"Hello from a Python script!\")",
 *         invocationCommand: "/usr/local/bin/python3",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Actions can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import pagerduty:index/automationActionsAction:AutomationActionsAction example 01DER7CUUBF7TH4116K0M4WKPU
 * ```
 */
export class AutomationActionsAction extends pulumi.CustomResource {
    /**
     * Get an existing AutomationActionsAction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AutomationActionsActionState, opts?: pulumi.CustomResourceOptions): AutomationActionsAction {
        return new AutomationActionsAction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pagerduty:index/automationActionsAction:AutomationActionsAction';

    /**
     * Returns true if the given object is an instance of AutomationActionsAction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AutomationActionsAction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AutomationActionsAction.__pulumiType;
    }

    /**
     * The category of the action. The only allowed values are `diagnostic` and `remediation`.
     */
    declare public readonly actionClassification: pulumi.Output<string | undefined>;
    /**
     * Action Data block. Action Data is documented below.
     */
    declare public readonly actionDataReference: pulumi.Output<outputs.AutomationActionsActionActionDataReference>;
    /**
     * The type of the action. The only allowed values are `processAutomation` and `script`. Cannot be changed once set.
     */
    declare public readonly actionType: pulumi.Output<string>;
    /**
     * Whether the action can be invoked automatically from a PagerDuty Event Orchestration.
     */
    declare public readonly allowInvocationFromEventOrchestration: pulumi.Output<string>;
    /**
     * Whether the action can be invoked manually by a user on the PagerDuty website.
     */
    declare public readonly allowInvocationManually: pulumi.Output<string>;
    /**
     * The time action was created. Represented as an ISO 8601 timestamp.
     */
    declare public readonly creationTime: pulumi.Output<string>;
    /**
     * The description of the action. Max length is 1024 characters.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * If true, the action will be associated with every service.
     */
    declare public readonly mapToAllServices: pulumi.Output<boolean>;
    /**
     * (Optional) The last time action has been modified. Represented as an ISO 8601 timestamp.
     */
    declare public readonly modifyTime: pulumi.Output<string>;
    /**
     * The name of the action. Max length is 255 characters.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Whether the action can be invoked on unresolved incidents.
     */
    declare public readonly onlyInvocableOnUnresolvedIncidents: pulumi.Output<boolean>;
    /**
     * The Process Automation Actions runner to associate the action with. Cannot be changed for the `processAutomation` action type once set.
     */
    declare public readonly runnerId: pulumi.Output<string | undefined>;
    /**
     * (Optional) The type of the runner associated with the action.
     */
    declare public readonly runnerType: pulumi.Output<string>;
    /**
     * The type of object. The value returned will be `action`.
     */
    declare public readonly type: pulumi.Output<string>;

    /**
     * Create a AutomationActionsAction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AutomationActionsActionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AutomationActionsActionArgs | AutomationActionsActionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AutomationActionsActionState | undefined;
            resourceInputs["actionClassification"] = state?.actionClassification;
            resourceInputs["actionDataReference"] = state?.actionDataReference;
            resourceInputs["actionType"] = state?.actionType;
            resourceInputs["allowInvocationFromEventOrchestration"] = state?.allowInvocationFromEventOrchestration;
            resourceInputs["allowInvocationManually"] = state?.allowInvocationManually;
            resourceInputs["creationTime"] = state?.creationTime;
            resourceInputs["description"] = state?.description;
            resourceInputs["mapToAllServices"] = state?.mapToAllServices;
            resourceInputs["modifyTime"] = state?.modifyTime;
            resourceInputs["name"] = state?.name;
            resourceInputs["onlyInvocableOnUnresolvedIncidents"] = state?.onlyInvocableOnUnresolvedIncidents;
            resourceInputs["runnerId"] = state?.runnerId;
            resourceInputs["runnerType"] = state?.runnerType;
            resourceInputs["type"] = state?.type;
        } else {
            const args = argsOrState as AutomationActionsActionArgs | undefined;
            if (args?.actionDataReference === undefined && !opts.urn) {
                throw new Error("Missing required property 'actionDataReference'");
            }
            if (args?.actionType === undefined && !opts.urn) {
                throw new Error("Missing required property 'actionType'");
            }
            resourceInputs["actionClassification"] = args?.actionClassification;
            resourceInputs["actionDataReference"] = args?.actionDataReference;
            resourceInputs["actionType"] = args?.actionType;
            resourceInputs["allowInvocationFromEventOrchestration"] = args?.allowInvocationFromEventOrchestration;
            resourceInputs["allowInvocationManually"] = args?.allowInvocationManually;
            resourceInputs["creationTime"] = args?.creationTime;
            resourceInputs["description"] = args?.description;
            resourceInputs["mapToAllServices"] = args?.mapToAllServices;
            resourceInputs["modifyTime"] = args?.modifyTime;
            resourceInputs["name"] = args?.name;
            resourceInputs["onlyInvocableOnUnresolvedIncidents"] = args?.onlyInvocableOnUnresolvedIncidents;
            resourceInputs["runnerId"] = args?.runnerId;
            resourceInputs["runnerType"] = args?.runnerType;
            resourceInputs["type"] = args?.type;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AutomationActionsAction.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AutomationActionsAction resources.
 */
export interface AutomationActionsActionState {
    /**
     * The category of the action. The only allowed values are `diagnostic` and `remediation`.
     */
    actionClassification?: pulumi.Input<string>;
    /**
     * Action Data block. Action Data is documented below.
     */
    actionDataReference?: pulumi.Input<inputs.AutomationActionsActionActionDataReference>;
    /**
     * The type of the action. The only allowed values are `processAutomation` and `script`. Cannot be changed once set.
     */
    actionType?: pulumi.Input<string>;
    /**
     * Whether the action can be invoked automatically from a PagerDuty Event Orchestration.
     */
    allowInvocationFromEventOrchestration?: pulumi.Input<string>;
    /**
     * Whether the action can be invoked manually by a user on the PagerDuty website.
     */
    allowInvocationManually?: pulumi.Input<string>;
    /**
     * The time action was created. Represented as an ISO 8601 timestamp.
     */
    creationTime?: pulumi.Input<string>;
    /**
     * The description of the action. Max length is 1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * If true, the action will be associated with every service.
     */
    mapToAllServices?: pulumi.Input<boolean>;
    /**
     * (Optional) The last time action has been modified. Represented as an ISO 8601 timestamp.
     */
    modifyTime?: pulumi.Input<string>;
    /**
     * The name of the action. Max length is 255 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether the action can be invoked on unresolved incidents.
     */
    onlyInvocableOnUnresolvedIncidents?: pulumi.Input<boolean>;
    /**
     * The Process Automation Actions runner to associate the action with. Cannot be changed for the `processAutomation` action type once set.
     */
    runnerId?: pulumi.Input<string>;
    /**
     * (Optional) The type of the runner associated with the action.
     */
    runnerType?: pulumi.Input<string>;
    /**
     * The type of object. The value returned will be `action`.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AutomationActionsAction resource.
 */
export interface AutomationActionsActionArgs {
    /**
     * The category of the action. The only allowed values are `diagnostic` and `remediation`.
     */
    actionClassification?: pulumi.Input<string>;
    /**
     * Action Data block. Action Data is documented below.
     */
    actionDataReference: pulumi.Input<inputs.AutomationActionsActionActionDataReference>;
    /**
     * The type of the action. The only allowed values are `processAutomation` and `script`. Cannot be changed once set.
     */
    actionType: pulumi.Input<string>;
    /**
     * Whether the action can be invoked automatically from a PagerDuty Event Orchestration.
     */
    allowInvocationFromEventOrchestration?: pulumi.Input<string>;
    /**
     * Whether the action can be invoked manually by a user on the PagerDuty website.
     */
    allowInvocationManually?: pulumi.Input<string>;
    /**
     * The time action was created. Represented as an ISO 8601 timestamp.
     */
    creationTime?: pulumi.Input<string>;
    /**
     * The description of the action. Max length is 1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * If true, the action will be associated with every service.
     */
    mapToAllServices?: pulumi.Input<boolean>;
    /**
     * (Optional) The last time action has been modified. Represented as an ISO 8601 timestamp.
     */
    modifyTime?: pulumi.Input<string>;
    /**
     * The name of the action. Max length is 255 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether the action can be invoked on unresolved incidents.
     */
    onlyInvocableOnUnresolvedIncidents?: pulumi.Input<boolean>;
    /**
     * The Process Automation Actions runner to associate the action with. Cannot be changed for the `processAutomation` action type once set.
     */
    runnerId?: pulumi.Input<string>;
    /**
     * (Optional) The type of the runner associated with the action.
     */
    runnerType?: pulumi.Input<string>;
    /**
     * The type of object. The value returned will be `action`.
     */
    type?: pulumi.Input<string>;
}
