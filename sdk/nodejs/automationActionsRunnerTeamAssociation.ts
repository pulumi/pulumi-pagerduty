// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * An Automation Actions [runner association with a team](https://developer.pagerduty.com/api-reference/f662de6271a6e-associate-a-runner-with-a-team) configures the relation of a specific Runner with a Team.
 *
 * ## Import
 *
 * Runner team association can be imported using the `runner_id` and `team_id` separated by a colon, e.g.
 *
 * ```sh
 *  $ pulumi import pagerduty:index/automationActionsRunnerTeamAssociation:AutomationActionsRunnerTeamAssociation example 01DER7CUUBF7TH4116K0M4WKPU:PLB09Z
 * ```
 */
export class AutomationActionsRunnerTeamAssociation extends pulumi.CustomResource {
    /**
     * Get an existing AutomationActionsRunnerTeamAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AutomationActionsRunnerTeamAssociationState, opts?: pulumi.CustomResourceOptions): AutomationActionsRunnerTeamAssociation {
        return new AutomationActionsRunnerTeamAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pagerduty:index/automationActionsRunnerTeamAssociation:AutomationActionsRunnerTeamAssociation';

    /**
     * Returns true if the given object is an instance of AutomationActionsRunnerTeamAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AutomationActionsRunnerTeamAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AutomationActionsRunnerTeamAssociation.__pulumiType;
    }

    /**
     * Id of the runner.
     */
    public readonly runnerId!: pulumi.Output<string>;
    /**
     * Id of the team associated with the runner.
     */
    public readonly teamId!: pulumi.Output<string>;

    /**
     * Create a AutomationActionsRunnerTeamAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AutomationActionsRunnerTeamAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AutomationActionsRunnerTeamAssociationArgs | AutomationActionsRunnerTeamAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AutomationActionsRunnerTeamAssociationState | undefined;
            resourceInputs["runnerId"] = state ? state.runnerId : undefined;
            resourceInputs["teamId"] = state ? state.teamId : undefined;
        } else {
            const args = argsOrState as AutomationActionsRunnerTeamAssociationArgs | undefined;
            if ((!args || args.runnerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'runnerId'");
            }
            if ((!args || args.teamId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'teamId'");
            }
            resourceInputs["runnerId"] = args ? args.runnerId : undefined;
            resourceInputs["teamId"] = args ? args.teamId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AutomationActionsRunnerTeamAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AutomationActionsRunnerTeamAssociation resources.
 */
export interface AutomationActionsRunnerTeamAssociationState {
    /**
     * Id of the runner.
     */
    runnerId?: pulumi.Input<string>;
    /**
     * Id of the team associated with the runner.
     */
    teamId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AutomationActionsRunnerTeamAssociation resource.
 */
export interface AutomationActionsRunnerTeamAssociationArgs {
    /**
     * Id of the runner.
     */
    runnerId: pulumi.Input<string>;
    /**
     * Id of the team associated with the runner.
     */
    teamId: pulumi.Input<string>;
}
