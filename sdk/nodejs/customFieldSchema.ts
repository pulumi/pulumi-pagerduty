// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * !> This Resource is no longer functional. Documentation is left here for the purpose of documenting migration steps.
 *
 * A [Custom Field Schema](https://support.pagerduty.com/docs/custom-fields#schemas) is a set of Custom Fields which can be set on an incident.
 *
 * ## Migration
 *
 * This resource has no currently functional counterpart. Custom Fields on Incidents are now applied globally
 * to incidents within an account and have no notion of a Field Schema.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pagerduty from "@pulumi/pagerduty";
 *
 * const csImpact = new pagerduty.CustomField("csImpact", {datatype: "string"});
 * const mySchema = new pagerduty.CustomFieldSchema("mySchema", {
 *     description: "Fields used on incidents",
 *     title: "My Schema",
 * });
 * ```
 *
 * ## Import
 *
 * Fields schemas can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import pagerduty:index/customFieldSchema:CustomFieldSchema my_schema PLBP09X
 * ```
 */
export class CustomFieldSchema extends pulumi.CustomResource {
    /**
     * Get an existing CustomFieldSchema resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomFieldSchemaState, opts?: pulumi.CustomResourceOptions): CustomFieldSchema {
        return new CustomFieldSchema(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pagerduty:index/customFieldSchema:CustomFieldSchema';

    /**
     * Returns true if the given object is an instance of CustomFieldSchema.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomFieldSchema {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomFieldSchema.__pulumiType;
    }

    /**
     * The description of the field schema.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The title of the field schema.
     */
    public readonly title!: pulumi.Output<string>;

    /**
     * Create a CustomFieldSchema resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomFieldSchemaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomFieldSchemaArgs | CustomFieldSchemaState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomFieldSchemaState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["title"] = state ? state.title : undefined;
        } else {
            const args = argsOrState as CustomFieldSchemaArgs | undefined;
            if ((!args || args.title === undefined) && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomFieldSchema.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomFieldSchema resources.
 */
export interface CustomFieldSchemaState {
    /**
     * The description of the field schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The title of the field schema.
     */
    title?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomFieldSchema resource.
 */
export interface CustomFieldSchemaArgs {
    /**
     * The description of the field schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The title of the field schema.
     */
    title: pulumi.Input<string>;
}
