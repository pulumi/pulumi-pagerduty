// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to get information about a specific [Integration](https://developer.pagerduty.com/api-reference/1c6607db389a8-get-an-integration-for-an-event-orchestration) for an Event Orchestration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pagerduty from "@pulumi/pagerduty";
 *
 * const eventOrchestration = new pagerduty.EventOrchestration("event_orchestration", {name: "Test Event Orchestration"});
 * const integration = pagerduty.getEventOrchestrationIntegrationOutput({
 *     eventOrchestration: eventOrchestration.id,
 *     label: "Test Event Orchestration Default Integration",
 * });
 * ```
 */
export function getEventOrchestrationIntegration(args: GetEventOrchestrationIntegrationArgs, opts?: pulumi.InvokeOptions): Promise<GetEventOrchestrationIntegrationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pagerduty:index/getEventOrchestrationIntegration:getEventOrchestrationIntegration", {
        "eventOrchestration": args.eventOrchestration,
        "id": args.id,
        "label": args.label,
    }, opts);
}

/**
 * A collection of arguments for invoking getEventOrchestrationIntegration.
 */
export interface GetEventOrchestrationIntegrationArgs {
    /**
     * ID of the Event Orchestration to which this Integration belongs.
     */
    eventOrchestration: string;
    /**
     * ID of the Integration associated with the Event Orchestration. Specify either `id` or `label`. If both are specified `id` takes precedence.
     */
    id?: string;
    /**
     * Name/description of the Integration associated with the Event Orchestration. Specify either `id` or `label`. If both are specified `id` takes precedence. The value of `label` is not unique. Potentially there might be multiple Integrations with the same `label` value associated with the Event Orchestration and retrieving data by `label` attribute will result in an error during the planning step.
     */
    label?: string;
}

/**
 * A collection of values returned by getEventOrchestrationIntegration.
 */
export interface GetEventOrchestrationIntegrationResult {
    readonly eventOrchestration: string;
    readonly id?: string;
    readonly label?: string;
    readonly parameters: outputs.GetEventOrchestrationIntegrationParameter[];
}
/**
 * Use this data source to get information about a specific [Integration](https://developer.pagerduty.com/api-reference/1c6607db389a8-get-an-integration-for-an-event-orchestration) for an Event Orchestration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pagerduty from "@pulumi/pagerduty";
 *
 * const eventOrchestration = new pagerduty.EventOrchestration("event_orchestration", {name: "Test Event Orchestration"});
 * const integration = pagerduty.getEventOrchestrationIntegrationOutput({
 *     eventOrchestration: eventOrchestration.id,
 *     label: "Test Event Orchestration Default Integration",
 * });
 * ```
 */
export function getEventOrchestrationIntegrationOutput(args: GetEventOrchestrationIntegrationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEventOrchestrationIntegrationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("pagerduty:index/getEventOrchestrationIntegration:getEventOrchestrationIntegration", {
        "eventOrchestration": args.eventOrchestration,
        "id": args.id,
        "label": args.label,
    }, opts);
}

/**
 * A collection of arguments for invoking getEventOrchestrationIntegration.
 */
export interface GetEventOrchestrationIntegrationOutputArgs {
    /**
     * ID of the Event Orchestration to which this Integration belongs.
     */
    eventOrchestration: pulumi.Input<string>;
    /**
     * ID of the Integration associated with the Event Orchestration. Specify either `id` or `label`. If both are specified `id` takes precedence.
     */
    id?: pulumi.Input<string>;
    /**
     * Name/description of the Integration associated with the Event Orchestration. Specify either `id` or `label`. If both are specified `id` takes precedence. The value of `label` is not unique. Potentially there might be multiple Integrations with the same `label` value associated with the Event Orchestration and retrieving data by `label` attribute will result in an error during the planning step.
     */
    label?: pulumi.Input<string>;
}
