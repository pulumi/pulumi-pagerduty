// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pagerduty from "@pulumi/pagerduty";
 *
 * const invalidRoles = ["owner"];
 * const licenses = pagerduty.getLicenses({});
 * const example = new pagerduty.User("example", {
 *     name: "Earline Greenholt",
 *     email: "125.greenholt.earline@graham.name",
 *     license: licenses.then(licenses => licenses.licenses?.[0]?.id),
 *     role: "user",
 * });
 * ```
 */
export function getLicenses(args?: GetLicensesArgs, opts?: pulumi.InvokeOptions): Promise<GetLicensesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pagerduty:index/getLicenses:getLicenses", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getLicenses.
 */
export interface GetLicensesArgs {
    /**
     * Allows to override the default behavior for setting the `id` attribute that is required for data sources.
     */
    id?: string;
}

/**
 * A collection of values returned by getLicenses.
 */
export interface GetLicensesResult {
    /**
     * ID of the license
     */
    readonly id?: string;
    /**
     * The list of purchased licenses.
     */
    readonly licenses: outputs.GetLicensesLicense[];
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pagerduty from "@pulumi/pagerduty";
 *
 * const invalidRoles = ["owner"];
 * const licenses = pagerduty.getLicenses({});
 * const example = new pagerduty.User("example", {
 *     name: "Earline Greenholt",
 *     email: "125.greenholt.earline@graham.name",
 *     license: licenses.then(licenses => licenses.licenses?.[0]?.id),
 *     role: "user",
 * });
 * ```
 */
export function getLicensesOutput(args?: GetLicensesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLicensesResult> {
    return pulumi.output(args).apply((a: any) => getLicenses(a, opts))
}

/**
 * A collection of arguments for invoking getLicenses.
 */
export interface GetLicensesOutputArgs {
    /**
     * Allows to override the default behavior for setting the `id` attribute that is required for data sources.
     */
    id?: pulumi.Input<string>;
}
