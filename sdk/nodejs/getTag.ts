// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to get information about a specific [tag](https://developer.pagerduty.com/api-reference/b3A6Mjc0ODIxNw-list-tags) that you can use to assign to users, teams, and escalation_policies.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pagerduty from "@pulumi/pagerduty";
 *
 * const me = pagerduty.getUser({
 *     email: "me@example.com",
 * });
 * const devops = pagerduty.getTag({
 *     label: "devops",
 * });
 * const foo = new pagerduty.TagAssignment("foo", {
 *     tagId: devops.then(devops => devops.id),
 *     entityId: me.then(me => me.id),
 *     entityType: "users",
 * });
 * ```
 */
export function getTag(args: GetTagArgs, opts?: pulumi.InvokeOptions): Promise<GetTagResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("pagerduty:index/getTag:getTag", {
        "label": args.label,
    }, opts);
}

/**
 * A collection of arguments for invoking getTag.
 */
export interface GetTagArgs {
    /**
     * The label of the tag to find in the PagerDuty API.
     */
    label: string;
}

/**
 * A collection of values returned by getTag.
 */
export interface GetTagResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly label: string;
}

export function getTagOutput(args: GetTagOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTagResult> {
    return pulumi.output(args).apply(a => getTag(a, opts))
}

/**
 * A collection of arguments for invoking getTag.
 */
export interface GetTagOutputArgs {
    /**
     * The label of the tag to find in the PagerDuty API.
     */
    label: pulumi.Input<string>;
}
