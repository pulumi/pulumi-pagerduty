// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pagerduty from "@pulumi/pagerduty";
 *
 * const base = pagerduty.getIncidentType({
 *     displayName: "Base Incident",
 * });
 * const example = new pagerduty.IncidentType("example", {
 *     name: "backoffice",
 *     displayName: "Backoffice Incident",
 *     parentType: base.then(base => base.id),
 *     description: "Internal incidents not facing customer",
 * });
 * ```
 *
 * ## Import
 *
 * Services can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import pagerduty:index/incidentType:IncidentType main P12345
 * ```
 */
export class IncidentType extends pulumi.CustomResource {
    /**
     * Get an existing IncidentType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IncidentTypeState, opts?: pulumi.CustomResourceOptions): IncidentType {
        return new IncidentType(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pagerduty:index/incidentType:IncidentType';

    /**
     * Returns true if the given object is an instance of IncidentType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IncidentType {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IncidentType.__pulumiType;
    }

    /**
     * A succinct description of the Incident Type.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The display name of the Incident Type. Usage of the prefixes PD, PagerDuty, or the suffixes Default, or (Default) is prohibited.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * State of this Incident Type object. Defaults to true if not provided.
     */
    declare public readonly enabled: pulumi.Output<boolean>;
    /**
     * The name of the Incident Type. Usage of the suffix `_default` is prohibited. This cannot be changed once the incident type has been created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The parent type of the Incident Type. Either name or id of the parent type can be used.
     */
    declare public readonly parentType: pulumi.Output<string>;
    /**
     * A string that determines the schema of the object.
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;

    /**
     * Create a IncidentType resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IncidentTypeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IncidentTypeArgs | IncidentTypeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IncidentTypeState | undefined;
            resourceInputs["description"] = state?.description;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["enabled"] = state?.enabled;
            resourceInputs["name"] = state?.name;
            resourceInputs["parentType"] = state?.parentType;
            resourceInputs["type"] = state?.type;
        } else {
            const args = argsOrState as IncidentTypeArgs | undefined;
            if (args?.displayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if (args?.parentType === undefined && !opts.urn) {
                throw new Error("Missing required property 'parentType'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["enabled"] = args?.enabled;
            resourceInputs["name"] = args?.name;
            resourceInputs["parentType"] = args?.parentType;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IncidentType.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IncidentType resources.
 */
export interface IncidentTypeState {
    /**
     * A succinct description of the Incident Type.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the Incident Type. Usage of the prefixes PD, PagerDuty, or the suffixes Default, or (Default) is prohibited.
     */
    displayName?: pulumi.Input<string>;
    /**
     * State of this Incident Type object. Defaults to true if not provided.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name of the Incident Type. Usage of the suffix `_default` is prohibited. This cannot be changed once the incident type has been created.
     */
    name?: pulumi.Input<string>;
    /**
     * The parent type of the Incident Type. Either name or id of the parent type can be used.
     */
    parentType?: pulumi.Input<string>;
    /**
     * A string that determines the schema of the object.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IncidentType resource.
 */
export interface IncidentTypeArgs {
    /**
     * A succinct description of the Incident Type.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the Incident Type. Usage of the prefixes PD, PagerDuty, or the suffixes Default, or (Default) is prohibited.
     */
    displayName: pulumi.Input<string>;
    /**
     * State of this Incident Type object. Defaults to true if not provided.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name of the Incident Type. Usage of the suffix `_default` is prohibited. This cannot be changed once the incident type has been created.
     */
    name?: pulumi.Input<string>;
    /**
     * The parent type of the Incident Type. Either name or id of the parent type can be used.
     */
    parentType: pulumi.Input<string>;
}
