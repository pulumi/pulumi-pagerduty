// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * A [schedule](https://v2.developer.pagerduty.com/v2/page/api-reference#!/Schedules/get_schedules) determines the time periods that users are on call. Only on-call users are eligible to receive notifications from incidents.
 * 
 * 
 * ## Example Usage
 * 
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pagerduty from "@pulumi/pagerduty";
 * 
 * const example = new pagerduty.User("example", {
 *     email: "125.greenholt.earline@graham.name",
 *     teams: [pagerduty_team_example.id],
 * });
 * const foo = new pagerduty.Schedule("foo", {
 *     layers: [{
 *         name: "Night Shift",
 *         restrictions: [{
 *             durationSeconds: 32400,
 *             startTimeOfDay: "08:00:00",
 *             type: "dailyRestriction",
 *         }],
 *         rotationTurnLengthSeconds: 86400,
 *         rotationVirtualStart: "2015-11-06T20:00:00-05:00",
 *         start: "2015-11-06T20:00:00-05:00",
 *         users: [pagerduty_user_foo.id],
 *     }],
 *     timeZone: "America/New_York",
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-pagerduty/blob/master/website/docs/r/schedule.html.markdown.
 */
export class Schedule extends pulumi.CustomResource {
    /**
     * Get an existing Schedule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ScheduleState, opts?: pulumi.CustomResourceOptions): Schedule {
        return new Schedule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pagerduty:index/schedule:Schedule';

    /**
     * Returns true if the given object is an instance of Schedule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Schedule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Schedule.__pulumiType;
    }

    /**
     * The description of the schedule
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A schedule layer block. Schedule layers documented below.
     */
    public readonly layers!: pulumi.Output<outputs.ScheduleLayer[]>;
    /**
     * The name of the schedule.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Any on-call schedule entries that pass the date range bounds will be truncated at the bounds, unless the parameter `overflow` is passed. For instance, if your schedule is a rotation that changes daily at midnight UTC, and your date range is from `2011-06-01T10:00:00Z` to `2011-06-01T14:00:00Z`:
     * If you don't pass the overflow=true parameter, you will get one schedule entry returned with a start of `2011-06-01T10:00:00Z` and end of `2011-06-01T14:00:00Z`.
     * If you do pass the `overflow` parameter, you will get one schedule entry returned with a start of `2011-06-01T00:00:00Z` and end of `2011-06-02T00:00:00Z`.
     */
    public readonly overflow!: pulumi.Output<boolean | undefined>;
    /**
     * The time zone of the schedule (e.g Europe/Berlin).
     */
    public readonly timeZone!: pulumi.Output<string>;

    /**
     * Create a Schedule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScheduleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ScheduleArgs | ScheduleState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as ScheduleState | undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["layers"] = state ? state.layers : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["overflow"] = state ? state.overflow : undefined;
            inputs["timeZone"] = state ? state.timeZone : undefined;
        } else {
            const args = argsOrState as ScheduleArgs | undefined;
            if (!args || args.layers === undefined) {
                throw new Error("Missing required property 'layers'");
            }
            if (!args || args.timeZone === undefined) {
                throw new Error("Missing required property 'timeZone'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["layers"] = args ? args.layers : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["overflow"] = args ? args.overflow : undefined;
            inputs["timeZone"] = args ? args.timeZone : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Schedule.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Schedule resources.
 */
export interface ScheduleState {
    /**
     * The description of the schedule
     */
    readonly description?: pulumi.Input<string>;
    /**
     * A schedule layer block. Schedule layers documented below.
     */
    readonly layers?: pulumi.Input<pulumi.Input<inputs.ScheduleLayer>[]>;
    /**
     * The name of the schedule.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Any on-call schedule entries that pass the date range bounds will be truncated at the bounds, unless the parameter `overflow` is passed. For instance, if your schedule is a rotation that changes daily at midnight UTC, and your date range is from `2011-06-01T10:00:00Z` to `2011-06-01T14:00:00Z`:
     * If you don't pass the overflow=true parameter, you will get one schedule entry returned with a start of `2011-06-01T10:00:00Z` and end of `2011-06-01T14:00:00Z`.
     * If you do pass the `overflow` parameter, you will get one schedule entry returned with a start of `2011-06-01T00:00:00Z` and end of `2011-06-02T00:00:00Z`.
     */
    readonly overflow?: pulumi.Input<boolean>;
    /**
     * The time zone of the schedule (e.g Europe/Berlin).
     */
    readonly timeZone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Schedule resource.
 */
export interface ScheduleArgs {
    /**
     * The description of the schedule
     */
    readonly description?: pulumi.Input<string>;
    /**
     * A schedule layer block. Schedule layers documented below.
     */
    readonly layers: pulumi.Input<pulumi.Input<inputs.ScheduleLayer>[]>;
    /**
     * The name of the schedule.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Any on-call schedule entries that pass the date range bounds will be truncated at the bounds, unless the parameter `overflow` is passed. For instance, if your schedule is a rotation that changes daily at midnight UTC, and your date range is from `2011-06-01T10:00:00Z` to `2011-06-01T14:00:00Z`:
     * If you don't pass the overflow=true parameter, you will get one schedule entry returned with a start of `2011-06-01T10:00:00Z` and end of `2011-06-01T14:00:00Z`.
     * If you do pass the `overflow` parameter, you will get one schedule entry returned with a start of `2011-06-01T00:00:00Z` and end of `2011-06-02T00:00:00Z`.
     */
    readonly overflow?: pulumi.Input<boolean>;
    /**
     * The time zone of the schedule (e.g Europe/Berlin).
     */
    readonly timeZone: pulumi.Input<string>;
}
