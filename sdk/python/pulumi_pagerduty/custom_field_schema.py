# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['CustomFieldSchemaArgs', 'CustomFieldSchema']

@pulumi.input_type
class CustomFieldSchemaArgs:
    def __init__(__self__, *,
                 title: pulumi.Input[str],
                 description: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a CustomFieldSchema resource.
        :param pulumi.Input[str] title: The title of the field schema.
        :param pulumi.Input[str] description: The description of the field schema.
        """
        pulumi.set(__self__, "title", title)
        if description is not None:
            pulumi.set(__self__, "description", description)

    @property
    @pulumi.getter
    def title(self) -> pulumi.Input[str]:
        """
        The title of the field schema.
        """
        return pulumi.get(self, "title")

    @title.setter
    def title(self, value: pulumi.Input[str]):
        pulumi.set(self, "title", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description of the field schema.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)


@pulumi.input_type
class _CustomFieldSchemaState:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[str]] = None,
                 title: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering CustomFieldSchema resources.
        :param pulumi.Input[str] description: The description of the field schema.
        :param pulumi.Input[str] title: The title of the field schema.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if title is not None:
            pulumi.set(__self__, "title", title)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description of the field schema.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def title(self) -> Optional[pulumi.Input[str]]:
        """
        The title of the field schema.
        """
        return pulumi.get(self, "title")

    @title.setter
    def title(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "title", value)


class CustomFieldSchema(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 title: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        A [Custom Field Schema](https://support.pagerduty.com/docs/custom-fields#schemas) is a set of Custom Fields which can be set on an incident.

        > The Custom Fields feature is currently available in Early Access.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_pagerduty as pagerduty

        cs_impact = pagerduty.CustomField("csImpact", datatype="string")
        my_schema = pagerduty.CustomFieldSchema("mySchema",
            description="Fields used on incidents",
            title="My Schema")
        ```

        ## Import

        Fields schemas can be imported using the `id`, e.g.

        ```sh
         $ pulumi import pagerduty:index/customFieldSchema:CustomFieldSchema my_schema PLBP09X
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: The description of the field schema.
        :param pulumi.Input[str] title: The title of the field schema.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: CustomFieldSchemaArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        A [Custom Field Schema](https://support.pagerduty.com/docs/custom-fields#schemas) is a set of Custom Fields which can be set on an incident.

        > The Custom Fields feature is currently available in Early Access.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_pagerduty as pagerduty

        cs_impact = pagerduty.CustomField("csImpact", datatype="string")
        my_schema = pagerduty.CustomFieldSchema("mySchema",
            description="Fields used on incidents",
            title="My Schema")
        ```

        ## Import

        Fields schemas can be imported using the `id`, e.g.

        ```sh
         $ pulumi import pagerduty:index/customFieldSchema:CustomFieldSchema my_schema PLBP09X
        ```

        :param str resource_name: The name of the resource.
        :param CustomFieldSchemaArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CustomFieldSchemaArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 title: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CustomFieldSchemaArgs.__new__(CustomFieldSchemaArgs)

            __props__.__dict__["description"] = description
            if title is None and not opts.urn:
                raise TypeError("Missing required property 'title'")
            __props__.__dict__["title"] = title
        super(CustomFieldSchema, __self__).__init__(
            'pagerduty:index/customFieldSchema:CustomFieldSchema',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            description: Optional[pulumi.Input[str]] = None,
            title: Optional[pulumi.Input[str]] = None) -> 'CustomFieldSchema':
        """
        Get an existing CustomFieldSchema resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: The description of the field schema.
        :param pulumi.Input[str] title: The title of the field schema.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CustomFieldSchemaState.__new__(_CustomFieldSchemaState)

        __props__.__dict__["description"] = description
        __props__.__dict__["title"] = title
        return CustomFieldSchema(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        The description of the field schema.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def title(self) -> pulumi.Output[str]:
        """
        The title of the field schema.
        """
        return pulumi.get(self, "title")

