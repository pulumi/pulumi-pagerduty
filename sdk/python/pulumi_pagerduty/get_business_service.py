# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class GetBusinessServiceResult:
    """
    A collection of values returned by getBusinessService.
    """
    def __init__(__self__, id=None, name=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        The provider-assigned unique ID for this managed resource.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        The short name of the found business service.
        """
class AwaitableGetBusinessServiceResult(GetBusinessServiceResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetBusinessServiceResult(
            id=self.id,
            name=self.name)

def get_business_service(name=None,opts=None):
    """
    Use this data source to get information about a specific [business service](https://api-reference.pagerduty.com/#!/Business_Services/get_business_services).

    ## Example Usage



    ```python
    import pulumi
    import pulumi_pagerduty as pagerduty

    example = pagerduty.get_business_service(name="My Service")
    ```



    :param str name: The business service name to use to find a business service in the PagerDuty API.
    """
    __args__ = dict()


    __args__['name'] = name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('pagerduty:index/getBusinessService:getBusinessService', __args__, opts=opts).value

    return AwaitableGetBusinessServiceResult(
        id=__ret__.get('id'),
        name=__ret__.get('name'))
