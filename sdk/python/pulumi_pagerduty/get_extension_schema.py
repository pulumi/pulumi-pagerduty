# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class GetExtensionSchemaResult:
    """
    A collection of values returned by getExtensionSchema.
    """
    def __init__(__self__, id=None, name=None, type=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        The provider-assigned unique ID for this managed resource.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        The short name of the found extension vendor.
        """
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        __self__.type = type
        """
        The generic service type for this extension vendor.
        """
class AwaitableGetExtensionSchemaResult(GetExtensionSchemaResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetExtensionSchemaResult(
            id=self.id,
            name=self.name,
            type=self.type)

def get_extension_schema(name=None,opts=None):
    """
    Use this data source to get information about a specific [extension](https://v2.developer.pagerduty.com/v2/page/api-reference#!/Extension_Schemas/get_extension_schemas) vendor that you can use for a service (e.g: Slack, Generic Webhook, ServiceNow).

    ## Example Usage



    ```python
    import pulumi
    import pulumi_pagerduty as pagerduty

    webhook = pagerduty.get_extension_schema(name="Generic V2 Webhook")
    example_user = pagerduty.User("exampleUser",
        email="howard.james@example.domain",
        teams=[pagerduty_team["example"]["id"]])
    foo = pagerduty.EscalationPolicy("foo",
        num_loops=2,
        rules=[{
            "escalationDelayInMinutes": 10,
            "target": [{
                "id": example_user.id,
                "type": "user",
            }],
        }])
    example_service = pagerduty.Service("exampleService",
        acknowledgement_timeout=600,
        auto_resolve_timeout=14400,
        escalation_policy=pagerduty_escalation_policy["example"]["id"])
    slack = pagerduty.Extension("slack",
        endpoint_url="https://generic_webhook_url/XXXXXX/BBBBBB",
        extension_objects=[example_service.id],
        extension_schema=webhook.id)
    ```



    :param str name: The extension name to use to find an extension vendor in the PagerDuty API.
    """
    __args__ = dict()


    __args__['name'] = name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('pagerduty:index/getExtensionSchema:getExtensionSchema', __args__, opts=opts).value

    return AwaitableGetExtensionSchemaResult(
        id=__ret__.get('id'),
        name=__ret__.get('name'),
        type=__ret__.get('type'))
