# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class GetUserResult:
    """
    A collection of values returned by getUser.
    """
    def __init__(__self__, email=None, id=None, name=None):
        if email and not isinstance(email, str):
            raise TypeError("Expected argument 'email' to be a str")
        __self__.email = email
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        The provider-assigned unique ID for this managed resource.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        The short name of the found user.
        """
class AwaitableGetUserResult(GetUserResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetUserResult(
            email=self.email,
            id=self.id,
            name=self.name)

def get_user(email=None,opts=None):
    """
    Use this data source to get information about a specific [user](https://v2.developer.pagerduty.com/v2/page/api-reference#!/Users/get_users) that you can use for other PagerDuty resources.

    ## Example Usage



    ```python
    import pulumi
    import pulumi_pagerduty as pagerduty

    me = pagerduty.get_user(email="me@example.com")
    foo = pagerduty.EscalationPolicy("foo",
        num_loops=2,
        rules=[{
            "escalationDelayInMinutes": 10,
            "target": [{
                "id": me.id,
                "type": "user",
            }],
        }])
    ```



    :param str email: The email to use to find a user in the PagerDuty API.
    """
    __args__ = dict()


    __args__['email'] = email
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('pagerduty:index/getUser:getUser', __args__, opts=opts).value

    return AwaitableGetUserResult(
        email=__ret__.get('email'),
        id=__ret__.get('id'),
        name=__ret__.get('name'))
